
DMX_controler.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000772  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000007c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000077  00000000  00000000  000007e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000003b9  00000000  00000000  0000085d  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000001e0  00000000  00000000  00000c16  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000f85  00000000  00000000  00000df6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000090  00000000  00000000  00001d7c  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000147  00000000  00000000  00001e0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000101  00000000  00000000  00001f53  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000048  00000000  00000000  00002054  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 51 01 	call	0x2a2	; 0x2a2 <main>
  64:	0c 94 b7 03 	jmp	0x76e	; 0x76e <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <setPin>:
  6c:	0f 93       	push	r16
  6e:	0f ef       	ldi	r16, 0xFF	; 255
  70:	05 bb       	out	0x15, r16	; 21
	...
  7a:	08 e0       	ldi	r16, 0x08	; 8

0000007c <cas1>:
  7c:	00 00       	nop
  7e:	0a 95       	dec	r16
  80:	e9 f7       	brne	.-6      	; 0x7c <cas1>
  82:	0f 91       	pop	r16
  84:	08 95       	ret

00000086 <clrPin>:
  86:	0f 93       	push	r16
  88:	00 e0       	ldi	r16, 0x00	; 0
  8a:	05 bb       	out	0x15, r16	; 21
	...
  94:	08 e0       	ldi	r16, 0x08	; 8

00000096 <cas2>:
  96:	00 00       	nop
  98:	0a 95       	dec	r16
  9a:	e9 f7       	brne	.-6      	; 0x96 <cas2>
  9c:	0f 91       	pop	r16
  9e:	08 95       	ret

000000a0 <breakDMX>:
    "brne cas2"   "\n\t"
    "pop R16"	   "\n\t"
	"RET"		   "\n\t"
			 );
void breakDMX(){
	asm("call clrPin" 	);	
  a0:	0e 94 43 00 	call	0x86	; 0x86 <clrPin>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  a4:	80 e6       	ldi	r24, 0x60	; 96
  a6:	91 e0       	ldi	r25, 0x01	; 1
  a8:	01 97       	sbiw	r24, 0x01	; 1
  aa:	f1 f7       	brne	.-4      	; 0xa8 <breakDMX+0x8>
	_delay_us(88);
}
  ac:	08 95       	ret

000000ae <mabDMX>:
void mabDMX(){
	asm("call setPin");
  ae:	0e 94 36 00 	call	0x6c	; 0x6c <setPin>
	asm("call setPin");
  b2:	0e 94 36 00 	call	0x6c	; 0x6c <setPin>
	...
	asm("NOP");
	asm("NOP");
	asm("NOP");
	asm("NOP");	
	asm("NOP");
	asm("NOP");
  de:	00 00       	nop
}
  e0:	08 95       	ret

000000e2 <sendByte>:
void sendByte(unsigned char data){
int i;
	
	asm("rcall clrPin");
  e2:	d1 df       	rcall	.-94     	; 0x86 <clrPin>
  e4:	21 e0       	ldi	r18, 0x01	; 1
  e6:	30 e0       	ldi	r19, 0x00	; 0
  e8:	40 e0       	ldi	r20, 0x00	; 0
  ea:	50 e0       	ldi	r21, 0x00	; 0
	for (i=1;i<129;i=i<<1){
		if ((data&i)==i)	asm("rcall setPin");
  ec:	68 2f       	mov	r22, r24
  ee:	70 e0       	ldi	r23, 0x00	; 0
  f0:	c9 01       	movw	r24, r18
  f2:	86 23       	and	r24, r22
  f4:	97 23       	and	r25, r23
  f6:	82 17       	cp	r24, r18
  f8:	93 07       	cpc	r25, r19
  fa:	11 f4       	brne	.+4      	; 0x100 <sendByte+0x1e>
  fc:	b7 df       	rcall	.-146    	; 0x6c <setPin>
  fe:	01 c0       	rjmp	.+2      	; 0x102 <sendByte+0x20>
		else				asm("rcall clrPin");
 100:	c2 df       	rcall	.-124    	; 0x86 <clrPin>
}
void sendByte(unsigned char data){
int i;
	
	asm("rcall clrPin");
	for (i=1;i<129;i=i<<1){
 102:	22 0f       	add	r18, r18
 104:	33 1f       	adc	r19, r19
 106:	4f 5f       	subi	r20, 0xFF	; 255
 108:	5f 4f       	sbci	r21, 0xFF	; 255
 10a:	48 30       	cpi	r20, 0x08	; 8
 10c:	51 05       	cpc	r21, r1
 10e:	81 f7       	brne	.-32     	; 0xf0 <sendByte+0xe>
		if ((data&i)==i)	asm("rcall setPin");
		else				asm("rcall clrPin");
	}
	asm("rcall setPin");
 110:	ad df       	rcall	.-166    	; 0x6c <setPin>
	asm("rcall setPin");
 112:	ac df       	rcall	.-168    	; 0x6c <setPin>
	asm("rcall setPin");
 114:	ab df       	rcall	.-170    	; 0x6c <setPin>
	asm("rcall setPin");
 116:	aa df       	rcall	.-172    	; 0x6c <setPin>
}
 118:	08 95       	ret

0000011a <sendDMX>:
void sendDMX(unsigned char data[],int length){
 11a:	ef 92       	push	r14
 11c:	ff 92       	push	r15
 11e:	0f 93       	push	r16
 120:	1f 93       	push	r17
 122:	cf 93       	push	r28
 124:	df 93       	push	r29
 126:	7c 01       	movw	r14, r24
 128:	8b 01       	movw	r16, r22
    "brne cas2"   "\n\t"
    "pop R16"	   "\n\t"
	"RET"		   "\n\t"
			 );
void breakDMX(){
	asm("call clrPin" 	);	
 12a:	0e 94 43 00 	call	0x86	; 0x86 <clrPin>
 12e:	80 e6       	ldi	r24, 0x60	; 96
 130:	91 e0       	ldi	r25, 0x01	; 1
 132:	01 97       	sbiw	r24, 0x01	; 1
 134:	f1 f7       	brne	.-4      	; 0x132 <sendDMX+0x18>
	asm("rcall setPin");
}
void sendDMX(unsigned char data[],int length){
	int i;
	breakDMX();
	mabDMX();
 136:	0e 94 57 00 	call	0xae	; 0xae <mabDMX>
	sendByte(0x00);
 13a:	80 e0       	ldi	r24, 0x00	; 0
 13c:	0e 94 71 00 	call	0xe2	; 0xe2 <sendByte>
 140:	c0 e0       	ldi	r28, 0x00	; 0
 142:	d0 e0       	ldi	r29, 0x00	; 0
 144:	07 c0       	rjmp	.+14     	; 0x154 <sendDMX+0x3a>
	for(i=0;i<length;i++)
		sendByte(data[i]);
 146:	f7 01       	movw	r30, r14
 148:	ec 0f       	add	r30, r28
 14a:	fd 1f       	adc	r31, r29
 14c:	80 81       	ld	r24, Z
 14e:	0e 94 71 00 	call	0xe2	; 0xe2 <sendByte>
void sendDMX(unsigned char data[],int length){
	int i;
	breakDMX();
	mabDMX();
	sendByte(0x00);
	for(i=0;i<length;i++)
 152:	21 96       	adiw	r28, 0x01	; 1
 154:	c0 17       	cp	r28, r16
 156:	d1 07       	cpc	r29, r17
 158:	b4 f3       	brlt	.-20     	; 0x146 <sendDMX+0x2c>
		sendByte(data[i]);
}	
 15a:	df 91       	pop	r29
 15c:	cf 91       	pop	r28
 15e:	1f 91       	pop	r17
 160:	0f 91       	pop	r16
 162:	ff 90       	pop	r15
 164:	ef 90       	pop	r14
 166:	08 95       	ret

00000168 <setup>:

void setup(void){
	PORTA=0x00;
 168:	1b ba       	out	0x1b, r1	; 27
	DDRA=0x1E; 
 16a:	8e e1       	ldi	r24, 0x1E	; 30
 16c:	8a bb       	out	0x1a, r24	; 26
	PORTB=0x00;
 16e:	18 ba       	out	0x18, r1	; 24
	DDRB=0x00;
 170:	17 ba       	out	0x17, r1	; 23
	PORTC=0x01;
 172:	81 e0       	ldi	r24, 0x01	; 1
 174:	85 bb       	out	0x15, r24	; 21
	DDRC=0x01;
 176:	84 bb       	out	0x14, r24	; 20
	PORTD=0x01;
 178:	82 bb       	out	0x12, r24	; 18
	DDRD=0x01;
 17a:	81 bb       	out	0x11, r24	; 17
}
 17c:	08 95       	ret

0000017e <klavesnica>:
char klavesnica(char x,char y){
 17e:	98 2f       	mov	r25, r24
	PORTA|=0x0F;
 180:	8b b3       	in	r24, 0x1b	; 27
 182:	8f 60       	ori	r24, 0x0F	; 15
 184:	8b bb       	out	0x1b, r24	; 27
    switch(y){
 186:	62 30       	cpi	r22, 0x02	; 2
 188:	79 f0       	breq	.+30     	; 0x1a8 <klavesnica+0x2a>
 18a:	63 30       	cpi	r22, 0x03	; 3
 18c:	18 f4       	brcc	.+6      	; 0x194 <klavesnica+0x16>
 18e:	61 30       	cpi	r22, 0x01	; 1
 190:	89 f4       	brne	.+34     	; 0x1b4 <klavesnica+0x36>
 192:	0d c0       	rjmp	.+26     	; 0x1ae <klavesnica+0x30>
 194:	63 30       	cpi	r22, 0x03	; 3
 196:	29 f0       	breq	.+10     	; 0x1a2 <klavesnica+0x24>
 198:	64 30       	cpi	r22, 0x04	; 4
 19a:	61 f4       	brne	.+24     	; 0x1b4 <klavesnica+0x36>
        case 4: PORTA&=0b00001101; break;
 19c:	8b b3       	in	r24, 0x1b	; 27
 19e:	8d 70       	andi	r24, 0x0D	; 13
 1a0:	08 c0       	rjmp	.+16     	; 0x1b2 <klavesnica+0x34>
        case 3: PORTA&=0b00001011; break;
 1a2:	8b b3       	in	r24, 0x1b	; 27
 1a4:	8b 70       	andi	r24, 0x0B	; 11
 1a6:	05 c0       	rjmp	.+10     	; 0x1b2 <klavesnica+0x34>
        case 2: PORTA&=0b00000111; break;
 1a8:	8b b3       	in	r24, 0x1b	; 27
 1aa:	87 70       	andi	r24, 0x07	; 7
 1ac:	02 c0       	rjmp	.+4      	; 0x1b2 <klavesnica+0x34>
        case 1: PORTA&=0b00001111; break;
 1ae:	8b b3       	in	r24, 0x1b	; 27
 1b0:	8f 70       	andi	r24, 0x0F	; 15
 1b2:	8b bb       	out	0x1b, r24	; 27
    }
    switch(x){
 1b4:	92 30       	cpi	r25, 0x02	; 2
 1b6:	79 f0       	breq	.+30     	; 0x1d6 <klavesnica+0x58>
 1b8:	93 30       	cpi	r25, 0x03	; 3
 1ba:	21 f0       	breq	.+8      	; 0x1c4 <klavesnica+0x46>
 1bc:	91 30       	cpi	r25, 0x01	; 1
 1be:	31 f0       	breq	.+12     	; 0x1cc <klavesnica+0x4e>
 1c0:	80 e0       	ldi	r24, 0x00	; 0
 1c2:	08 95       	ret
        case 3: return !((PINA&0x20)>>5); break;
 1c4:	80 e0       	ldi	r24, 0x00	; 0
 1c6:	cd 99       	sbic	0x19, 5	; 25
 1c8:	09 c0       	rjmp	.+18     	; 0x1dc <klavesnica+0x5e>
 1ca:	03 c0       	rjmp	.+6      	; 0x1d2 <klavesnica+0x54>
        case 1: return !((PINA&0x40)>>6); break;
 1cc:	80 e0       	ldi	r24, 0x00	; 0
 1ce:	ce 99       	sbic	0x19, 6	; 25
 1d0:	05 c0       	rjmp	.+10     	; 0x1dc <klavesnica+0x5e>
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	08 95       	ret
        case 2: return !((PINA&0x80)>>7); break;
 1d6:	80 e0       	ldi	r24, 0x00	; 0
 1d8:	cf 9b       	sbis	0x19, 7	; 25
 1da:	81 e0       	ldi	r24, 0x01	; 1
        default: return 0;      break;
    }
}
 1dc:	08 95       	ret

000001de <klavesnicaPor>:
char klavesnicaPor(){
   if (klavesnica(1,1)==1)         	return '1';
 1de:	81 e0       	ldi	r24, 0x01	; 1
 1e0:	61 e0       	ldi	r22, 0x01	; 1
 1e2:	0e 94 bf 00 	call	0x17e	; 0x17e <klavesnica>
 1e6:	81 30       	cpi	r24, 0x01	; 1
 1e8:	11 f4       	brne	.+4      	; 0x1ee <klavesnicaPor+0x10>
 1ea:	81 e3       	ldi	r24, 0x31	; 49
 1ec:	08 95       	ret
    else if (klavesnica(2,1)==1)   	return '2';
 1ee:	82 e0       	ldi	r24, 0x02	; 2
 1f0:	61 e0       	ldi	r22, 0x01	; 1
 1f2:	0e 94 bf 00 	call	0x17e	; 0x17e <klavesnica>
 1f6:	81 30       	cpi	r24, 0x01	; 1
 1f8:	11 f4       	brne	.+4      	; 0x1fe <klavesnicaPor+0x20>
 1fa:	82 e3       	ldi	r24, 0x32	; 50
 1fc:	08 95       	ret
    else if (klavesnica(3,1)==1)   	return '3';
 1fe:	83 e0       	ldi	r24, 0x03	; 3
 200:	61 e0       	ldi	r22, 0x01	; 1
 202:	0e 94 bf 00 	call	0x17e	; 0x17e <klavesnica>
 206:	81 30       	cpi	r24, 0x01	; 1
 208:	11 f4       	brne	.+4      	; 0x20e <klavesnicaPor+0x30>
 20a:	83 e3       	ldi	r24, 0x33	; 51
 20c:	08 95       	ret
    else if (klavesnica(1,2)==1)   	return '4';
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	62 e0       	ldi	r22, 0x02	; 2
 212:	0e 94 bf 00 	call	0x17e	; 0x17e <klavesnica>
 216:	81 30       	cpi	r24, 0x01	; 1
 218:	11 f4       	brne	.+4      	; 0x21e <klavesnicaPor+0x40>
 21a:	84 e3       	ldi	r24, 0x34	; 52
 21c:	08 95       	ret
    else if (klavesnica(2,2)==1)   	return '5';
 21e:	82 e0       	ldi	r24, 0x02	; 2
 220:	62 e0       	ldi	r22, 0x02	; 2
 222:	0e 94 bf 00 	call	0x17e	; 0x17e <klavesnica>
 226:	81 30       	cpi	r24, 0x01	; 1
 228:	11 f4       	brne	.+4      	; 0x22e <klavesnicaPor+0x50>
 22a:	85 e3       	ldi	r24, 0x35	; 53
 22c:	08 95       	ret
    else if (klavesnica(3,2)==1)   	return '6';
 22e:	83 e0       	ldi	r24, 0x03	; 3
 230:	62 e0       	ldi	r22, 0x02	; 2
 232:	0e 94 bf 00 	call	0x17e	; 0x17e <klavesnica>
 236:	81 30       	cpi	r24, 0x01	; 1
 238:	11 f4       	brne	.+4      	; 0x23e <klavesnicaPor+0x60>
 23a:	86 e3       	ldi	r24, 0x36	; 54
 23c:	08 95       	ret
    else if (klavesnica(1,3)==1)   	return '7';
 23e:	81 e0       	ldi	r24, 0x01	; 1
 240:	63 e0       	ldi	r22, 0x03	; 3
 242:	0e 94 bf 00 	call	0x17e	; 0x17e <klavesnica>
 246:	81 30       	cpi	r24, 0x01	; 1
 248:	11 f4       	brne	.+4      	; 0x24e <klavesnicaPor+0x70>
 24a:	87 e3       	ldi	r24, 0x37	; 55
 24c:	08 95       	ret
    else if (klavesnica(2,3)==1)   	return '8';
 24e:	82 e0       	ldi	r24, 0x02	; 2
 250:	63 e0       	ldi	r22, 0x03	; 3
 252:	0e 94 bf 00 	call	0x17e	; 0x17e <klavesnica>
 256:	81 30       	cpi	r24, 0x01	; 1
 258:	11 f4       	brne	.+4      	; 0x25e <klavesnicaPor+0x80>
 25a:	88 e3       	ldi	r24, 0x38	; 56
 25c:	08 95       	ret
    else if (klavesnica(3,3)==1)   	return '9';
 25e:	83 e0       	ldi	r24, 0x03	; 3
 260:	63 e0       	ldi	r22, 0x03	; 3
 262:	0e 94 bf 00 	call	0x17e	; 0x17e <klavesnica>
 266:	81 30       	cpi	r24, 0x01	; 1
 268:	11 f4       	brne	.+4      	; 0x26e <klavesnicaPor+0x90>
 26a:	89 e3       	ldi	r24, 0x39	; 57
 26c:	08 95       	ret
    else if (klavesnica(2,4)==1)   	return '0';
 26e:	82 e0       	ldi	r24, 0x02	; 2
 270:	64 e0       	ldi	r22, 0x04	; 4
 272:	0e 94 bf 00 	call	0x17e	; 0x17e <klavesnica>
 276:	81 30       	cpi	r24, 0x01	; 1
 278:	11 f4       	brne	.+4      	; 0x27e <klavesnicaPor+0xa0>
 27a:	80 e3       	ldi	r24, 0x30	; 48
 27c:	08 95       	ret
    else if (klavesnica(1,4)==1)	return '_';
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	64 e0       	ldi	r22, 0x04	; 4
 282:	0e 94 bf 00 	call	0x17e	; 0x17e <klavesnica>
 286:	81 30       	cpi	r24, 0x01	; 1
 288:	11 f4       	brne	.+4      	; 0x28e <klavesnicaPor+0xb0>
 28a:	8f e5       	ldi	r24, 0x5F	; 95
 28c:	08 95       	ret
	else if (klavesnica(3,4)==1)	return 'O';
 28e:	83 e0       	ldi	r24, 0x03	; 3
 290:	64 e0       	ldi	r22, 0x04	; 4
 292:	0e 94 bf 00 	call	0x17e	; 0x17e <klavesnica>
 296:	81 30       	cpi	r24, 0x01	; 1
 298:	11 f0       	breq	.+4      	; 0x29e <klavesnicaPor+0xc0>
 29a:	8f ef       	ldi	r24, 0xFF	; 255
 29c:	08 95       	ret
 29e:	8f e4       	ldi	r24, 0x4F	; 79
	else return -1;
}
 2a0:	08 95       	ret

000002a2 <main>:
int main(void){
 2a2:	2f 92       	push	r2
 2a4:	3f 92       	push	r3
 2a6:	4f 92       	push	r4
 2a8:	5f 92       	push	r5
 2aa:	6f 92       	push	r6
 2ac:	7f 92       	push	r7
 2ae:	8f 92       	push	r8
 2b0:	9f 92       	push	r9
 2b2:	af 92       	push	r10
 2b4:	bf 92       	push	r11
 2b6:	cf 92       	push	r12
 2b8:	df 92       	push	r13
 2ba:	ef 92       	push	r14
 2bc:	ff 92       	push	r15
 2be:	0f 93       	push	r16
 2c0:	1f 93       	push	r17
 2c2:	df 93       	push	r29
 2c4:	cf 93       	push	r28
 2c6:	cd b7       	in	r28, 0x3d	; 61
 2c8:	de b7       	in	r29, 0x3e	; 62
 2ca:	ae 97       	sbiw	r28, 0x2e	; 46
 2cc:	0f b6       	in	r0, 0x3f	; 63
 2ce:	f8 94       	cli
 2d0:	de bf       	out	0x3e, r29	; 62
 2d2:	0f be       	out	0x3f, r0	; 63
 2d4:	cd bf       	out	0x3d, r28	; 61
setup();
 2d6:	0e 94 b4 00 	call	0x168	; 0x168 <setup>
 2da:	3e 01       	movw	r6, r28
 2dc:	08 94       	sec
 2de:	61 1c       	adc	r6, r1
 2e0:	71 1c       	adc	r7, r1
 2e2:	f3 01       	movw	r30, r6
unsigned char dmx[40];
int por;
int dir=0;
unsigned char jas = 255;
char last_push='0';
for(por=0;por<40;por++) dmx[por] = 0;
 2e4:	ce 01       	movw	r24, r28
 2e6:	89 96       	adiw	r24, 0x29	; 41
 2e8:	11 92       	st	Z+, r1
 2ea:	e8 17       	cp	r30, r24
 2ec:	f9 07       	cpc	r31, r25
 2ee:	e1 f7       	brne	.-8      	; 0x2e8 <main+0x46>
		sendDMX(dmx,30);
 2f0:	5e 01       	movw	r10, r28
 2f2:	08 94       	sec
 2f4:	a1 1c       	adc	r10, r1
 2f6:	b1 1c       	adc	r11, r1
 2f8:	c5 01       	movw	r24, r10
 2fa:	6e e1       	ldi	r22, 0x1E	; 30
 2fc:	70 e0       	ldi	r23, 0x00	; 0
 2fe:	0e 94 8d 00 	call	0x11a	; 0x11a <sendDMX>
 302:	e8 e2       	ldi	r30, 0x28	; 40
 304:	ce 2e       	mov	r12, r30
 306:	d1 2c       	mov	r13, r1
 308:	88 24       	eor	r8, r8
 30a:	99 24       	eor	r9, r9
 30c:	ff 24       	eor	r15, r15
 30e:	fa 94       	dec	r15
 310:	10 e3       	ldi	r17, 0x30	; 48
    			 dmx[7] = 0;	//kruhy
    			 dmx[8] = 0;
    			 dmx[9] = 0;
    			 dmx[10] = 0;
				 //-----------------------
    			 dmx[11]=88;		//polgula
 312:	78 e5       	ldi	r23, 0x58	; 88
 314:	e7 2e       	mov	r14, r23
				 dmx[12]=255;
 316:	0f ef       	ldi	r16, 0xFF	; 255
				  dmx[21]=0;     
    			  dmx[22]=0;      
    			  dmx[23]=0;       
    			  dmx[24]=0;       
    			  dmx[25]=20;       
				  dmx[26]=150;	
 318:	66 e9       	ldi	r22, 0x96	; 150
 31a:	56 2e       	mov	r5, r22
				  dmx[29]=0;     
    			  dmx[30]=0;      
    			  dmx[31]=0;       
    			  dmx[32]=0;       
    			  dmx[33]=80;       
				  dmx[34]=100;	
 31c:	54 e6       	ldi	r21, 0x64	; 100
 31e:	45 2e       	mov	r4, r21
 320:	40 e9       	ldi	r20, 0x90	; 144
 322:	24 2e       	mov	r2, r20
 324:	41 e0       	ldi	r20, 0x01	; 1
 326:	34 2e       	mov	r3, r20
    			  dmx[33]=80;       
				  dmx[34]=100;	
				  //------------------------ 
				  last_push = '0';	break;	
//-----------------------------------------------------------  
		case '_':for(por=0;por<27;por++) dmx[por]=0;
 328:	ce 01       	movw	r24, r28
 32a:	4c 96       	adiw	r24, 0x1c	; 28
 32c:	9c a7       	std	Y+44, r25	; 0x2c
 32e:	8b a7       	std	Y+43, r24	; 0x2b
				  dmx[34]=0;	
				  //------------------------ 
    			dir =1;
			}
			else{ 
				for(por=0;por<36;por++) dmx[por]=0;
 330:	ce 01       	movw	r24, r28
 332:	85 96       	adiw	r24, 0x25	; 37
 334:	9e a7       	std	Y+46, r25	; 0x2e
 336:	8d a7       	std	Y+45, r24	; 0x2d
			por = 0;
		}
		else por++;
	
	}
	sendDMX(dmx,35);	
 338:	ba a6       	std	Y+42, r11	; 0x2a
 33a:	a9 a6       	std	Y+41, r10	; 0x29
 33c:	b9 a4       	ldd	r11, Y+41	; 0x29
 33e:	aa a4       	ldd	r10, Y+42	; 0x2a
unsigned char jas = 255;
char last_push='0';
for(por=0;por<40;por++) dmx[por] = 0;
		sendDMX(dmx,30);
while(1){
	switch(klavesnicaPor()){
 340:	0e 94 ef 00 	call	0x1de	; 0x1de <klavesnicaPor>
 344:	85 33       	cpi	r24, 0x35	; 53
 346:	09 f4       	brne	.+2      	; 0x34a <main+0xa8>
 348:	a2 c0       	rjmp	.+324    	; 0x48e <main+0x1ec>
 34a:	86 33       	cpi	r24, 0x36	; 54
 34c:	90 f4       	brcc	.+36     	; 0x372 <main+0xd0>
 34e:	82 33       	cpi	r24, 0x32	; 50
 350:	31 f1       	breq	.+76     	; 0x39e <main+0xfc>
 352:	83 33       	cpi	r24, 0x33	; 51
 354:	38 f4       	brcc	.+14     	; 0x364 <main+0xc2>
 356:	80 33       	cpi	r24, 0x30	; 48
 358:	09 f4       	brne	.+2      	; 0x35c <main+0xba>
 35a:	60 c1       	rjmp	.+704    	; 0x61c <main+0x37a>
 35c:	81 33       	cpi	r24, 0x31	; 49
 35e:	09 f0       	breq	.+2      	; 0x362 <main+0xc0>
 360:	a2 c1       	rjmp	.+836    	; 0x6a6 <main+0x404>
 362:	1f c0       	rjmp	.+62     	; 0x3a2 <main+0x100>
 364:	83 33       	cpi	r24, 0x33	; 51
 366:	09 f4       	brne	.+2      	; 0x36a <main+0xc8>
 368:	46 c0       	rjmp	.+140    	; 0x3f6 <main+0x154>
 36a:	84 33       	cpi	r24, 0x34	; 52
 36c:	09 f0       	breq	.+2      	; 0x370 <main+0xce>
 36e:	9b c1       	rjmp	.+822    	; 0x6a6 <main+0x404>
 370:	68 c0       	rjmp	.+208    	; 0x442 <main+0x1a0>
 372:	88 33       	cpi	r24, 0x38	; 56
 374:	09 f4       	brne	.+2      	; 0x378 <main+0xd6>
 376:	fd c0       	rjmp	.+506    	; 0x572 <main+0x2d0>
 378:	89 33       	cpi	r24, 0x39	; 57
 37a:	38 f4       	brcc	.+14     	; 0x38a <main+0xe8>
 37c:	86 33       	cpi	r24, 0x36	; 54
 37e:	09 f4       	brne	.+2      	; 0x382 <main+0xe0>
 380:	ac c0       	rjmp	.+344    	; 0x4da <main+0x238>
 382:	87 33       	cpi	r24, 0x37	; 55
 384:	09 f0       	breq	.+2      	; 0x388 <main+0xe6>
 386:	8f c1       	rjmp	.+798    	; 0x6a6 <main+0x404>
 388:	ce c0       	rjmp	.+412    	; 0x526 <main+0x284>
 38a:	8f 34       	cpi	r24, 0x4F	; 79
 38c:	09 f4       	brne	.+2      	; 0x390 <main+0xee>
 38e:	7c c1       	rjmp	.+760    	; 0x688 <main+0x3e6>
 390:	8f 35       	cpi	r24, 0x5F	; 95
 392:	09 f4       	brne	.+2      	; 0x396 <main+0xf4>
 394:	6d c1       	rjmp	.+730    	; 0x670 <main+0x3ce>
 396:	89 33       	cpi	r24, 0x39	; 57
 398:	09 f0       	breq	.+2      	; 0x39c <main+0xfa>
 39a:	85 c1       	rjmp	.+778    	; 0x6a6 <main+0x404>
 39c:	14 c1       	rjmp	.+552    	; 0x5c6 <main+0x324>
 39e:	12 e3       	ldi	r17, 0x32	; 50
 3a0:	82 c1       	rjmp	.+772    	; 0x6a6 <main+0x404>
		case '1':dmx[0] = 0;		//pas
 3a2:	19 82       	std	Y+1, r1	; 0x01
				 dmx[1] = 0;
 3a4:	1a 82       	std	Y+2, r1	; 0x02
				 dmx[2] = 0;
 3a6:	1b 82       	std	Y+3, r1	; 0x03
				 dmx[3] = 240;
 3a8:	90 ef       	ldi	r25, 0xF0	; 240
 3aa:	9c 83       	std	Y+4, r25	; 0x04
    			 dmx[4] = 150;
 3ac:	5d 82       	std	Y+5, r5	; 0x05
				 dmx[5] = 0;
 3ae:	1e 82       	std	Y+6, r1	; 0x06
    			 dmx[6] = 255;
 3b0:	0f 83       	std	Y+7, r16	; 0x07
				 //-----------------------
    			 dmx[7] = 255;	//kruhy
 3b2:	08 87       	std	Y+8, r16	; 0x08
    			 dmx[8] = 0;
 3b4:	19 86       	std	Y+9, r1	; 0x09
    			 dmx[9] = 255;
 3b6:	0a 87       	std	Y+10, r16	; 0x0a
    			 dmx[10] = 195;
 3b8:	83 ec       	ldi	r24, 0xC3	; 195
 3ba:	8b 87       	std	Y+11, r24	; 0x0b
				 //-----------------------
    			 dmx[11]=88;		//polgula
 3bc:	ec 86       	std	Y+12, r14	; 0x0c
				 dmx[12]=255;
 3be:	0d 87       	std	Y+13, r16	; 0x0d
			     dmx[13]=0;     
 3c0:	1e 86       	std	Y+14, r1	; 0x0e
    			 dmx[14]=0;      
 3c2:	1f 86       	std	Y+15, r1	; 0x0f
    			 dmx[15]=0;       
 3c4:	18 8a       	std	Y+16, r1	; 0x10
    			 dmx[16]=0;       
 3c6:	19 8a       	std	Y+17, r1	; 0x11
    			 dmx[17]=0;       
 3c8:	1a 8a       	std	Y+18, r1	; 0x12
				 dmx[18]=255;
 3ca:	0b 8b       	std	Y+19, r16	; 0x13
				 //------------------------ 
			     dmx[19]=0;		//reflektory
 3cc:	1c 8a       	std	Y+20, r1	; 0x14
				 dmx[20]=0;
 3ce:	1d 8a       	std	Y+21, r1	; 0x15
				 dmx[21]=0;     
 3d0:	1e 8a       	std	Y+22, r1	; 0x16
    			 dmx[22]=0;      
 3d2:	1f 8a       	std	Y+23, r1	; 0x17
    			 dmx[23]=0;       
 3d4:	18 8e       	std	Y+24, r1	; 0x18
    			 dmx[24]=0;       
 3d6:	19 8e       	std	Y+25, r1	; 0x19
    			 dmx[25]=200;       
 3d8:	88 ec       	ldi	r24, 0xC8	; 200
 3da:	8a 8f       	std	Y+26, r24	; 0x1a
				 dmx[26]=250;	
 3dc:	8a ef       	ldi	r24, 0xFA	; 250
 3de:	8b 8f       	std	Y+27, r24	; 0x1b
				  //------------------------ 
				  dmx[27]=70;		//1x reflektor
 3e0:	86 e4       	ldi	r24, 0x46	; 70
 3e2:	8c 8f       	std	Y+28, r24	; 0x1c
				  dmx[28]=0;
 3e4:	1d 8e       	std	Y+29, r1	; 0x1d
				  dmx[29]=70;     
 3e6:	8e 8f       	std	Y+30, r24	; 0x1e
    			  dmx[30]=0;      
 3e8:	1f 8e       	std	Y+31, r1	; 0x1f
    			  dmx[31]=0;       
 3ea:	18 a2       	std	Y+32, r1	; 0x20
    			  dmx[32]=0;       
 3ec:	19 a2       	std	Y+33, r1	; 0x21
    			  dmx[33]=0;       
 3ee:	1a a2       	std	Y+34, r1	; 0x22
				  dmx[34]=0;	
 3f0:	1b a2       	std	Y+35, r1	; 0x23
 3f2:	11 e3       	ldi	r17, 0x31	; 49
 3f4:	58 c1       	rjmp	.+688    	; 0x6a6 <main+0x404>
				 last_push = '1';
				 break;
//-----------------------------------------------------------   
		case '2':last_push = '2'; 	break;	
//-----------------------------------------------------------  
		case '3':dmx[0] = 0;		//pas
 3f6:	19 82       	std	Y+1, r1	; 0x01
				 dmx[1] = 0;
 3f8:	1a 82       	std	Y+2, r1	; 0x02
				 dmx[2] = 0;
 3fa:	1b 82       	std	Y+3, r1	; 0x03
				 dmx[3] = 28;
 3fc:	8c e1       	ldi	r24, 0x1C	; 28
 3fe:	8c 83       	std	Y+4, r24	; 0x04
    			 dmx[4] = 0;
 400:	1d 82       	std	Y+5, r1	; 0x05
				 dmx[5] = 0;
 402:	1e 82       	std	Y+6, r1	; 0x06
				 dmx[6] = jas;
 404:	ff 82       	std	Y+7, r15	; 0x07
				 //-----------------------
    			 dmx[7] = 0;	//kruhy
 406:	18 86       	std	Y+8, r1	; 0x08
    			 dmx[8] = 0;
 408:	19 86       	std	Y+9, r1	; 0x09
    			 dmx[9] = 0;
 40a:	1a 86       	std	Y+10, r1	; 0x0a
    			 dmx[10] = 0;
 40c:	1b 86       	std	Y+11, r1	; 0x0b
				 //-----------------------
    			 dmx[11]=88;		//polgula
 40e:	ec 86       	std	Y+12, r14	; 0x0c
				 dmx[12]=255;
 410:	0d 87       	std	Y+13, r16	; 0x0d
				 dmx[13]=0;     
 412:	1e 86       	std	Y+14, r1	; 0x0e
    			 dmx[14]=0;      
 414:	1f 86       	std	Y+15, r1	; 0x0f
    			 dmx[15]=255;       
 416:	08 8b       	std	Y+16, r16	; 0x10
    			 dmx[16]=0;       
 418:	19 8a       	std	Y+17, r1	; 0x11
    			 dmx[17]=0;       
 41a:	1a 8a       	std	Y+18, r1	; 0x12
				 dmx[18]=0;
 41c:	1b 8a       	std	Y+19, r1	; 0x13
				 //------------------------ 
				 dmx[19]=0;		//reflektory
 41e:	1c 8a       	std	Y+20, r1	; 0x14
				 dmx[20]=jas;
 420:	fd 8a       	std	Y+21, r15	; 0x15
				 dmx[21]=0;     
 422:	1e 8a       	std	Y+22, r1	; 0x16
    			 dmx[22]=0;      
 424:	1f 8a       	std	Y+23, r1	; 0x17
    			 dmx[23]=0;       
 426:	18 8e       	std	Y+24, r1	; 0x18
    			 dmx[24]=0;       
 428:	19 8e       	std	Y+25, r1	; 0x19
    			 dmx[25]=0;       
 42a:	1a 8e       	std	Y+26, r1	; 0x1a
				 dmx[26]=255;
 42c:	0b 8f       	std	Y+27, r16	; 0x1b
				  //------------------------ 
				  dmx[27]=0;		//1x reflektor
 42e:	1c 8e       	std	Y+28, r1	; 0x1c
				  dmx[28]=jas;
 430:	fd 8e       	std	Y+29, r15	; 0x1d
				  dmx[29]=0;     
 432:	1e 8e       	std	Y+30, r1	; 0x1e
    			  dmx[30]=0;      
 434:	1f 8e       	std	Y+31, r1	; 0x1f
    			  dmx[31]=0;       
 436:	18 a2       	std	Y+32, r1	; 0x20
    			  dmx[32]=0;       
 438:	19 a2       	std	Y+33, r1	; 0x21
    			  dmx[33]=0;       
 43a:	1a a2       	std	Y+34, r1	; 0x22
				  dmx[34]=255;	
 43c:	0b a3       	std	Y+35, r16	; 0x23
 43e:	13 e3       	ldi	r17, 0x33	; 51
 440:	32 c1       	rjmp	.+612    	; 0x6a6 <main+0x404>
				  //------------------------ 
				 last_push = '3';
				 break;
//-----------------------------------------------------------    
		case '4': dmx[0] = 0;		//pas
 442:	19 82       	std	Y+1, r1	; 0x01
				 dmx[1] = 0;
 444:	1a 82       	std	Y+2, r1	; 0x02
				 dmx[2] = 0;
 446:	1b 82       	std	Y+3, r1	; 0x03
				 dmx[3] = 12;
 448:	8c e0       	ldi	r24, 0x0C	; 12
 44a:	8c 83       	std	Y+4, r24	; 0x04
    			 dmx[4] = 0;
 44c:	1d 82       	std	Y+5, r1	; 0x05
				 dmx[5] = 0;
 44e:	1e 82       	std	Y+6, r1	; 0x06
    			 dmx[6] = jas;
 450:	ff 82       	std	Y+7, r15	; 0x07
				 //-----------------------
    			 dmx[7] = 0;	//kruhy
 452:	18 86       	std	Y+8, r1	; 0x08
    			 dmx[8] = 0;
 454:	19 86       	std	Y+9, r1	; 0x09
    			 dmx[9] = 0;
 456:	1a 86       	std	Y+10, r1	; 0x0a
    			 dmx[10] = 0;
 458:	1b 86       	std	Y+11, r1	; 0x0b
				 //-----------------------
    			 dmx[11]=88;		//polgula
 45a:	ec 86       	std	Y+12, r14	; 0x0c
				 dmx[12]=255;
 45c:	0d 87       	std	Y+13, r16	; 0x0d
				 dmx[13]=0;     
 45e:	1e 86       	std	Y+14, r1	; 0x0e
    			 dmx[14]=255;      
 460:	0f 87       	std	Y+15, r16	; 0x0f
    			 dmx[15]=0;       
 462:	18 8a       	std	Y+16, r1	; 0x10
    			 dmx[16]=0;       
 464:	19 8a       	std	Y+17, r1	; 0x11
    			 dmx[17]=0;       
 466:	1a 8a       	std	Y+18, r1	; 0x12
				 dmx[18]=0;
 468:	1b 8a       	std	Y+19, r1	; 0x13
				 //------------------------ 
				 dmx[19]=jas;		//reflektory
 46a:	fc 8a       	std	Y+20, r15	; 0x14
				 dmx[20]=0;
 46c:	1d 8a       	std	Y+21, r1	; 0x15
				 dmx[21]=0;     
 46e:	1e 8a       	std	Y+22, r1	; 0x16
    			 dmx[22]=0;      
 470:	1f 8a       	std	Y+23, r1	; 0x17
    			 dmx[23]=0;       
 472:	18 8e       	std	Y+24, r1	; 0x18
    			 dmx[24]=0;       
 474:	19 8e       	std	Y+25, r1	; 0x19
    			 dmx[25]=0;       
 476:	1a 8e       	std	Y+26, r1	; 0x1a
				 dmx[26]=255;
 478:	0b 8f       	std	Y+27, r16	; 0x1b
				  //------------------------ 
				  dmx[27]=jas;		//1x reflektor
 47a:	fc 8e       	std	Y+28, r15	; 0x1c
				  dmx[28]=0;
 47c:	1d 8e       	std	Y+29, r1	; 0x1d
				  dmx[29]=0;     
 47e:	1e 8e       	std	Y+30, r1	; 0x1e
    			  dmx[30]=0;      
 480:	1f 8e       	std	Y+31, r1	; 0x1f
    			  dmx[31]=0;       
 482:	18 a2       	std	Y+32, r1	; 0x20
    			  dmx[32]=0;       
 484:	19 a2       	std	Y+33, r1	; 0x21
    			  dmx[33]=0;       
 486:	1a a2       	std	Y+34, r1	; 0x22
				  dmx[34]=255;	
 488:	0b a3       	std	Y+35, r16	; 0x23
 48a:	14 e3       	ldi	r17, 0x34	; 52
 48c:	0c c1       	rjmp	.+536    	; 0x6a6 <main+0x404>
				  //------------------------ 
				 last_push = '4';
				 break;
//-----------------------------------------------------------  	
		case '5':dmx[0] = 0;		//pas
 48e:	19 82       	std	Y+1, r1	; 0x01
				 dmx[1] = 0;
 490:	1a 82       	std	Y+2, r1	; 0x02
				 dmx[2] = 0;
 492:	1b 82       	std	Y+3, r1	; 0x03
				 dmx[3] = 20;
 494:	84 e1       	ldi	r24, 0x14	; 20
 496:	8c 83       	std	Y+4, r24	; 0x04
    			 dmx[4] = 0;
 498:	1d 82       	std	Y+5, r1	; 0x05
				 dmx[5] = 0;
 49a:	1e 82       	std	Y+6, r1	; 0x06
    			 dmx[6] = jas;
 49c:	ff 82       	std	Y+7, r15	; 0x07
				 //-----------------------
    			 dmx[7] = 0;	//kruhy
 49e:	18 86       	std	Y+8, r1	; 0x08
    			 dmx[8] = 0;
 4a0:	19 86       	std	Y+9, r1	; 0x09
    			 dmx[9] = 0;
 4a2:	1a 86       	std	Y+10, r1	; 0x0a
    			 dmx[10] = 0;
 4a4:	1b 86       	std	Y+11, r1	; 0x0b
				 //-----------------------
    			 dmx[11]=88;		//polgula
 4a6:	ec 86       	std	Y+12, r14	; 0x0c
				 dmx[12]=255;
 4a8:	0d 87       	std	Y+13, r16	; 0x0d
				 dmx[13]=0;     
 4aa:	1e 86       	std	Y+14, r1	; 0x0e
    			 dmx[14]=255;      
 4ac:	0f 87       	std	Y+15, r16	; 0x0f
    			 dmx[15]=255;       
 4ae:	08 8b       	std	Y+16, r16	; 0x10
    			 dmx[16]=0;       
 4b0:	19 8a       	std	Y+17, r1	; 0x11
    			 dmx[17]=0;       
 4b2:	1a 8a       	std	Y+18, r1	; 0x12
				 dmx[18]=0;
 4b4:	1b 8a       	std	Y+19, r1	; 0x13
				 //------------------------ 
				 dmx[19]=jas;		//reflektory
 4b6:	fc 8a       	std	Y+20, r15	; 0x14
				 dmx[20]=jas;
 4b8:	fd 8a       	std	Y+21, r15	; 0x15
				 dmx[21]=0;     
 4ba:	1e 8a       	std	Y+22, r1	; 0x16
    			 dmx[22]=0;      
 4bc:	1f 8a       	std	Y+23, r1	; 0x17
    			 dmx[23]=0;       
 4be:	18 8e       	std	Y+24, r1	; 0x18
    			 dmx[24]=0;       
 4c0:	19 8e       	std	Y+25, r1	; 0x19
    			 dmx[25]=0;       
 4c2:	1a 8e       	std	Y+26, r1	; 0x1a
				 dmx[26]=255;
 4c4:	0b 8f       	std	Y+27, r16	; 0x1b
				  //------------------------ 
				  dmx[27]=jas;		//1x reflektor
 4c6:	fc 8e       	std	Y+28, r15	; 0x1c
				  dmx[28]=jas;
 4c8:	fd 8e       	std	Y+29, r15	; 0x1d
				  dmx[29]=0;     
 4ca:	1e 8e       	std	Y+30, r1	; 0x1e
    			  dmx[30]=0;      
 4cc:	1f 8e       	std	Y+31, r1	; 0x1f
    			  dmx[31]=0;       
 4ce:	18 a2       	std	Y+32, r1	; 0x20
    			  dmx[32]=0;       
 4d0:	19 a2       	std	Y+33, r1	; 0x21
    			  dmx[33]=0;       
 4d2:	1a a2       	std	Y+34, r1	; 0x22
				  dmx[34]=255;	
 4d4:	0b a3       	std	Y+35, r16	; 0x23
 4d6:	15 e3       	ldi	r17, 0x35	; 53
 4d8:	e6 c0       	rjmp	.+460    	; 0x6a6 <main+0x404>
				  //------------------------ 
				 last_push = '5';
				 break;
//-----------------------------------------------------------   
		case '6': dmx[0] = 0;		//pas
 4da:	19 82       	std	Y+1, r1	; 0x01
				 dmx[1] = 0;
 4dc:	1a 82       	std	Y+2, r1	; 0x02
				 dmx[2] = 0;
 4de:	1b 82       	std	Y+3, r1	; 0x03
				 dmx[3] = 42;
 4e0:	8a e2       	ldi	r24, 0x2A	; 42
 4e2:	8c 83       	std	Y+4, r24	; 0x04
    			 dmx[4] = 0;
 4e4:	1d 82       	std	Y+5, r1	; 0x05
				 dmx[5] = 0;
 4e6:	1e 82       	std	Y+6, r1	; 0x06
    			 dmx[6] = jas;
 4e8:	ff 82       	std	Y+7, r15	; 0x07
				 //-----------------------
    			 dmx[7] = 0;	//kruhy
 4ea:	18 86       	std	Y+8, r1	; 0x08
    			 dmx[8] = 0;
 4ec:	19 86       	std	Y+9, r1	; 0x09
    			 dmx[9] = 0;
 4ee:	1a 86       	std	Y+10, r1	; 0x0a
    			 dmx[10] = 0;
 4f0:	1b 86       	std	Y+11, r1	; 0x0b
				 //-----------------------
    			 dmx[11]=88;		//polgula
 4f2:	ec 86       	std	Y+12, r14	; 0x0c
			     dmx[12]=255;
 4f4:	0d 87       	std	Y+13, r16	; 0x0d
				 dmx[13]=0;     
 4f6:	1e 86       	std	Y+14, r1	; 0x0e
    			 dmx[14]=0;      
 4f8:	1f 86       	std	Y+15, r1	; 0x0f
    			 dmx[15]=0;       
 4fa:	18 8a       	std	Y+16, r1	; 0x10
    			 dmx[16]=255;       
 4fc:	09 8b       	std	Y+17, r16	; 0x11
    			 dmx[17]=0;       
 4fe:	1a 8a       	std	Y+18, r1	; 0x12
				 dmx[18]=0;
 500:	1b 8a       	std	Y+19, r1	; 0x13
				 //------------------------ 
				 dmx[19]=0;		//reflektory
 502:	1c 8a       	std	Y+20, r1	; 0x14
				 dmx[20]=0;
 504:	1d 8a       	std	Y+21, r1	; 0x15
				 dmx[21]=jas;     
 506:	fe 8a       	std	Y+22, r15	; 0x16
    			 dmx[22]=0;      
 508:	1f 8a       	std	Y+23, r1	; 0x17
    			 dmx[23]=0;       
 50a:	18 8e       	std	Y+24, r1	; 0x18
    			 dmx[24]=0;       
 50c:	19 8e       	std	Y+25, r1	; 0x19
    			 dmx[25]=0;       
 50e:	1a 8e       	std	Y+26, r1	; 0x1a
				 dmx[26]=255;
 510:	0b 8f       	std	Y+27, r16	; 0x1b
				  //------------------------ 
				  dmx[27]=0;		//1x reflektor
 512:	1c 8e       	std	Y+28, r1	; 0x1c
				  dmx[28]=0;
 514:	1d 8e       	std	Y+29, r1	; 0x1d
				  dmx[29]=jas;     
 516:	fe 8e       	std	Y+30, r15	; 0x1e
    			  dmx[30]=0;      
 518:	1f 8e       	std	Y+31, r1	; 0x1f
    			  dmx[31]=0;       
 51a:	18 a2       	std	Y+32, r1	; 0x20
    			  dmx[32]=0;       
 51c:	19 a2       	std	Y+33, r1	; 0x21
    			  dmx[33]=0;       
 51e:	1a a2       	std	Y+34, r1	; 0x22
				  dmx[34]=255;	
 520:	0b a3       	std	Y+35, r16	; 0x23
 522:	16 e3       	ldi	r17, 0x36	; 54
 524:	c0 c0       	rjmp	.+384    	; 0x6a6 <main+0x404>
				  //------------------------ 
				 last_push = '6';
				 break;
//-----------------------------------------------------------   
		case '7': dmx[0] = 0;		//pas
 526:	19 82       	std	Y+1, r1	; 0x01
				  dmx[1] = 0;
 528:	1a 82       	std	Y+2, r1	; 0x02
				  dmx[2] = 0;
 52a:	1b 82       	std	Y+3, r1	; 0x03
				  dmx[3] = 50;
 52c:	82 e3       	ldi	r24, 0x32	; 50
 52e:	8c 83       	std	Y+4, r24	; 0x04
    			  dmx[4] = 0;
 530:	1d 82       	std	Y+5, r1	; 0x05
				  dmx[5] = 0;
 532:	1e 82       	std	Y+6, r1	; 0x06
    			  dmx[6] = jas;
 534:	ff 82       	std	Y+7, r15	; 0x07
				  //-----------------------
    			  dmx[7] = 255;	//kruhy
 536:	08 87       	std	Y+8, r16	; 0x08
    			  dmx[8] = 0;
 538:	19 86       	std	Y+9, r1	; 0x09
    			  dmx[9] = 255;
 53a:	0a 87       	std	Y+10, r16	; 0x0a
    			  dmx[10] = 0;
 53c:	1b 86       	std	Y+11, r1	; 0x0b
				  //-----------------------
    			  dmx[11]=88;		//polgula
 53e:	ec 86       	std	Y+12, r14	; 0x0c
				  dmx[12]=255;
 540:	0d 87       	std	Y+13, r16	; 0x0d
				  dmx[13]=0;     
 542:	1e 86       	std	Y+14, r1	; 0x0e
    			  dmx[14]=255;      
 544:	0f 87       	std	Y+15, r16	; 0x0f
    			  dmx[15]=0;       
 546:	18 8a       	std	Y+16, r1	; 0x10
    			  dmx[16]=255;       
 548:	09 8b       	std	Y+17, r16	; 0x11
    			  dmx[17]=0;       
 54a:	1a 8a       	std	Y+18, r1	; 0x12
				  dmx[18]=0;
 54c:	1b 8a       	std	Y+19, r1	; 0x13
				  //------------------------ 
				  dmx[19]=jas;		//reflektory
 54e:	fc 8a       	std	Y+20, r15	; 0x14
				  dmx[20]=0;
 550:	1d 8a       	std	Y+21, r1	; 0x15
				  dmx[21]=jas;     
 552:	fe 8a       	std	Y+22, r15	; 0x16
    			  dmx[22]=0;      
 554:	1f 8a       	std	Y+23, r1	; 0x17
    			  dmx[23]=0;       
 556:	18 8e       	std	Y+24, r1	; 0x18
    			  dmx[24]=0;       
 558:	19 8e       	std	Y+25, r1	; 0x19
    			  dmx[25]=0;       
 55a:	1a 8e       	std	Y+26, r1	; 0x1a
				  dmx[26]=255;
 55c:	0b 8f       	std	Y+27, r16	; 0x1b
				  //------------------------ 
				  dmx[27]=jas;		//1x reflektor
 55e:	fc 8e       	std	Y+28, r15	; 0x1c
				  dmx[28]=0;
 560:	1d 8e       	std	Y+29, r1	; 0x1d
				  dmx[29]=jas;     
 562:	fe 8e       	std	Y+30, r15	; 0x1e
    			  dmx[30]=0;      
 564:	1f 8e       	std	Y+31, r1	; 0x1f
    			  dmx[31]=0;       
 566:	18 a2       	std	Y+32, r1	; 0x20
    			  dmx[32]=0;       
 568:	19 a2       	std	Y+33, r1	; 0x21
    			  dmx[33]=0;       
 56a:	1a a2       	std	Y+34, r1	; 0x22
				  dmx[34]=255;	
 56c:	0b a3       	std	Y+35, r16	; 0x23
 56e:	17 e3       	ldi	r17, 0x37	; 55
 570:	9a c0       	rjmp	.+308    	; 0x6a6 <main+0x404>
				  //------------------------ 
				  last_push = '7';
				  break;
//-----------------------------------------------------------  
		case '8': dmx[0] = 0;		//pas
 572:	19 82       	std	Y+1, r1	; 0x01
				  dmx[1] = 0;
 574:	1a 82       	std	Y+2, r1	; 0x02
				  dmx[2] = 0;
 576:	1b 82       	std	Y+3, r1	; 0x03
				  dmx[3] = 68;
 578:	94 e4       	ldi	r25, 0x44	; 68
 57a:	9c 83       	std	Y+4, r25	; 0x04
    			  dmx[4] = 240;
 57c:	80 ef       	ldi	r24, 0xF0	; 240
 57e:	8d 83       	std	Y+5, r24	; 0x05
				  dmx[5] = 0;
 580:	1e 82       	std	Y+6, r1	; 0x06
    			  dmx[6] = 255;
 582:	0f 83       	std	Y+7, r16	; 0x07
				  //-----------------------
    			  dmx[7] = 255;	//kruhy
 584:	08 87       	std	Y+8, r16	; 0x08
    			  dmx[8] = 36;
 586:	94 e2       	ldi	r25, 0x24	; 36
 588:	99 87       	std	Y+9, r25	; 0x09
    			  dmx[9] = 255;
 58a:	0a 87       	std	Y+10, r16	; 0x0a
    			  dmx[10] = 0;
 58c:	1b 86       	std	Y+11, r1	; 0x0b
				  //-----------------------
    			  dmx[11]=0;		//polgula
 58e:	1c 86       	std	Y+12, r1	; 0x0c
				  dmx[12]=255;
 590:	0d 87       	std	Y+13, r16	; 0x0d
				  dmx[13]=0;     
 592:	1e 86       	std	Y+14, r1	; 0x0e
    			  dmx[14]=0;      
 594:	1f 86       	std	Y+15, r1	; 0x0f
    			  dmx[15]=255;       
 596:	08 8b       	std	Y+16, r16	; 0x10
    			  dmx[16]=0;       
 598:	19 8a       	std	Y+17, r1	; 0x11
    			  dmx[17]=255;       
 59a:	0a 8b       	std	Y+18, r16	; 0x12
				  dmx[18]=0;
 59c:	1b 8a       	std	Y+19, r1	; 0x13
				  //------------------------ 
				  dmx[19]=0;		//reflektory
 59e:	1c 8a       	std	Y+20, r1	; 0x14
				  dmx[20]=0;
 5a0:	1d 8a       	std	Y+21, r1	; 0x15
				  dmx[21]=0;     
 5a2:	1e 8a       	std	Y+22, r1	; 0x16
    			  dmx[22]=0;      
 5a4:	1f 8a       	std	Y+23, r1	; 0x17
    			  dmx[23]=0;       
 5a6:	18 8e       	std	Y+24, r1	; 0x18
    			  dmx[24]=0;       
 5a8:	19 8e       	std	Y+25, r1	; 0x19
    			  dmx[25]=20;       
 5aa:	84 e1       	ldi	r24, 0x14	; 20
 5ac:	8a 8f       	std	Y+26, r24	; 0x1a
				  dmx[26]=150;	
 5ae:	5b 8e       	std	Y+27, r5	; 0x1b
				  //------------------------ 
				  dmx[27]=0;		//1x reflektor
 5b0:	1c 8e       	std	Y+28, r1	; 0x1c
				  dmx[28]=0;
 5b2:	1d 8e       	std	Y+29, r1	; 0x1d
				  dmx[29]=0;     
 5b4:	1e 8e       	std	Y+30, r1	; 0x1e
    			  dmx[30]=0;      
 5b6:	1f 8e       	std	Y+31, r1	; 0x1f
    			  dmx[31]=0;       
 5b8:	18 a2       	std	Y+32, r1	; 0x20
    			  dmx[32]=0;       
 5ba:	19 a2       	std	Y+33, r1	; 0x21
    			  dmx[33]=80;       
 5bc:	90 e5       	ldi	r25, 0x50	; 80
 5be:	9a a3       	std	Y+34, r25	; 0x22
				  dmx[34]=100;	
 5c0:	4b a2       	std	Y+35, r4	; 0x23
 5c2:	18 e3       	ldi	r17, 0x38	; 56
 5c4:	70 c0       	rjmp	.+224    	; 0x6a6 <main+0x404>
				  //------------------------ 
				  last_push = '8';
				  break;	
//-----------------------------------------------------------  
		case '9': dmx[0] = 0;		//pas
 5c6:	19 82       	std	Y+1, r1	; 0x01
				  dmx[1] = 0;
 5c8:	1a 82       	std	Y+2, r1	; 0x02
				  dmx[2] = 0;
 5ca:	1b 82       	std	Y+3, r1	; 0x03
				  dmx[3] = 100;
 5cc:	4c 82       	std	Y+4, r4	; 0x04
    			  dmx[4] = 230;
 5ce:	86 ee       	ldi	r24, 0xE6	; 230
 5d0:	8d 83       	std	Y+5, r24	; 0x05
				  dmx[5] = 0;
 5d2:	1e 82       	std	Y+6, r1	; 0x06
    			  dmx[6] = 255;
 5d4:	0f 83       	std	Y+7, r16	; 0x07
				  //-----------------------
    			  dmx[7] = 255;	//kruhy
 5d6:	08 87       	std	Y+8, r16	; 0x08
    			  dmx[8] = 0;
 5d8:	19 86       	std	Y+9, r1	; 0x09
    			  dmx[9] = 255;
 5da:	0a 87       	std	Y+10, r16	; 0x0a
    			  dmx[10] = 35;
 5dc:	93 e2       	ldi	r25, 0x23	; 35
 5de:	9b 87       	std	Y+11, r25	; 0x0b
				  //-----------------------
    			  dmx[11]=0;		//polgula
 5e0:	1c 86       	std	Y+12, r1	; 0x0c
				  dmx[12]=255;
 5e2:	0d 87       	std	Y+13, r16	; 0x0d
				  dmx[13]=0;     
 5e4:	1e 86       	std	Y+14, r1	; 0x0e
    			  dmx[14]=255;      
 5e6:	0f 87       	std	Y+15, r16	; 0x0f
    			  dmx[15]=0;       
 5e8:	18 8a       	std	Y+16, r1	; 0x10
    			  dmx[16]=0;       
 5ea:	19 8a       	std	Y+17, r1	; 0x11
    			  dmx[17]=255;       
 5ec:	0a 8b       	std	Y+18, r16	; 0x12
				  dmx[18]=55;
 5ee:	87 e3       	ldi	r24, 0x37	; 55
 5f0:	8b 8b       	std	Y+19, r24	; 0x13
				  //------------------------ 
				  dmx[19]=0;		//3x reflektory
 5f2:	1c 8a       	std	Y+20, r1	; 0x14
				  dmx[20]=0;
 5f4:	1d 8a       	std	Y+21, r1	; 0x15
				  dmx[21]=0;     
 5f6:	1e 8a       	std	Y+22, r1	; 0x16
    			  dmx[22]=0;      
 5f8:	1f 8a       	std	Y+23, r1	; 0x17
    			  dmx[23]=0;       
 5fa:	18 8e       	std	Y+24, r1	; 0x18
    			  dmx[24]=0;       
 5fc:	19 8e       	std	Y+25, r1	; 0x19
    			  dmx[25]=160;       
 5fe:	80 ea       	ldi	r24, 0xA0	; 160
 600:	8a 8f       	std	Y+26, r24	; 0x1a
				  dmx[26]=215;	
 602:	87 ed       	ldi	r24, 0xD7	; 215
 604:	8b 8f       	std	Y+27, r24	; 0x1b
				  //------------------------ 
				  dmx[27]=0;		//1x reflektor
 606:	1c 8e       	std	Y+28, r1	; 0x1c
				  dmx[28]=0;
 608:	1d 8e       	std	Y+29, r1	; 0x1d
				  dmx[29]=0;     
 60a:	1e 8e       	std	Y+30, r1	; 0x1e
    			  dmx[30]=0;
 60c:	1f 8e       	std	Y+31, r1	; 0x1f
				        
    			  dmx[31]=0;       
 60e:	18 a2       	std	Y+32, r1	; 0x20
    			  dmx[32]=0;       
 610:	19 a2       	std	Y+33, r1	; 0x21
    			  dmx[33]=150;       
 612:	5a a2       	std	Y+34, r5	; 0x22
				  dmx[34]=1;	
 614:	81 e0       	ldi	r24, 0x01	; 1
 616:	8b a3       	std	Y+35, r24	; 0x23
 618:	19 e3       	ldi	r17, 0x39	; 57
 61a:	45 c0       	rjmp	.+138    	; 0x6a6 <main+0x404>
				  //------------------------ 
				  last_push = '9';	break;
//-----------------------------------------------------------	  	
		case '0': dmx[0] = 0;		//pas
 61c:	19 82       	std	Y+1, r1	; 0x01
				  dmx[1] = 0;
 61e:	1a 82       	std	Y+2, r1	; 0x02
				  dmx[2] = 0;
 620:	1b 82       	std	Y+3, r1	; 0x03
				  dmx[3] = 180;
 622:	84 eb       	ldi	r24, 0xB4	; 180
 624:	8c 83       	std	Y+4, r24	; 0x04
    			  dmx[4] = 220;
 626:	9c ed       	ldi	r25, 0xDC	; 220
 628:	9d 83       	std	Y+5, r25	; 0x05
				  dmx[5] = 0;
 62a:	1e 82       	std	Y+6, r1	; 0x06
    			  dmx[6] = 255;
 62c:	0f 83       	std	Y+7, r16	; 0x07
				  //-----------------------
    			  dmx[7] = 255;	//kruhy
 62e:	08 87       	std	Y+8, r16	; 0x08
    			  dmx[8] = 0;
 630:	19 86       	std	Y+9, r1	; 0x09
    			  dmx[9] = 255;
 632:	0a 87       	std	Y+10, r16	; 0x0a
    			  dmx[10] = 0;
 634:	1b 86       	std	Y+11, r1	; 0x0b
				  //-----------------------
    			  dmx[11]=0;		//polgula
 636:	1c 86       	std	Y+12, r1	; 0x0c
				  dmx[12]=255;
 638:	0d 87       	std	Y+13, r16	; 0x0d
				  dmx[13]=0;     
 63a:	1e 86       	std	Y+14, r1	; 0x0e
    			  dmx[14]=255;      
 63c:	0f 87       	std	Y+15, r16	; 0x0f
    			  dmx[15]=0;       
 63e:	18 8a       	std	Y+16, r1	; 0x10
    			  dmx[16]=0;       
 640:	19 8a       	std	Y+17, r1	; 0x11
    			  dmx[17]=255;       
 642:	0a 8b       	std	Y+18, r16	; 0x12
				  dmx[18]=40;
 644:	88 e2       	ldi	r24, 0x28	; 40
 646:	8b 8b       	std	Y+19, r24	; 0x13
				  //------------------------ 
				  dmx[19]=0;		//reflektory
 648:	1c 8a       	std	Y+20, r1	; 0x14
				  dmx[20]=0;
 64a:	1d 8a       	std	Y+21, r1	; 0x15
				  dmx[21]=0;     
 64c:	1e 8a       	std	Y+22, r1	; 0x16
    			  dmx[22]=0;      
 64e:	1f 8a       	std	Y+23, r1	; 0x17
    			  dmx[23]=0;       
 650:	18 8e       	std	Y+24, r1	; 0x18
    			  dmx[24]=210;       
 652:	82 ed       	ldi	r24, 0xD2	; 210
 654:	89 8f       	std	Y+25, r24	; 0x19
    			  dmx[25]=0;       
 656:	1a 8e       	std	Y+26, r1	; 0x1a
				  dmx[26]=220;	
 658:	9b 8f       	std	Y+27, r25	; 0x1b
				  //------------------------ 
				  dmx[27]=0;		//1x reflektor
 65a:	1c 8e       	std	Y+28, r1	; 0x1c
				  dmx[28]=0;
 65c:	1d 8e       	std	Y+29, r1	; 0x1d
				  dmx[29]=0;     
 65e:	1e 8e       	std	Y+30, r1	; 0x1e
    			  dmx[30]=0;      
 660:	1f 8e       	std	Y+31, r1	; 0x1f
    			  dmx[31]=0;       
 662:	18 a2       	std	Y+32, r1	; 0x20
    			  dmx[32]=0;       
 664:	19 a2       	std	Y+33, r1	; 0x21
    			  dmx[33]=80;       
 666:	80 e5       	ldi	r24, 0x50	; 80
 668:	8a a3       	std	Y+34, r24	; 0x22
				  dmx[34]=100;	
 66a:	4b a2       	std	Y+35, r4	; 0x23
 66c:	10 e3       	ldi	r17, 0x30	; 48
 66e:	1b c0       	rjmp	.+54     	; 0x6a6 <main+0x404>
				  //------------------------ 
				  last_push = '0';	break;	
 670:	f3 01       	movw	r30, r6
//-----------------------------------------------------------  
		case '_':for(por=0;por<27;por++) dmx[por]=0;
 672:	11 92       	st	Z+, r1
 674:	8b a5       	ldd	r24, Y+43	; 0x2b
 676:	9c a5       	ldd	r25, Y+44	; 0x2c
 678:	e8 17       	cp	r30, r24
 67a:	f9 07       	cpc	r31, r25
 67c:	d1 f7       	brne	.-12     	; 0x672 <main+0x3d0>
 67e:	3b e1       	ldi	r19, 0x1B	; 27
 680:	c3 2e       	mov	r12, r19
 682:	d1 2c       	mov	r13, r1
 684:	1f e5       	ldi	r17, 0x5F	; 95
 686:	0f c0       	rjmp	.+30     	; 0x6a6 <main+0x404>
				 last_push = '_';	break;
//-----------------------------------------------------------  
		case 'O': if (jas==255)	jas=30;
 688:	9f ef       	ldi	r25, 0xFF	; 255
 68a:	f9 16       	cp	r15, r25
 68c:	19 f4       	brne	.+6      	; 0x694 <main+0x3f2>
 68e:	2e e1       	ldi	r18, 0x1E	; 30
 690:	f2 2e       	mov	r15, r18
 692:	02 c0       	rjmp	.+4      	; 0x698 <main+0x3f6>
 694:	ff 24       	eor	r15, r15
 696:	fa 94       	dec	r15
 698:	88 e8       	ldi	r24, 0x88	; 136
 69a:	93 e1       	ldi	r25, 0x13	; 19
 69c:	f1 01       	movw	r30, r2
 69e:	31 97       	sbiw	r30, 0x01	; 1
 6a0:	f1 f7       	brne	.-4      	; 0x69e <main+0x3fc>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 6a2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 6a4:	d9 f7       	brne	.-10     	; 0x69c <main+0x3fa>
				  else           jas=255;
				  _delay_ms(500);
				  break;		
//-----------------------------------------------------------  
	}
	if (last_push >= '3' && last_push <= '8'){
 6a6:	81 2f       	mov	r24, r17
 6a8:	83 53       	subi	r24, 0x33	; 51
 6aa:	86 30       	cpi	r24, 0x06	; 6
 6ac:	a8 f4       	brcc	.+42     	; 0x6d8 <main+0x436>
		if(por == 200){ 
 6ae:	88 ec       	ldi	r24, 0xC8	; 200
 6b0:	c8 16       	cp	r12, r24
 6b2:	d1 04       	cpc	r13, r1
 6b4:	09 f0       	breq	.+2      	; 0x6b8 <main+0x416>
 6b6:	4c c0       	rjmp	.+152    	; 0x750 <main+0x4ae>
 6b8:	8c 85       	ldd	r24, Y+12	; 0x0c
			if (dir == 0){
 6ba:	81 14       	cp	r8, r1
 6bc:	91 04       	cpc	r9, r1
 6be:	21 f4       	brne	.+8      	; 0x6c8 <main+0x426>
				if (dmx[11]<100)	dmx[11]+=1;
 6c0:	84 36       	cpi	r24, 0x64	; 100
 6c2:	c0 f5       	brcc	.+112    	; 0x734 <main+0x492>
 6c4:	8f 5f       	subi	r24, 0xFF	; 255
 6c6:	04 c0       	rjmp	.+8      	; 0x6d0 <main+0x42e>
    			else dir =1;
			}
			else{ 
				if (dmx[11]>0)	dmx[11]-=1;
 6c8:	88 23       	and	r24, r24
 6ca:	09 f4       	brne	.+2      	; 0x6ce <main+0x42c>
 6cc:	45 c0       	rjmp	.+138    	; 0x758 <main+0x4b6>
 6ce:	81 50       	subi	r24, 0x01	; 1
 6d0:	8c 87       	std	Y+12, r24	; 0x0c
 6d2:	cc 24       	eor	r12, r12
 6d4:	dd 24       	eor	r13, r13
 6d6:	44 c0       	rjmp	.+136    	; 0x760 <main+0x4be>
			}
			por = 0;
		}
		else por++;
	}
	else if(last_push == '2'){
 6d8:	12 33       	cpi	r17, 0x32	; 50
 6da:	09 f0       	breq	.+2      	; 0x6de <main+0x43c>
 6dc:	41 c0       	rjmp	.+130    	; 0x760 <main+0x4be>
		if(por > 30){ 
 6de:	9f e1       	ldi	r25, 0x1F	; 31
 6e0:	c9 16       	cp	r12, r25
 6e2:	d1 04       	cpc	r13, r1
 6e4:	ac f1       	brlt	.+106    	; 0x750 <main+0x4ae>
			if (dir == 0){
 6e6:	89 28       	or	r8, r9
 6e8:	59 f5       	brne	.+86     	; 0x740 <main+0x49e>
 				  dmx[0] = 255;		//pas
 6ea:	09 83       	std	Y+1, r16	; 0x01
				  dmx[1] = 255;
 6ec:	0a 83       	std	Y+2, r16	; 0x02
				  dmx[2] = 255;
 6ee:	0b 83       	std	Y+3, r16	; 0x03
				  dmx[3] = 0;
 6f0:	1c 82       	std	Y+4, r1	; 0x04
    			  dmx[4] = 0;
 6f2:	1d 82       	std	Y+5, r1	; 0x05
				  dmx[5] = 0;
 6f4:	1e 82       	std	Y+6, r1	; 0x06
    			  dmx[6] = 255;
 6f6:	0f 83       	std	Y+7, r16	; 0x07
				  //-----------------------
    			  dmx[7] = 255;	//kruhy
 6f8:	08 87       	std	Y+8, r16	; 0x08
    			  dmx[8] = 36;
 6fa:	84 e2       	ldi	r24, 0x24	; 36
 6fc:	89 87       	std	Y+9, r24	; 0x09
    			  dmx[9] = 255;
 6fe:	0a 87       	std	Y+10, r16	; 0x0a
    			  dmx[10] = 70;
 700:	86 e4       	ldi	r24, 0x46	; 70
 702:	8b 87       	std	Y+11, r24	; 0x0b
				  //-----------------------
    			  dmx[11]=0;		//polgula
 704:	1c 86       	std	Y+12, r1	; 0x0c
				  dmx[12]=255;
 706:	0d 87       	std	Y+13, r16	; 0x0d
				  dmx[13]=0;     
 708:	1e 86       	std	Y+14, r1	; 0x0e
    			  dmx[14]=255;      
 70a:	0f 87       	std	Y+15, r16	; 0x0f
    			  dmx[15]=255;       
 70c:	08 8b       	std	Y+16, r16	; 0x10
    			  dmx[16]=255;       
 70e:	09 8b       	std	Y+17, r16	; 0x11
    			  dmx[17]=255;       
 710:	0a 8b       	std	Y+18, r16	; 0x12
				  dmx[18]=0;
 712:	1b 8a       	std	Y+19, r1	; 0x13
				  //------------------------ 
				  dmx[19]=255;		//reflektory
 714:	0c 8b       	std	Y+20, r16	; 0x14
				  dmx[20]=255;
 716:	0d 8b       	std	Y+21, r16	; 0x15
				  dmx[21]=255;     
 718:	0e 8b       	std	Y+22, r16	; 0x16
    			  dmx[22]=255;      
 71a:	0f 8b       	std	Y+23, r16	; 0x17
    			  dmx[23]=0;       
 71c:	18 8e       	std	Y+24, r1	; 0x18
    			  dmx[24]=0;       
 71e:	19 8e       	std	Y+25, r1	; 0x19
    			  dmx[25]=0;       
 720:	1a 8e       	std	Y+26, r1	; 0x1a
				  dmx[26]=0;	
 722:	1b 8e       	std	Y+27, r1	; 0x1b
				  //------------------------ 
				  dmx[27]=255;		//1x reflektor
 724:	0c 8f       	std	Y+28, r16	; 0x1c
				  dmx[28]=255;
 726:	0d 8f       	std	Y+29, r16	; 0x1d
				  dmx[29]=255;     
 728:	0e 8f       	std	Y+30, r16	; 0x1e
    			  dmx[30]=255;      
 72a:	0f 8f       	std	Y+31, r16	; 0x1f
    			  dmx[31]=0;       
 72c:	18 a2       	std	Y+32, r1	; 0x20
    			  dmx[32]=0;       
 72e:	19 a2       	std	Y+33, r1	; 0x21
    			  dmx[33]=0;       
 730:	1a a2       	std	Y+34, r1	; 0x22
				  dmx[34]=0;	
 732:	1b a2       	std	Y+35, r1	; 0x23
 734:	cc 24       	eor	r12, r12
 736:	dd 24       	eor	r13, r13
 738:	91 e0       	ldi	r25, 0x01	; 1
 73a:	89 2e       	mov	r8, r25
 73c:	91 2c       	mov	r9, r1
 73e:	10 c0       	rjmp	.+32     	; 0x760 <main+0x4be>
 740:	f3 01       	movw	r30, r6
				  //------------------------ 
    			dir =1;
			}
			else{ 
				for(por=0;por<36;por++) dmx[por]=0;
 742:	11 92       	st	Z+, r1
 744:	8d a5       	ldd	r24, Y+45	; 0x2d
 746:	9e a5       	ldd	r25, Y+46	; 0x2e
 748:	e8 17       	cp	r30, r24
 74a:	f9 07       	cpc	r31, r25
 74c:	d1 f7       	brne	.-12     	; 0x742 <main+0x4a0>
 74e:	04 c0       	rjmp	.+8      	; 0x758 <main+0x4b6>
				dir = 0;
			}
			por = 0;
		}
		else por++;
 750:	08 94       	sec
 752:	c1 1c       	adc	r12, r1
 754:	d1 1c       	adc	r13, r1
 756:	04 c0       	rjmp	.+8      	; 0x760 <main+0x4be>
 758:	cc 24       	eor	r12, r12
 75a:	dd 24       	eor	r13, r13
 75c:	88 24       	eor	r8, r8
 75e:	99 24       	eor	r9, r9
	
	}
	sendDMX(dmx,35);	
 760:	8b 2d       	mov	r24, r11
 762:	9a 2d       	mov	r25, r10
 764:	63 e2       	ldi	r22, 0x23	; 35
 766:	70 e0       	ldi	r23, 0x00	; 0
 768:	0e 94 8d 00 	call	0x11a	; 0x11a <sendDMX>
 76c:	e9 cd       	rjmp	.-1070   	; 0x340 <main+0x9e>

0000076e <_exit>:
 76e:	f8 94       	cli

00000770 <__stop_program>:
 770:	ff cf       	rjmp	.-2      	; 0x770 <__stop_program>
