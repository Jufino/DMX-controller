
DMX_controler.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000cea  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000d3e  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000077  00000000  00000000  00000d5e  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000004a7  00000000  00000000  00000dd5  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000227  00000000  00000000  0000127c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00001512  00000000  00000000  000014a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000090  00000000  00000000  000029b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000184  00000000  00000000  00002a48  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000001b9  00000000  00000000  00002bcc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea ee       	ldi	r30, 0xEA	; 234
  68:	fc e0       	ldi	r31, 0x0C	; 12
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 8b 01 	call	0x316	; 0x316 <main>
  8a:	0c 94 73 06 	jmp	0xce6	; 0xce6 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <setPin>:
  92:	0f 93       	push	r16
  94:	0f ef       	ldi	r16, 0xFF	; 255
  96:	05 bb       	out	0x15, r16	; 21
  98:	00 00       	nop
  9a:	00 00       	nop
  9c:	00 00       	nop
  9e:	08 e0       	ldi	r16, 0x08	; 8

000000a0 <cas1>:
  a0:	00 00       	nop
  a2:	0a 95       	dec	r16
  a4:	e9 f7       	brne	.-6      	; 0xa0 <cas1>
  a6:	0f 91       	pop	r16
  a8:	08 95       	ret

000000aa <clrPin>:
  aa:	0f 93       	push	r16
  ac:	00 e0       	ldi	r16, 0x00	; 0
  ae:	05 bb       	out	0x15, r16	; 21
	...
  b8:	09 e0       	ldi	r16, 0x09	; 9

000000ba <cas2>:
  ba:	00 00       	nop
  bc:	0a 95       	dec	r16
  be:	e9 f7       	brne	.-6      	; 0xba <cas2>
  c0:	0f 91       	pop	r16
  c2:	08 95       	ret

000000c4 <breakDMX>:
    "brne cas2"   "\n\t"
    "pop R16"	   "\n\t"
	"RET"		   "\n\t"
			 );
void breakDMX(){
	asm("call clrPin" 	);	
  c4:	0e 94 55 00 	call	0xaa	; 0xaa <clrPin>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  c8:	80 e6       	ldi	r24, 0x60	; 96
  ca:	91 e0       	ldi	r25, 0x01	; 1
  cc:	01 97       	sbiw	r24, 0x01	; 1
  ce:	f1 f7       	brne	.-4      	; 0xcc <breakDMX+0x8>
	_delay_us(88);
}
  d0:	08 95       	ret

000000d2 <mabDMX>:
void mabDMX(){
	asm("call setPin");
  d2:	0e 94 49 00 	call	0x92	; 0x92 <setPin>
	asm("call setPin");
  d6:	0e 94 49 00 	call	0x92	; 0x92 <setPin>
	...
	asm("NOP");
	asm("NOP");
	asm("NOP");
	asm("NOP");	
	asm("NOP");
	asm("NOP");
 102:	00 00       	nop
}
 104:	08 95       	ret

00000106 <sendByte>:
void sendByte(unsigned char data){
int i;
	
	asm("rcall clrPin");
 106:	d1 df       	rcall	.-94     	; 0xaa <clrPin>
 108:	21 e0       	ldi	r18, 0x01	; 1
 10a:	30 e0       	ldi	r19, 0x00	; 0
 10c:	40 e0       	ldi	r20, 0x00	; 0
 10e:	50 e0       	ldi	r21, 0x00	; 0
	for (i=1;i<129;i=i<<1){
		if ((data&i)==i)	asm("rcall setPin");
 110:	68 2f       	mov	r22, r24
 112:	70 e0       	ldi	r23, 0x00	; 0
 114:	c9 01       	movw	r24, r18
 116:	86 23       	and	r24, r22
 118:	97 23       	and	r25, r23
 11a:	82 17       	cp	r24, r18
 11c:	93 07       	cpc	r25, r19
 11e:	11 f4       	brne	.+4      	; 0x124 <sendByte+0x1e>
 120:	b8 df       	rcall	.-144    	; 0x92 <setPin>
 122:	01 c0       	rjmp	.+2      	; 0x126 <sendByte+0x20>
		else				asm("rcall clrPin");
 124:	c2 df       	rcall	.-124    	; 0xaa <clrPin>
}
void sendByte(unsigned char data){
int i;
	
	asm("rcall clrPin");
	for (i=1;i<129;i=i<<1){
 126:	22 0f       	add	r18, r18
 128:	33 1f       	adc	r19, r19
 12a:	4f 5f       	subi	r20, 0xFF	; 255
 12c:	5f 4f       	sbci	r21, 0xFF	; 255
 12e:	48 30       	cpi	r20, 0x08	; 8
 130:	51 05       	cpc	r21, r1
 132:	81 f7       	brne	.-32     	; 0x114 <sendByte+0xe>
		if ((data&i)==i)	asm("rcall setPin");
		else				asm("rcall clrPin");
	}
	asm("rcall setPin");
 134:	ae df       	rcall	.-164    	; 0x92 <setPin>
	asm("rcall setPin");
 136:	ad df       	rcall	.-166    	; 0x92 <setPin>
	asm("rcall setPin");
 138:	ac df       	rcall	.-168    	; 0x92 <setPin>
	asm("rcall setPin");
 13a:	ab df       	rcall	.-170    	; 0x92 <setPin>
}
 13c:	08 95       	ret

0000013e <sendDMX>:
void sendDMX(unsigned char data[],int length){
 13e:	0f 93       	push	r16
 140:	1f 93       	push	r17
 142:	cf 93       	push	r28
 144:	df 93       	push	r29
 146:	8c 01       	movw	r16, r24
 148:	eb 01       	movw	r28, r22
    "brne cas2"   "\n\t"
    "pop R16"	   "\n\t"
	"RET"		   "\n\t"
			 );
void breakDMX(){
	asm("call clrPin" 	);	
 14a:	0e 94 55 00 	call	0xaa	; 0xaa <clrPin>
 14e:	80 e6       	ldi	r24, 0x60	; 96
 150:	91 e0       	ldi	r25, 0x01	; 1
 152:	01 97       	sbiw	r24, 0x01	; 1
 154:	f1 f7       	brne	.-4      	; 0x152 <sendDMX+0x14>
	asm("rcall setPin");
}
void sendDMX(unsigned char data[],int length){
	int i;
	breakDMX();
	mabDMX();
 156:	0e 94 69 00 	call	0xd2	; 0xd2 <mabDMX>
	asm("NOP");
}
void sendByte(unsigned char data){
int i;
	
	asm("rcall clrPin");
 15a:	a7 df       	rcall	.-178    	; 0xaa <clrPin>
 15c:	21 e0       	ldi	r18, 0x01	; 1
 15e:	30 e0       	ldi	r19, 0x00	; 0
 160:	80 e0       	ldi	r24, 0x00	; 0
 162:	90 e0       	ldi	r25, 0x00	; 0
	for (i=1;i<129;i=i<<1){
		if ((data&i)==i)	asm("rcall setPin");
 164:	21 15       	cp	r18, r1
 166:	31 05       	cpc	r19, r1
 168:	11 f4       	brne	.+4      	; 0x16e <sendDMX+0x30>
 16a:	93 df       	rcall	.-218    	; 0x92 <setPin>
 16c:	01 c0       	rjmp	.+2      	; 0x170 <sendDMX+0x32>
		else				asm("rcall clrPin");
 16e:	9d df       	rcall	.-198    	; 0xaa <clrPin>
}
void sendByte(unsigned char data){
int i;
	
	asm("rcall clrPin");
	for (i=1;i<129;i=i<<1){
 170:	22 0f       	add	r18, r18
 172:	33 1f       	adc	r19, r19
 174:	01 96       	adiw	r24, 0x01	; 1
 176:	88 30       	cpi	r24, 0x08	; 8
 178:	91 05       	cpc	r25, r1
 17a:	a1 f7       	brne	.-24     	; 0x164 <sendDMX+0x26>
		if ((data&i)==i)	asm("rcall setPin");
		else				asm("rcall clrPin");
	}
	asm("rcall setPin");
 17c:	8a df       	rcall	.-236    	; 0x92 <setPin>
	asm("rcall setPin");
 17e:	89 df       	rcall	.-238    	; 0x92 <setPin>
	asm("rcall setPin");
 180:	88 df       	rcall	.-240    	; 0x92 <setPin>
	asm("rcall setPin");
 182:	87 df       	rcall	.-242    	; 0x92 <setPin>
 184:	60 e0       	ldi	r22, 0x00	; 0
 186:	70 e0       	ldi	r23, 0x00	; 0
 188:	21 c0       	rjmp	.+66     	; 0x1cc <sendDMX+0x8e>
	int i;
	breakDMX();
	mabDMX();
	sendByte(0x00);
	for(i=0;i<length;i++)
		sendByte(data[i]);
 18a:	f8 01       	movw	r30, r16
 18c:	e6 0f       	add	r30, r22
 18e:	f7 1f       	adc	r31, r23
 190:	80 81       	ld	r24, Z
	asm("NOP");
}
void sendByte(unsigned char data){
int i;
	
	asm("rcall clrPin");
 192:	8b df       	rcall	.-234    	; 0xaa <clrPin>
 194:	21 e0       	ldi	r18, 0x01	; 1
 196:	30 e0       	ldi	r19, 0x00	; 0
 198:	40 e0       	ldi	r20, 0x00	; 0
 19a:	50 e0       	ldi	r21, 0x00	; 0
	for (i=1;i<129;i=i<<1){
		if ((data&i)==i)	asm("rcall setPin");
 19c:	e8 2f       	mov	r30, r24
 19e:	f0 e0       	ldi	r31, 0x00	; 0
 1a0:	c9 01       	movw	r24, r18
 1a2:	8e 23       	and	r24, r30
 1a4:	9f 23       	and	r25, r31
 1a6:	82 17       	cp	r24, r18
 1a8:	93 07       	cpc	r25, r19
 1aa:	11 f4       	brne	.+4      	; 0x1b0 <sendDMX+0x72>
 1ac:	72 df       	rcall	.-284    	; 0x92 <setPin>
 1ae:	01 c0       	rjmp	.+2      	; 0x1b2 <sendDMX+0x74>
		else				asm("rcall clrPin");
 1b0:	7c df       	rcall	.-264    	; 0xaa <clrPin>
}
void sendByte(unsigned char data){
int i;
	
	asm("rcall clrPin");
	for (i=1;i<129;i=i<<1){
 1b2:	22 0f       	add	r18, r18
 1b4:	33 1f       	adc	r19, r19
 1b6:	4f 5f       	subi	r20, 0xFF	; 255
 1b8:	5f 4f       	sbci	r21, 0xFF	; 255
 1ba:	48 30       	cpi	r20, 0x08	; 8
 1bc:	51 05       	cpc	r21, r1
 1be:	81 f7       	brne	.-32     	; 0x1a0 <sendDMX+0x62>
		if ((data&i)==i)	asm("rcall setPin");
		else				asm("rcall clrPin");
	}
	asm("rcall setPin");
 1c0:	68 df       	rcall	.-304    	; 0x92 <setPin>
	asm("rcall setPin");
 1c2:	67 df       	rcall	.-306    	; 0x92 <setPin>
	asm("rcall setPin");
 1c4:	66 df       	rcall	.-308    	; 0x92 <setPin>
	asm("rcall setPin");
 1c6:	65 df       	rcall	.-310    	; 0x92 <setPin>
void sendDMX(unsigned char data[],int length){
	int i;
	breakDMX();
	mabDMX();
	sendByte(0x00);
	for(i=0;i<length;i++)
 1c8:	6f 5f       	subi	r22, 0xFF	; 255
 1ca:	7f 4f       	sbci	r23, 0xFF	; 255
 1cc:	6c 17       	cp	r22, r28
 1ce:	7d 07       	cpc	r23, r29
 1d0:	e4 f2       	brlt	.-72     	; 0x18a <sendDMX+0x4c>
		sendByte(data[i]);
}	
 1d2:	df 91       	pop	r29
 1d4:	cf 91       	pop	r28
 1d6:	1f 91       	pop	r17
 1d8:	0f 91       	pop	r16
 1da:	08 95       	ret

000001dc <setup>:

void setup(void){
	PORTA=0x00;
 1dc:	1b ba       	out	0x1b, r1	; 27
	DDRA=0x1E; 
 1de:	8e e1       	ldi	r24, 0x1E	; 30
 1e0:	8a bb       	out	0x1a, r24	; 26
	PORTB=0x00;
 1e2:	18 ba       	out	0x18, r1	; 24
	DDRB=0x00;
 1e4:	17 ba       	out	0x17, r1	; 23
	PORTC=0x01;
 1e6:	81 e0       	ldi	r24, 0x01	; 1
 1e8:	85 bb       	out	0x15, r24	; 21
	DDRC=0x01;
 1ea:	84 bb       	out	0x14, r24	; 20
	PORTD=0x01;
 1ec:	82 bb       	out	0x12, r24	; 18
	DDRD=0x01;
 1ee:	81 bb       	out	0x11, r24	; 17
}
 1f0:	08 95       	ret

000001f2 <klavesnica>:
char klavesnica(char x,char y){
 1f2:	98 2f       	mov	r25, r24
	PORTA|=0x0F;
 1f4:	8b b3       	in	r24, 0x1b	; 27
 1f6:	8f 60       	ori	r24, 0x0F	; 15
 1f8:	8b bb       	out	0x1b, r24	; 27
    switch(y){
 1fa:	62 30       	cpi	r22, 0x02	; 2
 1fc:	79 f0       	breq	.+30     	; 0x21c <klavesnica+0x2a>
 1fe:	63 30       	cpi	r22, 0x03	; 3
 200:	18 f4       	brcc	.+6      	; 0x208 <klavesnica+0x16>
 202:	61 30       	cpi	r22, 0x01	; 1
 204:	89 f4       	brne	.+34     	; 0x228 <klavesnica+0x36>
 206:	0d c0       	rjmp	.+26     	; 0x222 <klavesnica+0x30>
 208:	63 30       	cpi	r22, 0x03	; 3
 20a:	29 f0       	breq	.+10     	; 0x216 <klavesnica+0x24>
 20c:	64 30       	cpi	r22, 0x04	; 4
 20e:	61 f4       	brne	.+24     	; 0x228 <klavesnica+0x36>
        case 4: PORTA&=0b00001101; break;
 210:	8b b3       	in	r24, 0x1b	; 27
 212:	8d 70       	andi	r24, 0x0D	; 13
 214:	08 c0       	rjmp	.+16     	; 0x226 <klavesnica+0x34>
        case 3: PORTA&=0b00001011; break;
 216:	8b b3       	in	r24, 0x1b	; 27
 218:	8b 70       	andi	r24, 0x0B	; 11
 21a:	05 c0       	rjmp	.+10     	; 0x226 <klavesnica+0x34>
        case 2: PORTA&=0b00000111; break;
 21c:	8b b3       	in	r24, 0x1b	; 27
 21e:	87 70       	andi	r24, 0x07	; 7
 220:	02 c0       	rjmp	.+4      	; 0x226 <klavesnica+0x34>
        case 1: PORTA&=0b00001111; break;
 222:	8b b3       	in	r24, 0x1b	; 27
 224:	8f 70       	andi	r24, 0x0F	; 15
 226:	8b bb       	out	0x1b, r24	; 27
    }
    switch(x){
 228:	92 30       	cpi	r25, 0x02	; 2
 22a:	79 f0       	breq	.+30     	; 0x24a <klavesnica+0x58>
 22c:	93 30       	cpi	r25, 0x03	; 3
 22e:	21 f0       	breq	.+8      	; 0x238 <klavesnica+0x46>
 230:	91 30       	cpi	r25, 0x01	; 1
 232:	31 f0       	breq	.+12     	; 0x240 <klavesnica+0x4e>
 234:	80 e0       	ldi	r24, 0x00	; 0
 236:	08 95       	ret
        case 3: return !((PINA&0x20)>>5); break;
 238:	80 e0       	ldi	r24, 0x00	; 0
 23a:	cd 99       	sbic	0x19, 5	; 25
 23c:	09 c0       	rjmp	.+18     	; 0x250 <klavesnica+0x5e>
 23e:	03 c0       	rjmp	.+6      	; 0x246 <klavesnica+0x54>
        case 1: return !((PINA&0x40)>>6); break;
 240:	80 e0       	ldi	r24, 0x00	; 0
 242:	ce 99       	sbic	0x19, 6	; 25
 244:	05 c0       	rjmp	.+10     	; 0x250 <klavesnica+0x5e>
 246:	81 e0       	ldi	r24, 0x01	; 1
 248:	08 95       	ret
        case 2: return !((PINA&0x80)>>7); break;
 24a:	80 e0       	ldi	r24, 0x00	; 0
 24c:	cf 9b       	sbis	0x19, 7	; 25
 24e:	81 e0       	ldi	r24, 0x01	; 1
        default: return 0;      break;
    }
}
 250:	08 95       	ret

00000252 <klavesnicaPor>:
char klavesnicaPor(){
   if (klavesnica(1,1)==1)         	return '1';
 252:	81 e0       	ldi	r24, 0x01	; 1
 254:	61 e0       	ldi	r22, 0x01	; 1
 256:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <klavesnica>
 25a:	81 30       	cpi	r24, 0x01	; 1
 25c:	11 f4       	brne	.+4      	; 0x262 <klavesnicaPor+0x10>
 25e:	81 e3       	ldi	r24, 0x31	; 49
 260:	08 95       	ret
    else if (klavesnica(2,1)==1)   	return '2';
 262:	82 e0       	ldi	r24, 0x02	; 2
 264:	61 e0       	ldi	r22, 0x01	; 1
 266:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <klavesnica>
 26a:	81 30       	cpi	r24, 0x01	; 1
 26c:	11 f4       	brne	.+4      	; 0x272 <klavesnicaPor+0x20>
 26e:	82 e3       	ldi	r24, 0x32	; 50
 270:	08 95       	ret
    else if (klavesnica(3,1)==1)   	return '3';
 272:	83 e0       	ldi	r24, 0x03	; 3
 274:	61 e0       	ldi	r22, 0x01	; 1
 276:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <klavesnica>
 27a:	81 30       	cpi	r24, 0x01	; 1
 27c:	11 f4       	brne	.+4      	; 0x282 <klavesnicaPor+0x30>
 27e:	83 e3       	ldi	r24, 0x33	; 51
 280:	08 95       	ret
    else if (klavesnica(1,2)==1)   	return '4';
 282:	81 e0       	ldi	r24, 0x01	; 1
 284:	62 e0       	ldi	r22, 0x02	; 2
 286:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <klavesnica>
 28a:	81 30       	cpi	r24, 0x01	; 1
 28c:	11 f4       	brne	.+4      	; 0x292 <klavesnicaPor+0x40>
 28e:	84 e3       	ldi	r24, 0x34	; 52
 290:	08 95       	ret
    else if (klavesnica(2,2)==1)   	return '5';
 292:	82 e0       	ldi	r24, 0x02	; 2
 294:	62 e0       	ldi	r22, 0x02	; 2
 296:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <klavesnica>
 29a:	81 30       	cpi	r24, 0x01	; 1
 29c:	11 f4       	brne	.+4      	; 0x2a2 <klavesnicaPor+0x50>
 29e:	85 e3       	ldi	r24, 0x35	; 53
 2a0:	08 95       	ret
    else if (klavesnica(3,2)==1)   	return '6';
 2a2:	83 e0       	ldi	r24, 0x03	; 3
 2a4:	62 e0       	ldi	r22, 0x02	; 2
 2a6:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <klavesnica>
 2aa:	81 30       	cpi	r24, 0x01	; 1
 2ac:	11 f4       	brne	.+4      	; 0x2b2 <klavesnicaPor+0x60>
 2ae:	86 e3       	ldi	r24, 0x36	; 54
 2b0:	08 95       	ret
    else if (klavesnica(1,3)==1)   	return '7';
 2b2:	81 e0       	ldi	r24, 0x01	; 1
 2b4:	63 e0       	ldi	r22, 0x03	; 3
 2b6:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <klavesnica>
 2ba:	81 30       	cpi	r24, 0x01	; 1
 2bc:	11 f4       	brne	.+4      	; 0x2c2 <klavesnicaPor+0x70>
 2be:	87 e3       	ldi	r24, 0x37	; 55
 2c0:	08 95       	ret
    else if (klavesnica(2,3)==1)   	return '8';
 2c2:	82 e0       	ldi	r24, 0x02	; 2
 2c4:	63 e0       	ldi	r22, 0x03	; 3
 2c6:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <klavesnica>
 2ca:	81 30       	cpi	r24, 0x01	; 1
 2cc:	11 f4       	brne	.+4      	; 0x2d2 <klavesnicaPor+0x80>
 2ce:	88 e3       	ldi	r24, 0x38	; 56
 2d0:	08 95       	ret
    else if (klavesnica(3,3)==1)   	return '9';
 2d2:	83 e0       	ldi	r24, 0x03	; 3
 2d4:	63 e0       	ldi	r22, 0x03	; 3
 2d6:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <klavesnica>
 2da:	81 30       	cpi	r24, 0x01	; 1
 2dc:	11 f4       	brne	.+4      	; 0x2e2 <klavesnicaPor+0x90>
 2de:	89 e3       	ldi	r24, 0x39	; 57
 2e0:	08 95       	ret
    else if (klavesnica(2,4)==1)   	return '0';
 2e2:	82 e0       	ldi	r24, 0x02	; 2
 2e4:	64 e0       	ldi	r22, 0x04	; 4
 2e6:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <klavesnica>
 2ea:	81 30       	cpi	r24, 0x01	; 1
 2ec:	11 f4       	brne	.+4      	; 0x2f2 <klavesnicaPor+0xa0>
 2ee:	80 e3       	ldi	r24, 0x30	; 48
 2f0:	08 95       	ret
    else if (klavesnica(1,4)==1)	return '_';
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	64 e0       	ldi	r22, 0x04	; 4
 2f6:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <klavesnica>
 2fa:	81 30       	cpi	r24, 0x01	; 1
 2fc:	11 f4       	brne	.+4      	; 0x302 <klavesnicaPor+0xb0>
 2fe:	8f e5       	ldi	r24, 0x5F	; 95
 300:	08 95       	ret
	else if (klavesnica(3,4)==1)	return 'O';
 302:	83 e0       	ldi	r24, 0x03	; 3
 304:	64 e0       	ldi	r22, 0x04	; 4
 306:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <klavesnica>
 30a:	81 30       	cpi	r24, 0x01	; 1
 30c:	11 f0       	breq	.+4      	; 0x312 <klavesnicaPor+0xc0>
 30e:	8f ef       	ldi	r24, 0xFF	; 255
 310:	08 95       	ret
 312:	8f e4       	ldi	r24, 0x4F	; 79
	else return -1;
}
 314:	08 95       	ret

00000316 <main>:
int main(void){
 316:	2f 92       	push	r2
 318:	3f 92       	push	r3
 31a:	4f 92       	push	r4
 31c:	5f 92       	push	r5
 31e:	6f 92       	push	r6
 320:	7f 92       	push	r7
 322:	8f 92       	push	r8
 324:	9f 92       	push	r9
 326:	af 92       	push	r10
 328:	bf 92       	push	r11
 32a:	cf 92       	push	r12
 32c:	df 92       	push	r13
 32e:	ef 92       	push	r14
 330:	ff 92       	push	r15
 332:	0f 93       	push	r16
 334:	1f 93       	push	r17
 336:	df 93       	push	r29
 338:	cf 93       	push	r28
 33a:	cd b7       	in	r28, 0x3d	; 61
 33c:	de b7       	in	r29, 0x3e	; 62
 33e:	c0 57       	subi	r28, 0x70	; 112
 340:	d0 40       	sbci	r29, 0x00	; 0
 342:	0f b6       	in	r0, 0x3f	; 63
 344:	f8 94       	cli
 346:	de bf       	out	0x3e, r29	; 62
 348:	0f be       	out	0x3f, r0	; 63
 34a:	cd bf       	out	0x3d, r28	; 61
	for(i=0;i<length;i++)
		sendByte(data[i]);
}	

void setup(void){
	PORTA=0x00;
 34c:	1b ba       	out	0x1b, r1	; 27
	DDRA=0x1E; 
 34e:	8e e1       	ldi	r24, 0x1E	; 30
 350:	8a bb       	out	0x1a, r24	; 26
	PORTB=0x00;
 352:	18 ba       	out	0x18, r1	; 24
	DDRB=0x00;
 354:	17 ba       	out	0x17, r1	; 23
	PORTC=0x01;
 356:	81 e0       	ldi	r24, 0x01	; 1
 358:	85 bb       	out	0x15, r24	; 21
	DDRC=0x01;
 35a:	84 bb       	out	0x14, r24	; 20
	PORTD=0x01;
 35c:	82 bb       	out	0x12, r24	; 18
	DDRD=0x01;
 35e:	81 bb       	out	0x11, r24	; 17
 360:	fe 01       	movw	r30, r28
 362:	31 96       	adiw	r30, 0x01	; 1
    else if (klavesnica(2,4)==1)   	return '0';
    else if (klavesnica(1,4)==1)	return '_';
	else if (klavesnica(3,4)==1)	return 'O';
	else return -1;
}
int main(void){
 364:	9e 01       	movw	r18, r28
 366:	26 5d       	subi	r18, 0xD6	; 214
 368:	3f 4f       	sbci	r19, 0xFF	; 255
 36a:	af 96       	adiw	r28, 0x2f	; 47
 36c:	3f af       	std	Y+63, r19	; 0x3f
 36e:	2e af       	std	Y+62, r18	; 0x3e
 370:	af 97       	sbiw	r28, 0x2f	; 47
int por1hod=3;
int dva =0;
int rgb[4];
unsigned char jas = 255;
char last_push='-1';
for(por=0;por<41;por++) dmx[por] = 0;
 372:	11 92       	st	Z+, r1
 374:	af 96       	adiw	r28, 0x2f	; 47
 376:	6e ad       	ldd	r22, Y+62	; 0x3e
 378:	7f ad       	ldd	r23, Y+63	; 0x3f
 37a:	af 97       	sbiw	r28, 0x2f	; 47
 37c:	e6 17       	cp	r30, r22
 37e:	f7 07       	cpc	r31, r23
 380:	c1 f7       	brne	.-16     	; 0x372 <main+0x5c>
		sendDMX(dmx,41);
 382:	2e 01       	movw	r4, r28
 384:	08 94       	sec
 386:	41 1c       	adc	r4, r1
 388:	51 1c       	adc	r5, r1
 38a:	c2 01       	movw	r24, r4
 38c:	69 e2       	ldi	r22, 0x29	; 41
 38e:	70 e0       	ldi	r23, 0x00	; 0
 390:	0e 94 9f 00 	call	0x13e	; 0x13e <sendDMX>
 394:	19 e2       	ldi	r17, 0x29	; 41
 396:	81 2e       	mov	r8, r17
 398:	91 2c       	mov	r9, r1
 39a:	22 24       	eor	r2, r2
 39c:	33 24       	eor	r3, r3
 39e:	ab 96       	adiw	r28, 0x2b	; 43
 3a0:	1f ae       	std	Y+63, r1	; 0x3f
 3a2:	1e ae       	std	Y+62, r1	; 0x3e
 3a4:	ab 97       	sbiw	r28, 0x2b	; 43
 3a6:	a9 96       	adiw	r28, 0x29	; 41
 3a8:	1f ae       	std	Y+63, r1	; 0x3f
 3aa:	1e ae       	std	Y+62, r1	; 0x3e
 3ac:	a9 97       	sbiw	r28, 0x29	; 41
 3ae:	77 24       	eor	r7, r7
 3b0:	7a 94       	dec	r7
 3b2:	11 e3       	ldi	r17, 0x31	; 49
 3b4:	a7 96       	adiw	r28, 0x27	; 39
 3b6:	1f ae       	std	Y+63, r1	; 0x3f
 3b8:	1e ae       	std	Y+62, r1	; 0x3e
 3ba:	a7 97       	sbiw	r28, 0x27	; 39
 3bc:	b2 e0       	ldi	r27, 0x02	; 2
 3be:	cb 2e       	mov	r12, r27
 3c0:	d1 2c       	mov	r13, r1
 3c2:	a2 e0       	ldi	r26, 0x02	; 2
 3c4:	ea 2e       	mov	r14, r26
 3c6:	f1 2c       	mov	r15, r1
 3c8:	f2 e0       	ldi	r31, 0x02	; 2
 3ca:	af 2e       	mov	r10, r31
 3cc:	b1 2c       	mov	r11, r1
    			 dmx[7] = 0;	//kruhy
    			 dmx[8] = 0;
    			 dmx[9] = 0;
    			 dmx[10] = 0;
				 //-----------------------
    			 dmx[11]=88;		//polgula
 3ce:	e8 e5       	ldi	r30, 0x58	; 88
 3d0:	6e 2e       	mov	r6, r30
				 dmx[12]=255;
 3d2:	0f ef       	ldi	r16, 0xFF	; 255
				  rgb[2]=test;
				  rgb[3] = 0;   
				  dir8=0;
				  last_push = '0';	break;	
//-----------------------------------------------------------  
		case '_':for(por=0;por<27;por++) dmx[por]=0;
 3d4:	ce 01       	movw	r24, r28
 3d6:	4c 96       	adiw	r24, 0x1c	; 28
 3d8:	e1 96       	adiw	r28, 0x31	; 49
 3da:	9f af       	std	Y+63, r25	; 0x3f
 3dc:	8e af       	std	Y+62, r24	; 0x3e
 3de:	e1 97       	sbiw	r28, 0x31	; 49
			por = 0;
		}
		else por++;
	
	}
	sendDMX(dmx,41);	
 3e0:	ad 96       	adiw	r28, 0x2d	; 45
 3e2:	5f ae       	std	Y+63, r5	; 0x3f
 3e4:	4e ae       	std	Y+62, r4	; 0x3e
 3e6:	ad 97       	sbiw	r28, 0x2d	; 45
 3e8:	ac 96       	adiw	r28, 0x2c	; 44
 3ea:	5f ac       	ldd	r5, Y+63	; 0x3f
 3ec:	ac 97       	sbiw	r28, 0x2c	; 44
 3ee:	ad 96       	adiw	r28, 0x2d	; 45
 3f0:	4f ac       	ldd	r4, Y+63	; 0x3f
 3f2:	ad 97       	sbiw	r28, 0x2d	; 45
rgb[0]=test;
rgb[1]=test;
rgb[2]=test;
rgb[3]=0;
while(1){
	switch(klavesnicaPor()){
 3f4:	0e 94 29 01 	call	0x252	; 0x252 <klavesnicaPor>
 3f8:	85 33       	cpi	r24, 0x35	; 53
 3fa:	09 f4       	brne	.+2      	; 0x3fe <main+0xe8>
 3fc:	b3 c0       	rjmp	.+358    	; 0x564 <main+0x24e>
 3fe:	86 33       	cpi	r24, 0x36	; 54
 400:	98 f4       	brcc	.+38     	; 0x428 <main+0x112>
 402:	82 33       	cpi	r24, 0x32	; 50
 404:	09 f4       	brne	.+2      	; 0x408 <main+0xf2>
 406:	46 c4       	rjmp	.+2188   	; 0xc94 <__stack+0x435>
 408:	83 33       	cpi	r24, 0x33	; 51
 40a:	38 f4       	brcc	.+14     	; 0x41a <main+0x104>
 40c:	80 33       	cpi	r24, 0x30	; 48
 40e:	09 f4       	brne	.+2      	; 0x412 <main+0xfc>
 410:	aa c1       	rjmp	.+852    	; 0x766 <main+0x450>
 412:	81 33       	cpi	r24, 0x31	; 49
 414:	09 f0       	breq	.+2      	; 0x418 <main+0x102>
 416:	0a c2       	rjmp	.+1044   	; 0x82c <main+0x516>
 418:	1d c0       	rjmp	.+58     	; 0x454 <main+0x13e>
 41a:	83 33       	cpi	r24, 0x33	; 51
 41c:	09 f4       	brne	.+2      	; 0x420 <main+0x10a>
 41e:	4a c0       	rjmp	.+148    	; 0x4b4 <main+0x19e>
 420:	84 33       	cpi	r24, 0x34	; 52
 422:	09 f0       	breq	.+2      	; 0x426 <main+0x110>
 424:	03 c2       	rjmp	.+1030   	; 0x82c <main+0x516>
 426:	72 c0       	rjmp	.+228    	; 0x50c <main+0x1f6>
 428:	88 33       	cpi	r24, 0x38	; 56
 42a:	09 f4       	brne	.+2      	; 0x42e <main+0x118>
 42c:	1f c1       	rjmp	.+574    	; 0x66c <main+0x356>
 42e:	89 33       	cpi	r24, 0x39	; 57
 430:	38 f4       	brcc	.+14     	; 0x440 <main+0x12a>
 432:	86 33       	cpi	r24, 0x36	; 54
 434:	09 f4       	brne	.+2      	; 0x438 <main+0x122>
 436:	c2 c0       	rjmp	.+388    	; 0x5bc <main+0x2a6>
 438:	87 33       	cpi	r24, 0x37	; 55
 43a:	09 f0       	breq	.+2      	; 0x43e <main+0x128>
 43c:	f7 c1       	rjmp	.+1006   	; 0x82c <main+0x516>
 43e:	ea c0       	rjmp	.+468    	; 0x614 <main+0x2fe>
 440:	8f 34       	cpi	r24, 0x4F	; 79
 442:	09 f4       	brne	.+2      	; 0x446 <main+0x130>
 444:	e3 c1       	rjmp	.+966    	; 0x80c <main+0x4f6>
 446:	8f 35       	cpi	r24, 0x5F	; 95
 448:	09 f4       	brne	.+2      	; 0x44c <main+0x136>
 44a:	cb c1       	rjmp	.+918    	; 0x7e2 <main+0x4cc>
 44c:	89 33       	cpi	r24, 0x39	; 57
 44e:	09 f0       	breq	.+2      	; 0x452 <main+0x13c>
 450:	ed c1       	rjmp	.+986    	; 0x82c <main+0x516>
 452:	4c c1       	rjmp	.+664    	; 0x6ec <main+0x3d6>
		case '1':dmx[0] = 0;		//pas
 454:	19 82       	std	Y+1, r1	; 0x01
				 dmx[1] = 0;
 456:	1a 82       	std	Y+2, r1	; 0x02
				 dmx[2] = 0;
 458:	1b 82       	std	Y+3, r1	; 0x03
				 dmx[3] = 240;
 45a:	80 ef       	ldi	r24, 0xF0	; 240
 45c:	8c 83       	std	Y+4, r24	; 0x04
    			 dmx[4] = 150;
 45e:	86 e9       	ldi	r24, 0x96	; 150
 460:	8d 83       	std	Y+5, r24	; 0x05
				 dmx[5] = 0;
 462:	1e 82       	std	Y+6, r1	; 0x06
    			 dmx[6] = 255;
 464:	0f 83       	std	Y+7, r16	; 0x07
				 //-----------------------
    			 dmx[7] = 255;	//kruhy
 466:	08 87       	std	Y+8, r16	; 0x08
    			 dmx[8] = 0;
 468:	19 86       	std	Y+9, r1	; 0x09
    			 dmx[9] = 255;
 46a:	0a 87       	std	Y+10, r16	; 0x0a
    			 dmx[10] = 195;
 46c:	83 ec       	ldi	r24, 0xC3	; 195
 46e:	8b 87       	std	Y+11, r24	; 0x0b
				 //-----------------------
    			 dmx[11]=88;		//polgula
 470:	6c 86       	std	Y+12, r6	; 0x0c
				 dmx[12]=255;
 472:	0d 87       	std	Y+13, r16	; 0x0d
			     dmx[13]=0;     
 474:	1e 86       	std	Y+14, r1	; 0x0e
    			 dmx[14]=0;      
 476:	1f 86       	std	Y+15, r1	; 0x0f
    			 dmx[15]=0;       
 478:	18 8a       	std	Y+16, r1	; 0x10
    			 dmx[16]=0;       
 47a:	19 8a       	std	Y+17, r1	; 0x11
    			 dmx[17]=0;       
 47c:	1a 8a       	std	Y+18, r1	; 0x12
				 dmx[18]=255;
 47e:	0b 8b       	std	Y+19, r16	; 0x13
				 //------------------------ 
			     dmx[19]=0;		//reflektory
 480:	1c 8a       	std	Y+20, r1	; 0x14
				 dmx[20]=0;
 482:	1d 8a       	std	Y+21, r1	; 0x15
				 dmx[21]=0;     
 484:	1e 8a       	std	Y+22, r1	; 0x16
    			 dmx[22]=0;      
 486:	1f 8a       	std	Y+23, r1	; 0x17
    			 dmx[23]=0;       
 488:	18 8e       	std	Y+24, r1	; 0x18
    			 dmx[24]=0;       
 48a:	19 8e       	std	Y+25, r1	; 0x19
    			 dmx[25]=200;       
 48c:	98 ec       	ldi	r25, 0xC8	; 200
 48e:	9a 8f       	std	Y+26, r25	; 0x1a
				 dmx[26]=250;	
 490:	8a ef       	ldi	r24, 0xFA	; 250
 492:	8b 8f       	std	Y+27, r24	; 0x1b
				  //------------------------ 
				  dmx[27]=0;		//1x reflektor
 494:	1c 8e       	std	Y+28, r1	; 0x1c
				  dmx[28]=0;
 496:	1d 8e       	std	Y+29, r1	; 0x1d
				  dmx[29]=0;     
 498:	1e 8e       	std	Y+30, r1	; 0x1e
    			  dmx[30]=0;      
 49a:	1f 8e       	std	Y+31, r1	; 0x1f
    			  dmx[31]=0;       
 49c:	18 a2       	std	Y+32, r1	; 0x20
    			  dmx[32]=0;       
 49e:	19 a2       	std	Y+33, r1	; 0x21
    			  dmx[33]=200;       
 4a0:	9a a3       	std	Y+34, r25	; 0x22
				  dmx[34]=250;	
 4a2:	8b a3       	std	Y+35, r24	; 0x23
				  //------------------------ 	
				  dmx[35]=0;		//2x reflektor
 4a4:	1c a2       	std	Y+36, r1	; 0x24
				  dmx[36]=0;
 4a6:	1d a2       	std	Y+37, r1	; 0x25
				  dmx[37]=0;     
 4a8:	1e a2       	std	Y+38, r1	; 0x26
    			  dmx[38]=0;      
 4aa:	1f a2       	std	Y+39, r1	; 0x27
    			  dmx[39]=0;           
 4ac:	18 a6       	std	Y+40, r1	; 0x28
				  dmx[40]=255;	
 4ae:	09 a7       	std	Y+41, r16	; 0x29
 4b0:	11 e3       	ldi	r17, 0x31	; 49
 4b2:	c3 c1       	rjmp	.+902    	; 0x83a <main+0x524>
				 last_push = '1';
				 break;
//-----------------------------------------------------------   
		case '2':last_push = '2'; 	break;	
//-----------------------------------------------------------  
		case '3':dmx[0] = 0;		//pas
 4b4:	19 82       	std	Y+1, r1	; 0x01
				 dmx[1] = 0;
 4b6:	1a 82       	std	Y+2, r1	; 0x02
				 dmx[2] = 0;
 4b8:	1b 82       	std	Y+3, r1	; 0x03
				 dmx[3] = 28;
 4ba:	8c e1       	ldi	r24, 0x1C	; 28
 4bc:	8c 83       	std	Y+4, r24	; 0x04
    			 dmx[4] = 0;
 4be:	1d 82       	std	Y+5, r1	; 0x05
				 dmx[5] = 0;
 4c0:	1e 82       	std	Y+6, r1	; 0x06
				 dmx[6] = jas;
 4c2:	7f 82       	std	Y+7, r7	; 0x07
				 //-----------------------
    			 dmx[7] = 0;	//kruhy
 4c4:	18 86       	std	Y+8, r1	; 0x08
    			 dmx[8] = 0;
 4c6:	19 86       	std	Y+9, r1	; 0x09
    			 dmx[9] = 0;
 4c8:	1a 86       	std	Y+10, r1	; 0x0a
    			 dmx[10] = 0;
 4ca:	1b 86       	std	Y+11, r1	; 0x0b
				 //-----------------------
    			 dmx[11]=88;		//polgula
 4cc:	6c 86       	std	Y+12, r6	; 0x0c
				 dmx[12]=255;
 4ce:	0d 87       	std	Y+13, r16	; 0x0d
				 dmx[13]=0;     
 4d0:	1e 86       	std	Y+14, r1	; 0x0e
    			 dmx[14]=0;      
 4d2:	1f 86       	std	Y+15, r1	; 0x0f
    			 dmx[15]=255;       
 4d4:	08 8b       	std	Y+16, r16	; 0x10
    			 dmx[16]=0;       
 4d6:	19 8a       	std	Y+17, r1	; 0x11
    			 dmx[17]=0;       
 4d8:	1a 8a       	std	Y+18, r1	; 0x12
				 dmx[18]=0;
 4da:	1b 8a       	std	Y+19, r1	; 0x13
				 //------------------------ 
				 dmx[19]=0;		//reflektory
 4dc:	1c 8a       	std	Y+20, r1	; 0x14
				 dmx[20]=jas;
 4de:	7d 8a       	std	Y+21, r7	; 0x15
				 dmx[21]=0;     
 4e0:	1e 8a       	std	Y+22, r1	; 0x16
    			 dmx[22]=0;      
 4e2:	1f 8a       	std	Y+23, r1	; 0x17
    			 dmx[23]=0;       
 4e4:	18 8e       	std	Y+24, r1	; 0x18
    			 dmx[24]=0;       
 4e6:	19 8e       	std	Y+25, r1	; 0x19
    			 dmx[25]=0;       
 4e8:	1a 8e       	std	Y+26, r1	; 0x1a
				 dmx[26]=255;
 4ea:	0b 8f       	std	Y+27, r16	; 0x1b
				  //------------------------ 
				  dmx[27]=0;		//1x reflektor
 4ec:	1c 8e       	std	Y+28, r1	; 0x1c
				  dmx[28]=jas;
 4ee:	7d 8e       	std	Y+29, r7	; 0x1d
				  dmx[29]=0;     
 4f0:	1e 8e       	std	Y+30, r1	; 0x1e
    			  dmx[30]=0;      
 4f2:	1f 8e       	std	Y+31, r1	; 0x1f
    			  dmx[31]=0;       
 4f4:	18 a2       	std	Y+32, r1	; 0x20
    			  dmx[32]=0;       
 4f6:	19 a2       	std	Y+33, r1	; 0x21
    			  dmx[33]=0;       
 4f8:	1a a2       	std	Y+34, r1	; 0x22
				  dmx[34]=255;	
 4fa:	0b a3       	std	Y+35, r16	; 0x23
				  //------------------------
				  dmx[35]=0;		//2x reflektor
 4fc:	1c a2       	std	Y+36, r1	; 0x24
				  dmx[36]=jas;
 4fe:	7d a2       	std	Y+37, r7	; 0x25
				  dmx[37]=0;     
 500:	1e a2       	std	Y+38, r1	; 0x26
    			  dmx[38]=0;      
 502:	1f a2       	std	Y+39, r1	; 0x27
    			  dmx[39]=0;       
 504:	18 a6       	std	Y+40, r1	; 0x28
    			  dmx[40]=0;       	
 506:	19 a6       	std	Y+41, r1	; 0x29
 508:	13 e3       	ldi	r17, 0x33	; 51
 50a:	97 c1       	rjmp	.+814    	; 0x83a <main+0x524>
				  //------------------------  

				 last_push = '3';
				 break;
//-----------------------------------------------------------    
		case '4': dmx[0] = 0;		//pas
 50c:	19 82       	std	Y+1, r1	; 0x01
				 dmx[1] = 0;
 50e:	1a 82       	std	Y+2, r1	; 0x02
				 dmx[2] = 0;
 510:	1b 82       	std	Y+3, r1	; 0x03
				 dmx[3] = 12;
 512:	8c e0       	ldi	r24, 0x0C	; 12
 514:	8c 83       	std	Y+4, r24	; 0x04
    			 dmx[4] = 0;
 516:	1d 82       	std	Y+5, r1	; 0x05
				 dmx[5] = 0;
 518:	1e 82       	std	Y+6, r1	; 0x06
    			 dmx[6] = jas;
 51a:	7f 82       	std	Y+7, r7	; 0x07
				 //-----------------------
    			 dmx[7] = 0;	//kruhy
 51c:	18 86       	std	Y+8, r1	; 0x08
    			 dmx[8] = 0;
 51e:	19 86       	std	Y+9, r1	; 0x09
    			 dmx[9] = 0;
 520:	1a 86       	std	Y+10, r1	; 0x0a
    			 dmx[10] = 0;
 522:	1b 86       	std	Y+11, r1	; 0x0b
				 //-----------------------
    			 dmx[11]=88;		//polgula
 524:	6c 86       	std	Y+12, r6	; 0x0c
				 dmx[12]=255;
 526:	0d 87       	std	Y+13, r16	; 0x0d
				 dmx[13]=0;     
 528:	1e 86       	std	Y+14, r1	; 0x0e
    			 dmx[14]=255;      
 52a:	0f 87       	std	Y+15, r16	; 0x0f
    			 dmx[15]=0;       
 52c:	18 8a       	std	Y+16, r1	; 0x10
    			 dmx[16]=0;       
 52e:	19 8a       	std	Y+17, r1	; 0x11
    			 dmx[17]=0;       
 530:	1a 8a       	std	Y+18, r1	; 0x12
				 dmx[18]=0;
 532:	1b 8a       	std	Y+19, r1	; 0x13
				 //------------------------ 
				 dmx[19]=jas;		//reflektory
 534:	7c 8a       	std	Y+20, r7	; 0x14
				 dmx[20]=0;
 536:	1d 8a       	std	Y+21, r1	; 0x15
				 dmx[21]=0;     
 538:	1e 8a       	std	Y+22, r1	; 0x16
    			 dmx[22]=0;      
 53a:	1f 8a       	std	Y+23, r1	; 0x17
    			 dmx[23]=0;       
 53c:	18 8e       	std	Y+24, r1	; 0x18
    			 dmx[24]=0;       
 53e:	19 8e       	std	Y+25, r1	; 0x19
    			 dmx[25]=0;       
 540:	1a 8e       	std	Y+26, r1	; 0x1a
				 dmx[26]=255;
 542:	0b 8f       	std	Y+27, r16	; 0x1b
				  //------------------------ 
				  dmx[27]=jas;		//1x reflektor
 544:	7c 8e       	std	Y+28, r7	; 0x1c
				  dmx[28]=0;
 546:	1d 8e       	std	Y+29, r1	; 0x1d
				  dmx[29]=0;     
 548:	1e 8e       	std	Y+30, r1	; 0x1e
    			  dmx[30]=0;      
 54a:	1f 8e       	std	Y+31, r1	; 0x1f
    			  dmx[31]=0;       
 54c:	18 a2       	std	Y+32, r1	; 0x20
    			  dmx[32]=0;       
 54e:	19 a2       	std	Y+33, r1	; 0x21
    			  dmx[33]=0;       
 550:	1a a2       	std	Y+34, r1	; 0x22
				  dmx[34]=255;	
 552:	0b a3       	std	Y+35, r16	; 0x23
				  //------------------------ 
				  dmx[35]=jas;		//2x reflektor
 554:	7c a2       	std	Y+36, r7	; 0x24
				  dmx[36]=0;
 556:	1d a2       	std	Y+37, r1	; 0x25
				  dmx[37]=0;     
 558:	1e a2       	std	Y+38, r1	; 0x26
    			  dmx[38]=0;      
 55a:	1f a2       	std	Y+39, r1	; 0x27
    			  dmx[39]=0;       
 55c:	18 a6       	std	Y+40, r1	; 0x28
    			  dmx[40]=0;       	
 55e:	19 a6       	std	Y+41, r1	; 0x29
 560:	14 e3       	ldi	r17, 0x34	; 52
 562:	6b c1       	rjmp	.+726    	; 0x83a <main+0x524>
				  //------------------------ 
				 last_push = '4';
				 break;
//-----------------------------------------------------------  	
		case '5':dmx[0] = 0;		//pas
 564:	19 82       	std	Y+1, r1	; 0x01
				 dmx[1] = 0;
 566:	1a 82       	std	Y+2, r1	; 0x02
				 dmx[2] = 0;
 568:	1b 82       	std	Y+3, r1	; 0x03
				 dmx[3] = 20;
 56a:	94 e1       	ldi	r25, 0x14	; 20
 56c:	9c 83       	std	Y+4, r25	; 0x04
    			 dmx[4] = 0;
 56e:	1d 82       	std	Y+5, r1	; 0x05
				 dmx[5] = 0;
 570:	1e 82       	std	Y+6, r1	; 0x06
    			 dmx[6] = jas;
 572:	7f 82       	std	Y+7, r7	; 0x07
				 //-----------------------
    			 dmx[7] = 0;	//kruhy
 574:	18 86       	std	Y+8, r1	; 0x08
    			 dmx[8] = 0;
 576:	19 86       	std	Y+9, r1	; 0x09
    			 dmx[9] = 0;
 578:	1a 86       	std	Y+10, r1	; 0x0a
    			 dmx[10] = 0;
 57a:	1b 86       	std	Y+11, r1	; 0x0b
				 //-----------------------
    			 dmx[11]=88;		//polgula
 57c:	6c 86       	std	Y+12, r6	; 0x0c
				 dmx[12]=255;
 57e:	0d 87       	std	Y+13, r16	; 0x0d
				 dmx[13]=0;     
 580:	1e 86       	std	Y+14, r1	; 0x0e
    			 dmx[14]=255;      
 582:	0f 87       	std	Y+15, r16	; 0x0f
    			 dmx[15]=255;       
 584:	08 8b       	std	Y+16, r16	; 0x10
    			 dmx[16]=0;       
 586:	19 8a       	std	Y+17, r1	; 0x11
    			 dmx[17]=0;       
 588:	1a 8a       	std	Y+18, r1	; 0x12
				 dmx[18]=0;
 58a:	1b 8a       	std	Y+19, r1	; 0x13
				 //------------------------ 
				 dmx[19]=jas;		//reflektory
 58c:	7c 8a       	std	Y+20, r7	; 0x14
				 dmx[20]=jas;
 58e:	7d 8a       	std	Y+21, r7	; 0x15
				 dmx[21]=0;     
 590:	1e 8a       	std	Y+22, r1	; 0x16
    			 dmx[22]=0;      
 592:	1f 8a       	std	Y+23, r1	; 0x17
    			 dmx[23]=0;       
 594:	18 8e       	std	Y+24, r1	; 0x18
    			 dmx[24]=0;       
 596:	19 8e       	std	Y+25, r1	; 0x19
    			 dmx[25]=0;       
 598:	1a 8e       	std	Y+26, r1	; 0x1a
				 dmx[26]=255;
 59a:	0b 8f       	std	Y+27, r16	; 0x1b
				  //------------------------ 
				  dmx[27]=jas;		//1x reflektor
 59c:	7c 8e       	std	Y+28, r7	; 0x1c
				  dmx[28]=jas;
 59e:	7d 8e       	std	Y+29, r7	; 0x1d
				  dmx[29]=0;     
 5a0:	1e 8e       	std	Y+30, r1	; 0x1e
    			  dmx[30]=0;      
 5a2:	1f 8e       	std	Y+31, r1	; 0x1f
    			  dmx[31]=0;       
 5a4:	18 a2       	std	Y+32, r1	; 0x20
    			  dmx[32]=0;       
 5a6:	19 a2       	std	Y+33, r1	; 0x21
    			  dmx[33]=0;       
 5a8:	1a a2       	std	Y+34, r1	; 0x22
				  dmx[34]=255;	
 5aa:	0b a3       	std	Y+35, r16	; 0x23
				  //------------------------ 
				  dmx[35]=jas;		//2x reflektor
 5ac:	7c a2       	std	Y+36, r7	; 0x24
				  dmx[36]=jas;
 5ae:	7d a2       	std	Y+37, r7	; 0x25
				  dmx[37]=0;     
 5b0:	1e a2       	std	Y+38, r1	; 0x26
    			  dmx[38]=0;      
 5b2:	1f a2       	std	Y+39, r1	; 0x27
    			  dmx[39]=0;       
 5b4:	18 a6       	std	Y+40, r1	; 0x28
    			  dmx[40]=0;       	
 5b6:	19 a6       	std	Y+41, r1	; 0x29
 5b8:	15 e3       	ldi	r17, 0x35	; 53
 5ba:	3f c1       	rjmp	.+638    	; 0x83a <main+0x524>
				  //------------------------ 
				 last_push = '5';
				 break;
//-----------------------------------------------------------   
		case '6': dmx[0] = 0;		//pas
 5bc:	19 82       	std	Y+1, r1	; 0x01
				 dmx[1] = 0;
 5be:	1a 82       	std	Y+2, r1	; 0x02
				 dmx[2] = 0;
 5c0:	1b 82       	std	Y+3, r1	; 0x03
				 dmx[3] = 42;
 5c2:	2a e2       	ldi	r18, 0x2A	; 42
 5c4:	2c 83       	std	Y+4, r18	; 0x04
    			 dmx[4] = 0;
 5c6:	1d 82       	std	Y+5, r1	; 0x05
				 dmx[5] = 0;
 5c8:	1e 82       	std	Y+6, r1	; 0x06
    			 dmx[6] = jas;
 5ca:	7f 82       	std	Y+7, r7	; 0x07
				 //-----------------------
    			 dmx[7] = 0;	//kruhy
 5cc:	18 86       	std	Y+8, r1	; 0x08
    			 dmx[8] = 0;
 5ce:	19 86       	std	Y+9, r1	; 0x09
    			 dmx[9] = 0;
 5d0:	1a 86       	std	Y+10, r1	; 0x0a
    			 dmx[10] = 0;
 5d2:	1b 86       	std	Y+11, r1	; 0x0b
				 //-----------------------
    			 dmx[11]=88;		//polgula
 5d4:	6c 86       	std	Y+12, r6	; 0x0c
			     dmx[12]=255;
 5d6:	0d 87       	std	Y+13, r16	; 0x0d
				 dmx[13]=0;     
 5d8:	1e 86       	std	Y+14, r1	; 0x0e
    			 dmx[14]=0;      
 5da:	1f 86       	std	Y+15, r1	; 0x0f
    			 dmx[15]=0;       
 5dc:	18 8a       	std	Y+16, r1	; 0x10
    			 dmx[16]=255;       
 5de:	09 8b       	std	Y+17, r16	; 0x11
    			 dmx[17]=0;       
 5e0:	1a 8a       	std	Y+18, r1	; 0x12
				 dmx[18]=0;
 5e2:	1b 8a       	std	Y+19, r1	; 0x13
				 //------------------------ 
				 dmx[19]=0;		//reflektory
 5e4:	1c 8a       	std	Y+20, r1	; 0x14
				 dmx[20]=0;
 5e6:	1d 8a       	std	Y+21, r1	; 0x15
				 dmx[21]=jas;     
 5e8:	7e 8a       	std	Y+22, r7	; 0x16
    			 dmx[22]=0;      
 5ea:	1f 8a       	std	Y+23, r1	; 0x17
    			 dmx[23]=0;       
 5ec:	18 8e       	std	Y+24, r1	; 0x18
    			 dmx[24]=0;       
 5ee:	19 8e       	std	Y+25, r1	; 0x19
    			 dmx[25]=0;       
 5f0:	1a 8e       	std	Y+26, r1	; 0x1a
				 dmx[26]=255;
 5f2:	0b 8f       	std	Y+27, r16	; 0x1b
				  //------------------------ 
				  dmx[27]=0;		//1x reflektor
 5f4:	1c 8e       	std	Y+28, r1	; 0x1c
				  dmx[28]=0;
 5f6:	1d 8e       	std	Y+29, r1	; 0x1d
				  dmx[29]=jas;     
 5f8:	7e 8e       	std	Y+30, r7	; 0x1e
    			  dmx[30]=0;      
 5fa:	1f 8e       	std	Y+31, r1	; 0x1f
    			  dmx[31]=0;       
 5fc:	18 a2       	std	Y+32, r1	; 0x20
    			  dmx[32]=0;       
 5fe:	19 a2       	std	Y+33, r1	; 0x21
    			  dmx[33]=0;       
 600:	1a a2       	std	Y+34, r1	; 0x22
				  dmx[34]=255;	
 602:	0b a3       	std	Y+35, r16	; 0x23
				  //------------------------ 
				  dmx[35]=0;		//2x reflektor
 604:	1c a2       	std	Y+36, r1	; 0x24
				  dmx[36]=0;
 606:	1d a2       	std	Y+37, r1	; 0x25
				  dmx[37]=jas;     
 608:	7e a2       	std	Y+38, r7	; 0x26
    			  dmx[38]=0;      
 60a:	1f a2       	std	Y+39, r1	; 0x27
    			  dmx[39]=0;       
 60c:	18 a6       	std	Y+40, r1	; 0x28
    			  dmx[40]=0;       
 60e:	19 a6       	std	Y+41, r1	; 0x29
 610:	16 e3       	ldi	r17, 0x36	; 54
 612:	13 c1       	rjmp	.+550    	; 0x83a <main+0x524>
				  //------------------------ 
				 last_push = '6';
				 break;
//-----------------------------------------------------------   
		case '7': dmx[0] = 0;		//pas
 614:	19 82       	std	Y+1, r1	; 0x01
				  dmx[1] = 0;
 616:	1a 82       	std	Y+2, r1	; 0x02
				  dmx[2] = 0;
 618:	1b 82       	std	Y+3, r1	; 0x03
				  dmx[3] = 50;
 61a:	82 e3       	ldi	r24, 0x32	; 50
 61c:	8c 83       	std	Y+4, r24	; 0x04
    			  dmx[4] = 0;
 61e:	1d 82       	std	Y+5, r1	; 0x05
				  dmx[5] = 0;
 620:	1e 82       	std	Y+6, r1	; 0x06
    			  dmx[6] = jas;
 622:	7f 82       	std	Y+7, r7	; 0x07
				  //-----------------------
    			  dmx[7] = 255;	//kruhy
 624:	08 87       	std	Y+8, r16	; 0x08
    			  dmx[8] = 0;
 626:	19 86       	std	Y+9, r1	; 0x09
    			  dmx[9] = 255;
 628:	0a 87       	std	Y+10, r16	; 0x0a
    			  dmx[10] = 0;
 62a:	1b 86       	std	Y+11, r1	; 0x0b
				  //-----------------------
    			  dmx[11]=88;		//polgula
 62c:	6c 86       	std	Y+12, r6	; 0x0c
				  dmx[12]=255;
 62e:	0d 87       	std	Y+13, r16	; 0x0d
				  dmx[13]=0;     
 630:	1e 86       	std	Y+14, r1	; 0x0e
    			  dmx[14]=255;      
 632:	0f 87       	std	Y+15, r16	; 0x0f
    			  dmx[15]=0;       
 634:	18 8a       	std	Y+16, r1	; 0x10
    			  dmx[16]=255;       
 636:	09 8b       	std	Y+17, r16	; 0x11
    			  dmx[17]=0;       
 638:	1a 8a       	std	Y+18, r1	; 0x12
				  dmx[18]=0;
 63a:	1b 8a       	std	Y+19, r1	; 0x13
				  //------------------------ 
				  dmx[19]=jas;		//reflektory
 63c:	7c 8a       	std	Y+20, r7	; 0x14
				  dmx[20]=0;
 63e:	1d 8a       	std	Y+21, r1	; 0x15
				  dmx[21]=jas;     
 640:	7e 8a       	std	Y+22, r7	; 0x16
    			  dmx[22]=0;      
 642:	1f 8a       	std	Y+23, r1	; 0x17
    			  dmx[23]=0;       
 644:	18 8e       	std	Y+24, r1	; 0x18
    			  dmx[24]=0;       
 646:	19 8e       	std	Y+25, r1	; 0x19
    			  dmx[25]=0;       
 648:	1a 8e       	std	Y+26, r1	; 0x1a
				  dmx[26]=255;
 64a:	0b 8f       	std	Y+27, r16	; 0x1b
				  //------------------------ 
				  dmx[27]=jas;		//1x reflektor
 64c:	7c 8e       	std	Y+28, r7	; 0x1c
				  dmx[28]=0;
 64e:	1d 8e       	std	Y+29, r1	; 0x1d
				  dmx[29]=jas;     
 650:	7e 8e       	std	Y+30, r7	; 0x1e
    			  dmx[30]=0;      
 652:	1f 8e       	std	Y+31, r1	; 0x1f
    			  dmx[31]=0;       
 654:	18 a2       	std	Y+32, r1	; 0x20
    			  dmx[32]=0;       
 656:	19 a2       	std	Y+33, r1	; 0x21
    			  dmx[33]=0;       
 658:	1a a2       	std	Y+34, r1	; 0x22
				  dmx[34]=255;	
 65a:	0b a3       	std	Y+35, r16	; 0x23
				  //------------------------ 
				  dmx[35]=jas;		//2x reflektor
 65c:	7c a2       	std	Y+36, r7	; 0x24
				  dmx[36]=0;
 65e:	1d a2       	std	Y+37, r1	; 0x25
				  dmx[37]=jas;     
 660:	7e a2       	std	Y+38, r7	; 0x26
    			  dmx[38]=0;      
 662:	1f a2       	std	Y+39, r1	; 0x27
    			  dmx[39]=0;       
 664:	18 a6       	std	Y+40, r1	; 0x28
    			  dmx[40]=0;       	
 666:	19 a6       	std	Y+41, r1	; 0x29
 668:	17 e3       	ldi	r17, 0x37	; 55
 66a:	e7 c0       	rjmp	.+462    	; 0x83a <main+0x524>
				  //------------------------ 
				  last_push = '7';
				  break;
//-----------------------------------------------------------  
		case '8': dmx[0] = 0;		//pas
 66c:	19 82       	std	Y+1, r1	; 0x01
				  dmx[1] = 0;
 66e:	1a 82       	std	Y+2, r1	; 0x02
				  dmx[2] = 0;
 670:	1b 82       	std	Y+3, r1	; 0x03
				  dmx[3] = 0;
 672:	1c 82       	std	Y+4, r1	; 0x04
    			  dmx[4] = 0;
 674:	1d 82       	std	Y+5, r1	; 0x05
				  dmx[5] = 0;
 676:	1e 82       	std	Y+6, r1	; 0x06
    			  dmx[6] = 0;
 678:	1f 82       	std	Y+7, r1	; 0x07
						  //-----------------------
    			  dmx[7] = 255;	//kruhy
 67a:	08 87       	std	Y+8, r16	; 0x08
    			  dmx[8] = 36;
 67c:	34 e2       	ldi	r19, 0x24	; 36
 67e:	39 87       	std	Y+9, r19	; 0x09
    			  dmx[9] = 122;
 680:	6a e7       	ldi	r22, 0x7A	; 122
 682:	6a 87       	std	Y+10, r22	; 0x0a
    			  dmx[10] = 0;
 684:	1b 86       	std	Y+11, r1	; 0x0b
				  //-----------------------
    			  dmx[11]=0;		//polgula
 686:	1c 86       	std	Y+12, r1	; 0x0c
				  dmx[12]=255;
 688:	0d 87       	std	Y+13, r16	; 0x0d
				  dmx[13]=0;     
 68a:	1e 86       	std	Y+14, r1	; 0x0e
    			  dmx[14]=0;      
 68c:	1f 86       	std	Y+15, r1	; 0x0f
    			  dmx[15]=0;       
 68e:	18 8a       	std	Y+16, r1	; 0x10
    			  dmx[16]=0;       
 690:	19 8a       	std	Y+17, r1	; 0x11
    			  dmx[17]=0;       
 692:	1a 8a       	std	Y+18, r1	; 0x12
				  dmx[18]=0;
 694:	1b 8a       	std	Y+19, r1	; 0x13
					//------------------------ 
				  dmx[19]=0;		//reflektory
 696:	1c 8a       	std	Y+20, r1	; 0x14
				  dmx[20]=0;
 698:	1d 8a       	std	Y+21, r1	; 0x15
				  dmx[21]=0;     
 69a:	1e 8a       	std	Y+22, r1	; 0x16
    			  dmx[22]=0;      
 69c:	1f 8a       	std	Y+23, r1	; 0x17
    			  dmx[23]=0;       
 69e:	18 8e       	std	Y+24, r1	; 0x18
    			  dmx[24]=0;       
 6a0:	19 8e       	std	Y+25, r1	; 0x19
    			  dmx[25]=0;       
 6a2:	1a 8e       	std	Y+26, r1	; 0x1a
				  dmx[26]=0;	
 6a4:	1b 8e       	std	Y+27, r1	; 0x1b
				  //------------------------ 
				  dmx[27]=0;		//1x reflektor
 6a6:	1c 8e       	std	Y+28, r1	; 0x1c
				  dmx[28]=0;
 6a8:	1d 8e       	std	Y+29, r1	; 0x1d
				  dmx[29]=0;     
 6aa:	1e 8e       	std	Y+30, r1	; 0x1e
    			  dmx[30]=0;      
 6ac:	1f 8e       	std	Y+31, r1	; 0x1f
    			  dmx[31]=0;       
 6ae:	18 a2       	std	Y+32, r1	; 0x20
    			  dmx[32]=0;       
 6b0:	19 a2       	std	Y+33, r1	; 0x21
    			  dmx[33]=0;       
 6b2:	1a a2       	std	Y+34, r1	; 0x22
				  dmx[34]=0;	
 6b4:	1b a2       	std	Y+35, r1	; 0x23
				  //------------------------ 
				  dmx[35]=0;		//2x reflektor
 6b6:	1c a2       	std	Y+36, r1	; 0x24
				  dmx[36]=0;
 6b8:	1d a2       	std	Y+37, r1	; 0x25
				  dmx[37]=0;     
 6ba:	1e a2       	std	Y+38, r1	; 0x26
    			  dmx[38]=0;      
 6bc:	1f a2       	std	Y+39, r1	; 0x27
    			  dmx[39]=0;       
 6be:	18 a6       	std	Y+40, r1	; 0x28
    			  dmx[40]=0;    
 6c0:	19 a6       	std	Y+41, r1	; 0x29
 6c2:	2f e0       	ldi	r18, 0x0F	; 15
 6c4:	30 e0       	ldi	r19, 0x00	; 0
 6c6:	a9 96       	adiw	r28, 0x29	; 41
 6c8:	1f ae       	std	Y+63, r1	; 0x3f
 6ca:	1e ae       	std	Y+62, r1	; 0x3e
 6cc:	a9 97       	sbiw	r28, 0x29	; 41
 6ce:	18 e3       	ldi	r17, 0x38	; 56
 6d0:	a7 96       	adiw	r28, 0x27	; 39
 6d2:	1f ae       	std	Y+63, r1	; 0x3f
 6d4:	1e ae       	std	Y+62, r1	; 0x3e
 6d6:	a7 97       	sbiw	r28, 0x27	; 39
 6d8:	72 e0       	ldi	r23, 0x02	; 2
 6da:	c7 2e       	mov	r12, r23
 6dc:	d1 2c       	mov	r13, r1
 6de:	62 e0       	ldi	r22, 0x02	; 2
 6e0:	e6 2e       	mov	r14, r22
 6e2:	f1 2c       	mov	r15, r1
 6e4:	52 e0       	ldi	r21, 0x02	; 2
 6e6:	a5 2e       	mov	r10, r21
 6e8:	b1 2c       	mov	r11, r1
 6ea:	ac c0       	rjmp	.+344    	; 0x844 <main+0x52e>
				  rgb[2]=test;
				  rgb[3] = 0;   	
				  last_push = '8';
				  break;	
//-----------------------------------------------------------  
		case '9': dmx[0] = 0;		//pas
 6ec:	19 82       	std	Y+1, r1	; 0x01
				  dmx[1] = 0;
 6ee:	1a 82       	std	Y+2, r1	; 0x02
				  dmx[2] = 0;
 6f0:	1b 82       	std	Y+3, r1	; 0x03
				  dmx[3] = 0;
 6f2:	1c 82       	std	Y+4, r1	; 0x04
    			  dmx[4] = 0;
 6f4:	1d 82       	std	Y+5, r1	; 0x05
				  dmx[5] = 0;
 6f6:	1e 82       	std	Y+6, r1	; 0x06
    			  dmx[6] = 0;
 6f8:	1f 82       	std	Y+7, r1	; 0x07
				  //-----------------------
    			  dmx[7] = 255;	//kruhy
 6fa:	08 87       	std	Y+8, r16	; 0x08
    			  dmx[8] = 0;
 6fc:	19 86       	std	Y+9, r1	; 0x09
    			  dmx[9] = 255;
 6fe:	0a 87       	std	Y+10, r16	; 0x0a
    			  dmx[10] = 35;
 700:	73 e2       	ldi	r23, 0x23	; 35
 702:	7b 87       	std	Y+11, r23	; 0x0b
				  //-----------------------
    			  dmx[11]=0;		//polgula
 704:	1c 86       	std	Y+12, r1	; 0x0c
				  dmx[12]=255;
 706:	0d 87       	std	Y+13, r16	; 0x0d
				  dmx[13]=0;     
 708:	1e 86       	std	Y+14, r1	; 0x0e
    			  dmx[14]=0;      
 70a:	1f 86       	std	Y+15, r1	; 0x0f
    			  dmx[15]=0;       
 70c:	18 8a       	std	Y+16, r1	; 0x10
    			  dmx[16]=0;       
 70e:	19 8a       	std	Y+17, r1	; 0x11
    			  dmx[17]=0;       
 710:	1a 8a       	std	Y+18, r1	; 0x12
				  dmx[18]=0;
 712:	1b 8a       	std	Y+19, r1	; 0x13
		//------------------------ 
				  dmx[19]=0;		//reflektory
 714:	1c 8a       	std	Y+20, r1	; 0x14
				  dmx[20]=0;
 716:	1d 8a       	std	Y+21, r1	; 0x15
				  dmx[21]=0;     
 718:	1e 8a       	std	Y+22, r1	; 0x16
    			  dmx[22]=0;      
 71a:	1f 8a       	std	Y+23, r1	; 0x17
    			  dmx[23]=0;       
 71c:	18 8e       	std	Y+24, r1	; 0x18
    			  dmx[24]=0;       
 71e:	19 8e       	std	Y+25, r1	; 0x19
    			  dmx[25]=0;       
 720:	1a 8e       	std	Y+26, r1	; 0x1a
				  dmx[26]=0;	
 722:	1b 8e       	std	Y+27, r1	; 0x1b
				  //------------------------ 
				  dmx[27]=0;		//1x reflektor
 724:	1c 8e       	std	Y+28, r1	; 0x1c
				  dmx[28]=0;
 726:	1d 8e       	std	Y+29, r1	; 0x1d
				  dmx[29]=0;     
 728:	1e 8e       	std	Y+30, r1	; 0x1e
    			  dmx[30]=0;      
 72a:	1f 8e       	std	Y+31, r1	; 0x1f
    			  dmx[31]=0;       
 72c:	18 a2       	std	Y+32, r1	; 0x20
    			  dmx[32]=0;       
 72e:	19 a2       	std	Y+33, r1	; 0x21
    			  dmx[33]=0;       
 730:	1a a2       	std	Y+34, r1	; 0x22
				  dmx[34]=0;	
 732:	1b a2       	std	Y+35, r1	; 0x23
				  //------------------------ 
				  dmx[35]=0;		//2x reflektor
 734:	1c a2       	std	Y+36, r1	; 0x24
				  dmx[36]=0;
 736:	1d a2       	std	Y+37, r1	; 0x25
				  dmx[37]=0;     
 738:	1e a2       	std	Y+38, r1	; 0x26
    			  dmx[38]=0;      
 73a:	1f a2       	std	Y+39, r1	; 0x27
    			  dmx[39]=0;       
 73c:	18 a6       	std	Y+40, r1	; 0x28
    			  dmx[40]=0;  
 73e:	19 a6       	std	Y+41, r1	; 0x29
 740:	a9 96       	adiw	r28, 0x29	; 41
 742:	1f ae       	std	Y+63, r1	; 0x3f
 744:	1e ae       	std	Y+62, r1	; 0x3e
 746:	a9 97       	sbiw	r28, 0x29	; 41
 748:	19 e3       	ldi	r17, 0x39	; 57
 74a:	a7 96       	adiw	r28, 0x27	; 39
 74c:	1f ae       	std	Y+63, r1	; 0x3f
 74e:	1e ae       	std	Y+62, r1	; 0x3e
 750:	a7 97       	sbiw	r28, 0x27	; 39
 752:	42 e0       	ldi	r20, 0x02	; 2
 754:	c4 2e       	mov	r12, r20
 756:	d1 2c       	mov	r13, r1
 758:	32 e0       	ldi	r19, 0x02	; 2
 75a:	e3 2e       	mov	r14, r19
 75c:	f1 2c       	mov	r15, r1
 75e:	22 e0       	ldi	r18, 0x02	; 2
 760:	a2 2e       	mov	r10, r18
 762:	b1 2c       	mov	r11, r1
 764:	6d c0       	rjmp	.+218    	; 0x840 <main+0x52a>
				  rgb[1]=test;
				  rgb[2]=test;
				  rgb[3] = 0;   
				  last_push = '9';	break;
//-----------------------------------------------------------	  	
		case '0': dmx[0] = 0;		//pas
 766:	19 82       	std	Y+1, r1	; 0x01
				  dmx[1] = 0;
 768:	1a 82       	std	Y+2, r1	; 0x02
				  dmx[2] = 0;
 76a:	1b 82       	std	Y+3, r1	; 0x03
				  dmx[3] = 0;
 76c:	1c 82       	std	Y+4, r1	; 0x04
    			  dmx[4] = 0;
 76e:	1d 82       	std	Y+5, r1	; 0x05
				  dmx[5] = 0;
 770:	1e 82       	std	Y+6, r1	; 0x06
    			  dmx[6] = 0;
 772:	1f 82       	std	Y+7, r1	; 0x07
						  //-----------------------
    			  dmx[7] = 255;	//kruhy
 774:	08 87       	std	Y+8, r16	; 0x08
    			  dmx[8] = 36;
 776:	84 e2       	ldi	r24, 0x24	; 36
 778:	89 87       	std	Y+9, r24	; 0x09
    			  dmx[9] = 31;
 77a:	8f e1       	ldi	r24, 0x1F	; 31
 77c:	8a 87       	std	Y+10, r24	; 0x0a
    			  dmx[10] = 0;
 77e:	1b 86       	std	Y+11, r1	; 0x0b
				  //-----------------------
    			  dmx[11]=0;		//polgula
 780:	1c 86       	std	Y+12, r1	; 0x0c
				  dmx[12]=255;
 782:	0d 87       	std	Y+13, r16	; 0x0d
				  dmx[13]=0;     
 784:	1e 86       	std	Y+14, r1	; 0x0e
    			  dmx[14]=0;      
 786:	1f 86       	std	Y+15, r1	; 0x0f
    			  dmx[15]=0;       
 788:	18 8a       	std	Y+16, r1	; 0x10
    			  dmx[16]=0;       
 78a:	19 8a       	std	Y+17, r1	; 0x11
    			  dmx[17]=0;       
 78c:	1a 8a       	std	Y+18, r1	; 0x12
				  dmx[18]=0;
 78e:	1b 8a       	std	Y+19, r1	; 0x13
				//------------------------ 
				  dmx[19]=0;		//reflektory
 790:	1c 8a       	std	Y+20, r1	; 0x14
				  dmx[20]=0;
 792:	1d 8a       	std	Y+21, r1	; 0x15
				  dmx[21]=0;     
 794:	1e 8a       	std	Y+22, r1	; 0x16
    			  dmx[22]=0;      
 796:	1f 8a       	std	Y+23, r1	; 0x17
    			  dmx[23]=0;       
 798:	18 8e       	std	Y+24, r1	; 0x18
    			  dmx[24]=0;       
 79a:	19 8e       	std	Y+25, r1	; 0x19
    			  dmx[25]=0;       
 79c:	1a 8e       	std	Y+26, r1	; 0x1a
				  dmx[26]=0;	
 79e:	1b 8e       	std	Y+27, r1	; 0x1b
				  //------------------------ 
				  dmx[27]=0;		//1x reflektor
 7a0:	1c 8e       	std	Y+28, r1	; 0x1c
				  dmx[28]=0;
 7a2:	1d 8e       	std	Y+29, r1	; 0x1d
				  dmx[29]=0;     
 7a4:	1e 8e       	std	Y+30, r1	; 0x1e
    			  dmx[30]=0;      
 7a6:	1f 8e       	std	Y+31, r1	; 0x1f
    			  dmx[31]=0;       
 7a8:	18 a2       	std	Y+32, r1	; 0x20
    			  dmx[32]=0;       
 7aa:	19 a2       	std	Y+33, r1	; 0x21
    			  dmx[33]=0;       
 7ac:	1a a2       	std	Y+34, r1	; 0x22
				  dmx[34]=0;	
 7ae:	1b a2       	std	Y+35, r1	; 0x23
				  //------------------------ 
				  dmx[35]=0;		//2x reflektor
 7b0:	1c a2       	std	Y+36, r1	; 0x24
				  dmx[36]=0;
 7b2:	1d a2       	std	Y+37, r1	; 0x25
				  dmx[37]=0;     
 7b4:	1e a2       	std	Y+38, r1	; 0x26
    			  dmx[38]=0;      
 7b6:	1f a2       	std	Y+39, r1	; 0x27
    			  dmx[39]=0;       
 7b8:	18 a6       	std	Y+40, r1	; 0x28
    			  dmx[40]=0;  
 7ba:	19 a6       	std	Y+41, r1	; 0x29
 7bc:	a9 96       	adiw	r28, 0x29	; 41
 7be:	1f ae       	std	Y+63, r1	; 0x3f
 7c0:	1e ae       	std	Y+62, r1	; 0x3e
 7c2:	a9 97       	sbiw	r28, 0x29	; 41
 7c4:	10 e3       	ldi	r17, 0x30	; 48
 7c6:	a7 96       	adiw	r28, 0x27	; 39
 7c8:	1f ae       	std	Y+63, r1	; 0x3f
 7ca:	1e ae       	std	Y+62, r1	; 0x3e
 7cc:	a7 97       	sbiw	r28, 0x27	; 39
 7ce:	92 e0       	ldi	r25, 0x02	; 2
 7d0:	c9 2e       	mov	r12, r25
 7d2:	d1 2c       	mov	r13, r1
 7d4:	82 e0       	ldi	r24, 0x02	; 2
 7d6:	e8 2e       	mov	r14, r24
 7d8:	f1 2c       	mov	r15, r1
 7da:	b2 e0       	ldi	r27, 0x02	; 2
 7dc:	ab 2e       	mov	r10, r27
 7de:	b1 2c       	mov	r11, r1
 7e0:	2c c0       	rjmp	.+88     	; 0x83a <main+0x524>
				  rgb[0]=test;
				  rgb[1]=test;
				  rgb[2]=test;
				  rgb[3] = 0;   
				  dir8=0;
				  last_push = '0';	break;	
 7e2:	fe 01       	movw	r30, r28
 7e4:	31 96       	adiw	r30, 0x01	; 1
//-----------------------------------------------------------  
		case '_':for(por=0;por<27;por++) dmx[por]=0;
 7e6:	11 92       	st	Z+, r1
 7e8:	e1 96       	adiw	r28, 0x31	; 49
 7ea:	2e ad       	ldd	r18, Y+62	; 0x3e
 7ec:	3f ad       	ldd	r19, Y+63	; 0x3f
 7ee:	e1 97       	sbiw	r28, 0x31	; 49
 7f0:	e2 17       	cp	r30, r18
 7f2:	f3 07       	cpc	r31, r19
 7f4:	c1 f7       	brne	.-16     	; 0x7e6 <main+0x4d0>
				 for(por=35;por<41;por++) dmx[por]=0;
 7f6:	1c a2       	std	Y+36, r1	; 0x24
 7f8:	1d a2       	std	Y+37, r1	; 0x25
 7fa:	1e a2       	std	Y+38, r1	; 0x26
 7fc:	1f a2       	std	Y+39, r1	; 0x27
 7fe:	18 a6       	std	Y+40, r1	; 0x28
 800:	19 a6       	std	Y+41, r1	; 0x29
 802:	a9 e2       	ldi	r26, 0x29	; 41
 804:	8a 2e       	mov	r8, r26
 806:	91 2c       	mov	r9, r1
 808:	1f e5       	ldi	r17, 0x5F	; 95
 80a:	17 c0       	rjmp	.+46     	; 0x83a <main+0x524>
				 last_push = '_';	break;
//-----------------------------------------------------------  
		case 'O': if (jas==255)	jas=30;
 80c:	3f ef       	ldi	r19, 0xFF	; 255
 80e:	73 16       	cp	r7, r19
 810:	19 f4       	brne	.+6      	; 0x818 <main+0x502>
 812:	fe e1       	ldi	r31, 0x1E	; 30
 814:	7f 2e       	mov	r7, r31
 816:	02 c0       	rjmp	.+4      	; 0x81c <main+0x506>
 818:	77 24       	eor	r7, r7
 81a:	7a 94       	dec	r7
 81c:	88 e8       	ldi	r24, 0x88	; 136
 81e:	93 e1       	ldi	r25, 0x13	; 19
 820:	e0 e9       	ldi	r30, 0x90	; 144
 822:	f1 e0       	ldi	r31, 0x01	; 1
 824:	31 97       	sbiw	r30, 0x01	; 1
 826:	f1 f7       	brne	.-4      	; 0x824 <main+0x50e>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 828:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 82a:	d1 f7       	brne	.-12     	; 0x820 <main+0x50a>
				  else          jas=255;
				  _delay_ms(500);
				  break;		
//-----------------------------------------------------------  
	}
		if(last_push == '8') {por1hod = 15;}
 82c:	18 33       	cpi	r17, 0x38	; 56
 82e:	19 f4       	brne	.+6      	; 0x836 <main+0x520>
 830:	2f e0       	ldi	r18, 0x0F	; 15
 832:	30 e0       	ldi	r19, 0x00	; 0
 834:	07 c0       	rjmp	.+14     	; 0x844 <main+0x52e>
		else if(last_push == '9') {por1hod = 7;}
 836:	19 33       	cpi	r17, 0x39	; 57
 838:	19 f0       	breq	.+6      	; 0x840 <main+0x52a>
 83a:	23 e0       	ldi	r18, 0x03	; 3
 83c:	30 e0       	ldi	r19, 0x00	; 0
 83e:	02 c0       	rjmp	.+4      	; 0x844 <main+0x52e>
 840:	27 e0       	ldi	r18, 0x07	; 7
 842:	30 e0       	ldi	r19, 0x00	; 0
		else{	por1hod = 3;}
	if(last_push == '8' || last_push == '9' || last_push == '0'){
 844:	81 2f       	mov	r24, r17
 846:	88 53       	subi	r24, 0x38	; 56
 848:	82 30       	cpi	r24, 0x02	; 2
 84a:	18 f0       	brcs	.+6      	; 0x852 <main+0x53c>
 84c:	10 33       	cpi	r17, 0x30	; 48
 84e:	09 f0       	breq	.+2      	; 0x852 <main+0x53c>
 850:	85 c1       	rjmp	.+778    	; 0xb5c <__stack+0x2fd>
		if (por1>=por1hod){
 852:	22 16       	cp	r2, r18
 854:	33 06       	cpc	r3, r19
 856:	0c f4       	brge	.+2      	; 0x85a <main+0x544>
 858:	6e c1       	rjmp	.+732    	; 0xb36 <__stack+0x2d7>
 85a:	99 81       	ldd	r25, Y+1	; 0x01
			if(dir8==0){
 85c:	a9 96       	adiw	r28, 0x29	; 41
 85e:	6e ad       	ldd	r22, Y+62	; 0x3e
 860:	7f ad       	ldd	r23, Y+63	; 0x3f
 862:	a9 97       	sbiw	r28, 0x29	; 41
 864:	67 2b       	or	r22, r23
 866:	09 f0       	breq	.+2      	; 0x86a <__stack+0xb>
 868:	5d c0       	rjmp	.+186    	; 0x924 <__stack+0xc5>
				  dmx[0] += rgb[0] ;		//pas
 86a:	9a 0d       	add	r25, r10
 86c:	99 83       	std	Y+1, r25	; 0x01
				  dmx[1] += rgb[1];
 86e:	8a 81       	ldd	r24, Y+2	; 0x02
 870:	8e 0d       	add	r24, r14
 872:	8a 83       	std	Y+2, r24	; 0x02
				  dmx[2] += rgb[2];
 874:	8b 81       	ldd	r24, Y+3	; 0x03
 876:	8c 0d       	add	r24, r12
 878:	8b 83       	std	Y+3, r24	; 0x03
				  dmx[3] = 0;
 87a:	1c 82       	std	Y+4, r1	; 0x04
    			  dmx[4] = 0;
 87c:	1d 82       	std	Y+5, r1	; 0x05
				  dmx[5] = 0;
 87e:	1e 82       	std	Y+6, r1	; 0x06
				  dmx[6] = 255;
 880:	0f 83       	std	Y+7, r16	; 0x07
				  //------------------------
				  dmx[14]+=rgb[0];      
 882:	8f 85       	ldd	r24, Y+15	; 0x0f
 884:	8a 0d       	add	r24, r10
 886:	8f 87       	std	Y+15, r24	; 0x0f
    			  dmx[15]+=rgb[1];       
 888:	88 89       	ldd	r24, Y+16	; 0x10
 88a:	8e 0d       	add	r24, r14
 88c:	88 8b       	std	Y+16, r24	; 0x10
    			  dmx[16]+=rgb[2];       
 88e:	89 89       	ldd	r24, Y+17	; 0x11
 890:	8c 0d       	add	r24, r12
 892:	89 8b       	std	Y+17, r24	; 0x11
    			  dmx[17]+=((rgb[0]*rgb[1]*rgb[2])/4);   
 894:	ea 9c       	mul	r14, r10
 896:	c0 01       	movw	r24, r0
 898:	eb 9c       	mul	r14, r11
 89a:	90 0d       	add	r25, r0
 89c:	fa 9c       	mul	r15, r10
 89e:	90 0d       	add	r25, r0
 8a0:	11 24       	eor	r1, r1
 8a2:	bc 01       	movw	r22, r24
 8a4:	6c 9d       	mul	r22, r12
 8a6:	c0 01       	movw	r24, r0
 8a8:	6d 9d       	mul	r22, r13
 8aa:	90 0d       	add	r25, r0
 8ac:	7c 9d       	mul	r23, r12
 8ae:	90 0d       	add	r25, r0
 8b0:	11 24       	eor	r1, r1
 8b2:	64 e0       	ldi	r22, 0x04	; 4
 8b4:	70 e0       	ldi	r23, 0x00	; 0
 8b6:	0e 94 4c 06 	call	0xc98	; 0xc98 <__divmodhi4>
 8ba:	8a 89       	ldd	r24, Y+18	; 0x12
 8bc:	86 0f       	add	r24, r22
 8be:	8a 8b       	std	Y+18, r24	; 0x12
				  //----------------- 
				  dmx[19]+=rgb[0];		//reflektory
 8c0:	8c 89       	ldd	r24, Y+20	; 0x14
 8c2:	8a 0d       	add	r24, r10
 8c4:	8c 8b       	std	Y+20, r24	; 0x14
				  dmx[20]+=rgb[1];
 8c6:	8d 89       	ldd	r24, Y+21	; 0x15
 8c8:	8e 0d       	add	r24, r14
 8ca:	8d 8b       	std	Y+21, r24	; 0x15
				  dmx[21]+=rgb[2]; 
 8cc:	8e 89       	ldd	r24, Y+22	; 0x16
 8ce:	8c 0d       	add	r24, r12
 8d0:	8e 8b       	std	Y+22, r24	; 0x16
				  dmx[22]+=((rgb[0]*rgb[1]*rgb[2])/4);  
 8d2:	8f 89       	ldd	r24, Y+23	; 0x17
 8d4:	86 0f       	add	r24, r22
 8d6:	8f 8b       	std	Y+23, r24	; 0x17
    			  dmx[23]=0;       
 8d8:	18 8e       	std	Y+24, r1	; 0x18
    			  dmx[24]=0;       
 8da:	19 8e       	std	Y+25, r1	; 0x19
    			  dmx[25]=0;       
 8dc:	1a 8e       	std	Y+26, r1	; 0x1a
				  dmx[26]=0; 
 8de:	1b 8e       	std	Y+27, r1	; 0x1b
				  //--------------------
				  dmx[27]+=rgb[0];		//1x reflektor
 8e0:	8c 8d       	ldd	r24, Y+28	; 0x1c
 8e2:	8a 0d       	add	r24, r10
 8e4:	8c 8f       	std	Y+28, r24	; 0x1c
				  dmx[28]+=rgb[1];
 8e6:	8d 8d       	ldd	r24, Y+29	; 0x1d
 8e8:	8e 0d       	add	r24, r14
 8ea:	8d 8f       	std	Y+29, r24	; 0x1d
				  dmx[29]+=rgb[2];     
 8ec:	8e 8d       	ldd	r24, Y+30	; 0x1e
 8ee:	8c 0d       	add	r24, r12
 8f0:	8e 8f       	std	Y+30, r24	; 0x1e
    			  dmx[30]+=((rgb[0]*rgb[1]*rgb[2])/4);
 8f2:	8f 8d       	ldd	r24, Y+31	; 0x1f
 8f4:	86 0f       	add	r24, r22
 8f6:	8f 8f       	std	Y+31, r24	; 0x1f
				  dmx[31]=0;       
 8f8:	18 a2       	std	Y+32, r1	; 0x20
    			  dmx[32]=0;       
 8fa:	19 a2       	std	Y+33, r1	; 0x21
    			  dmx[33]=0;       
 8fc:	1a a2       	std	Y+34, r1	; 0x22
				  dmx[34]=0;
 8fe:	1b a2       	std	Y+35, r1	; 0x23
				  //---------
				  dmx[35]+=rgb[0];		//2x reflektor
 900:	8c a1       	ldd	r24, Y+36	; 0x24
 902:	8a 0d       	add	r24, r10
 904:	8c a3       	std	Y+36, r24	; 0x24
				  dmx[36]+=rgb[1];
 906:	8d a1       	ldd	r24, Y+37	; 0x25
 908:	8e 0d       	add	r24, r14
 90a:	8d a3       	std	Y+37, r24	; 0x25
				  dmx[37]+=rgb[2];
 90c:	8e a1       	ldd	r24, Y+38	; 0x26
 90e:	8c 0d       	add	r24, r12
 910:	8e a3       	std	Y+38, r24	; 0x26
				  dmx[38]=0;      
 912:	1f a2       	std	Y+39, r1	; 0x27
    			  dmx[39]=0;       
 914:	18 a6       	std	Y+40, r1	; 0x28
    			  dmx[40]=0;    
 916:	19 a6       	std	Y+41, r1	; 0x29
				  rgb[3]+=test;
 918:	a7 96       	adiw	r28, 0x27	; 39
 91a:	8e ad       	ldd	r24, Y+62	; 0x3e
 91c:	9f ad       	ldd	r25, Y+63	; 0x3f
 91e:	a7 97       	sbiw	r28, 0x27	; 39
 920:	02 96       	adiw	r24, 0x02	; 2
 922:	6c c0       	rjmp	.+216    	; 0x9fc <__stack+0x19d>
			}
			else{
				if((dmx[0] > 0 || dmx[1] > 0 || dmx[2] > 0) && rgb[3]<230 ){
 924:	99 23       	and	r25, r25
 926:	31 f4       	brne	.+12     	; 0x934 <__stack+0xd5>
 928:	8a 81       	ldd	r24, Y+2	; 0x02
 92a:	88 23       	and	r24, r24
 92c:	19 f4       	brne	.+6      	; 0x934 <__stack+0xd5>
 92e:	8b 81       	ldd	r24, Y+3	; 0x03
 930:	88 23       	and	r24, r24
 932:	79 f0       	breq	.+30     	; 0x952 <__stack+0xf3>
 934:	a7 96       	adiw	r28, 0x27	; 39
 936:	2e ad       	ldd	r18, Y+62	; 0x3e
 938:	3f ad       	ldd	r19, Y+63	; 0x3f
 93a:	a7 97       	sbiw	r28, 0x27	; 39
 93c:	26 3e       	cpi	r18, 0xE6	; 230
 93e:	31 05       	cpc	r19, r1
 940:	44 f4       	brge	.+16     	; 0x952 <__stack+0xf3>
				  dmx[0] -= rgb[0];		//pas
 942:	9a 19       	sub	r25, r10
 944:	99 83       	std	Y+1, r25	; 0x01
				  dmx[1] -= rgb[1];
 946:	8a 81       	ldd	r24, Y+2	; 0x02
 948:	8e 19       	sub	r24, r14
 94a:	8a 83       	std	Y+2, r24	; 0x02
				  dmx[2] -= rgb[2];	  
 94c:	8b 81       	ldd	r24, Y+3	; 0x03
 94e:	8c 19       	sub	r24, r12
 950:	8b 83       	std	Y+3, r24	; 0x03
				  }
				  dmx[3] = 0;
 952:	1c 82       	std	Y+4, r1	; 0x04
    			  dmx[4] = 0;
 954:	1d 82       	std	Y+5, r1	; 0x05
				  dmx[5] = 0;
 956:	1e 82       	std	Y+6, r1	; 0x06
    			  dmx[6] = 255;
 958:	0f 83       	std	Y+7, r16	; 0x07
				  //------------------------
				  dmx[14]-=rgb[0];      
 95a:	8f 85       	ldd	r24, Y+15	; 0x0f
 95c:	8a 19       	sub	r24, r10
 95e:	8f 87       	std	Y+15, r24	; 0x0f
    			  dmx[15]-=rgb[1];       
 960:	88 89       	ldd	r24, Y+16	; 0x10
 962:	8e 19       	sub	r24, r14
 964:	88 8b       	std	Y+16, r24	; 0x10
    			  dmx[16]-=rgb[2];       
 966:	89 89       	ldd	r24, Y+17	; 0x11
 968:	8c 19       	sub	r24, r12
 96a:	89 8b       	std	Y+17, r24	; 0x11
    			  dmx[17]-=((rgb[0]*rgb[1]*rgb[2])/4);  
 96c:	ea 9c       	mul	r14, r10
 96e:	c0 01       	movw	r24, r0
 970:	eb 9c       	mul	r14, r11
 972:	90 0d       	add	r25, r0
 974:	fa 9c       	mul	r15, r10
 976:	90 0d       	add	r25, r0
 978:	11 24       	eor	r1, r1
 97a:	bc 01       	movw	r22, r24
 97c:	6c 9d       	mul	r22, r12
 97e:	c0 01       	movw	r24, r0
 980:	6d 9d       	mul	r22, r13
 982:	90 0d       	add	r25, r0
 984:	7c 9d       	mul	r23, r12
 986:	90 0d       	add	r25, r0
 988:	11 24       	eor	r1, r1
 98a:	64 e0       	ldi	r22, 0x04	; 4
 98c:	70 e0       	ldi	r23, 0x00	; 0
 98e:	0e 94 4c 06 	call	0xc98	; 0xc98 <__divmodhi4>
 992:	61 95       	neg	r22
 994:	8a 89       	ldd	r24, Y+18	; 0x12
 996:	86 0f       	add	r24, r22
 998:	8a 8b       	std	Y+18, r24	; 0x12
				  //------------------------ 
				  dmx[19]-=rgb[0];		//reflektory
 99a:	8c 89       	ldd	r24, Y+20	; 0x14
 99c:	8a 19       	sub	r24, r10
 99e:	8c 8b       	std	Y+20, r24	; 0x14
				  dmx[20]-=rgb[1];
 9a0:	8d 89       	ldd	r24, Y+21	; 0x15
 9a2:	8e 19       	sub	r24, r14
 9a4:	8d 8b       	std	Y+21, r24	; 0x15
				  dmx[21]-=rgb[2]; 
 9a6:	8e 89       	ldd	r24, Y+22	; 0x16
 9a8:	8c 19       	sub	r24, r12
 9aa:	8e 8b       	std	Y+22, r24	; 0x16
				  dmx[22]-=((rgb[0]*rgb[1]*rgb[2])/4);      
 9ac:	8f 89       	ldd	r24, Y+23	; 0x17
 9ae:	86 0f       	add	r24, r22
 9b0:	8f 8b       	std	Y+23, r24	; 0x17
    			  dmx[23]=0;       
 9b2:	18 8e       	std	Y+24, r1	; 0x18
    			  dmx[24]=0;       
 9b4:	19 8e       	std	Y+25, r1	; 0x19
    			  dmx[25]=0;       
 9b6:	1a 8e       	std	Y+26, r1	; 0x1a
				  dmx[26]=0; 
 9b8:	1b 8e       	std	Y+27, r1	; 0x1b
				  //--------------------
				  dmx[27]-=rgb[0];		//1x reflektor
 9ba:	8c 8d       	ldd	r24, Y+28	; 0x1c
 9bc:	8a 19       	sub	r24, r10
 9be:	8c 8f       	std	Y+28, r24	; 0x1c
				  dmx[28]-=rgb[1];
 9c0:	8d 8d       	ldd	r24, Y+29	; 0x1d
 9c2:	8e 19       	sub	r24, r14
 9c4:	8d 8f       	std	Y+29, r24	; 0x1d
				  dmx[29]-=rgb[2];     
 9c6:	8e 8d       	ldd	r24, Y+30	; 0x1e
 9c8:	8c 19       	sub	r24, r12
 9ca:	8e 8f       	std	Y+30, r24	; 0x1e
    			  dmx[30]-=((rgb[0]*rgb[1]*rgb[2])/4);
 9cc:	8f 8d       	ldd	r24, Y+31	; 0x1f
 9ce:	86 0f       	add	r24, r22
 9d0:	8f 8f       	std	Y+31, r24	; 0x1f
				  dmx[31]=0;       
 9d2:	18 a2       	std	Y+32, r1	; 0x20
    			  dmx[32]=0;       
 9d4:	19 a2       	std	Y+33, r1	; 0x21
    			  dmx[33]=0;       
 9d6:	1a a2       	std	Y+34, r1	; 0x22
				  dmx[34]=0;
 9d8:	1b a2       	std	Y+35, r1	; 0x23
				  //---------
				  dmx[35]-=rgb[0];		//2x reflektor
 9da:	8c a1       	ldd	r24, Y+36	; 0x24
 9dc:	8a 19       	sub	r24, r10
 9de:	8c a3       	std	Y+36, r24	; 0x24
				  dmx[36]-=rgb[1];
 9e0:	8d a1       	ldd	r24, Y+37	; 0x25
 9e2:	8e 19       	sub	r24, r14
 9e4:	8d a3       	std	Y+37, r24	; 0x25
				  dmx[37]-=rgb[2];
 9e6:	8e a1       	ldd	r24, Y+38	; 0x26
 9e8:	8c 19       	sub	r24, r12
 9ea:	8e a3       	std	Y+38, r24	; 0x26
				  dmx[38]=0;      
 9ec:	1f a2       	std	Y+39, r1	; 0x27
    			  dmx[39]=0;       
 9ee:	18 a6       	std	Y+40, r1	; 0x28
    			  dmx[40]=0;    
 9f0:	19 a6       	std	Y+41, r1	; 0x29
				  rgb[3]-=test;
 9f2:	a7 96       	adiw	r28, 0x27	; 39
 9f4:	8e ad       	ldd	r24, Y+62	; 0x3e
 9f6:	9f ad       	ldd	r25, Y+63	; 0x3f
 9f8:	a7 97       	sbiw	r28, 0x27	; 39
 9fa:	02 97       	sbiw	r24, 0x02	; 2
 9fc:	a7 96       	adiw	r28, 0x27	; 39
 9fe:	9f af       	std	Y+63, r25	; 0x3f
 a00:	8e af       	std	Y+62, r24	; 0x3e
 a02:	a7 97       	sbiw	r28, 0x27	; 39
			}
			if(rgb[3]>=254){ dir8=1;}
 a04:	a7 96       	adiw	r28, 0x27	; 39
 a06:	2e ad       	ldd	r18, Y+62	; 0x3e
 a08:	3f ad       	ldd	r19, Y+63	; 0x3f
 a0a:	a7 97       	sbiw	r28, 0x27	; 39
 a0c:	2e 3f       	cpi	r18, 0xFE	; 254
 a0e:	31 05       	cpc	r19, r1
 a10:	4c f0       	brlt	.+18     	; 0xa24 <__stack+0x1c5>
 a12:	22 24       	eor	r2, r2
 a14:	33 24       	eor	r3, r3
 a16:	61 e0       	ldi	r22, 0x01	; 1
 a18:	70 e0       	ldi	r23, 0x00	; 0
 a1a:	a9 96       	adiw	r28, 0x29	; 41
 a1c:	7f af       	std	Y+63, r23	; 0x3f
 a1e:	6e af       	std	Y+62, r22	; 0x3e
 a20:	a9 97       	sbiw	r28, 0x29	; 41
 a22:	9c c0       	rjmp	.+312    	; 0xb5c <__stack+0x2fd>
			else if(rgb[3] <= 0){ 
 a24:	a7 96       	adiw	r28, 0x27	; 39
 a26:	8e ad       	ldd	r24, Y+62	; 0x3e
 a28:	9f ad       	ldd	r25, Y+63	; 0x3f
 a2a:	a7 97       	sbiw	r28, 0x27	; 39
 a2c:	18 16       	cp	r1, r24
 a2e:	19 06       	cpc	r1, r25
 a30:	1c f4       	brge	.+6      	; 0xa38 <__stack+0x1d9>
 a32:	22 24       	eor	r2, r2
 a34:	33 24       	eor	r3, r3
 a36:	92 c0       	rjmp	.+292    	; 0xb5c <__stack+0x2fd>
				dir8=0;
				dmx[0] = 0;		//pas
 a38:	19 82       	std	Y+1, r1	; 0x01
				  dmx[1] = 0;
 a3a:	1a 82       	std	Y+2, r1	; 0x02
				  dmx[2] = 0;
 a3c:	1b 82       	std	Y+3, r1	; 0x03
				  dmx[3] = 0;
 a3e:	1c 82       	std	Y+4, r1	; 0x04
    			  dmx[4] = 0;
 a40:	1d 82       	std	Y+5, r1	; 0x05
				  dmx[5] = 0;
 a42:	1e 82       	std	Y+6, r1	; 0x06
    			  dmx[6] = 0;
 a44:	1f 82       	std	Y+7, r1	; 0x07
				if(rgb[0] == test && rgb[1] == 0 && rgb[2] == 0){
 a46:	92 e0       	ldi	r25, 0x02	; 2
 a48:	a9 16       	cp	r10, r25
 a4a:	b1 04       	cpc	r11, r1
 a4c:	c9 f4       	brne	.+50     	; 0xa80 <__stack+0x221>
 a4e:	e1 14       	cp	r14, r1
 a50:	f1 04       	cpc	r15, r1
 a52:	69 f4       	brne	.+26     	; 0xa6e <__stack+0x20f>
 a54:	c1 14       	cp	r12, r1
 a56:	d1 04       	cpc	r13, r1
 a58:	a1 f5       	brne	.+104    	; 0xac2 <__stack+0x263>
 a5a:	22 24       	eor	r2, r2
 a5c:	33 24       	eor	r3, r3
 a5e:	a9 96       	adiw	r28, 0x29	; 41
 a60:	1f ae       	std	Y+63, r1	; 0x3f
 a62:	1e ae       	std	Y+62, r1	; 0x3e
 a64:	a9 97       	sbiw	r28, 0x29	; 41
 a66:	e2 e0       	ldi	r30, 0x02	; 2
 a68:	ee 2e       	mov	r14, r30
 a6a:	f1 2c       	mov	r15, r1
 a6c:	77 c0       	rjmp	.+238    	; 0xb5c <__stack+0x2fd>
					rgb[0] = test;
					rgb[1] = test;
					rgb[2] = 0;

				}
				else if(rgb[0] == test && rgb[1] == test && rgb[2] == 0){
 a6e:	22 e0       	ldi	r18, 0x02	; 2
 a70:	e2 16       	cp	r14, r18
 a72:	f1 04       	cpc	r15, r1
 a74:	31 f5       	brne	.+76     	; 0xac2 <__stack+0x263>
 a76:	c1 14       	cp	r12, r1
 a78:	d1 04       	cpc	r13, r1
 a7a:	09 f4       	brne	.+2      	; 0xa7e <__stack+0x21f>
 a7c:	67 c0       	rjmp	.+206    	; 0xb4c <__stack+0x2ed>
 a7e:	21 c0       	rjmp	.+66     	; 0xac2 <__stack+0x263>
					rgb[0] = 0;
					rgb[1] = test;
					rgb[2] = 0;
				}
				else if(rgb[0] == 0 && rgb[1] == test && rgb[2] == 0){
 a80:	a1 14       	cp	r10, r1
 a82:	b1 04       	cpc	r11, r1
 a84:	f1 f4       	brne	.+60     	; 0xac2 <__stack+0x263>
 a86:	32 e0       	ldi	r19, 0x02	; 2
 a88:	e3 16       	cp	r14, r19
 a8a:	f1 04       	cpc	r15, r1
 a8c:	d1 f4       	brne	.+52     	; 0xac2 <__stack+0x263>
 a8e:	c1 14       	cp	r12, r1
 a90:	d1 04       	cpc	r13, r1
 a92:	51 f4       	brne	.+20     	; 0xaa8 <__stack+0x249>
 a94:	22 24       	eor	r2, r2
 a96:	33 24       	eor	r3, r3
 a98:	a9 96       	adiw	r28, 0x29	; 41
 a9a:	1f ae       	std	Y+63, r1	; 0x3f
 a9c:	1e ae       	std	Y+62, r1	; 0x3e
 a9e:	a9 97       	sbiw	r28, 0x29	; 41
 aa0:	72 e0       	ldi	r23, 0x02	; 2
 aa2:	c7 2e       	mov	r12, r23
 aa4:	d1 2c       	mov	r13, r1
 aa6:	5a c0       	rjmp	.+180    	; 0xb5c <__stack+0x2fd>
					rgb[0] = 0;
					rgb[1] = test;
					rgb[2] = test;
				}
				else if(rgb[0] == 0 && rgb[1] == test && rgb[2] == test){
 aa8:	62 e0       	ldi	r22, 0x02	; 2
 aaa:	c6 16       	cp	r12, r22
 aac:	d1 04       	cpc	r13, r1
 aae:	61 f5       	brne	.+88     	; 0xb08 <__stack+0x2a9>
 ab0:	22 24       	eor	r2, r2
 ab2:	33 24       	eor	r3, r3
 ab4:	a9 96       	adiw	r28, 0x29	; 41
 ab6:	1f ae       	std	Y+63, r1	; 0x3f
 ab8:	1e ae       	std	Y+62, r1	; 0x3e
 aba:	a9 97       	sbiw	r28, 0x29	; 41
 abc:	ee 24       	eor	r14, r14
 abe:	ff 24       	eor	r15, r15
 ac0:	1f c0       	rjmp	.+62     	; 0xb00 <__stack+0x2a1>
					rgb[0] = test;
					rgb[1] = 0;
					rgb[2] = test;
				}
				else if(rgb[0] == test && rgb[1] == 0 && rgb[2] == test){
 ac2:	72 e0       	ldi	r23, 0x02	; 2
 ac4:	a7 16       	cp	r10, r23
 ac6:	b1 04       	cpc	r11, r1
 ac8:	41 f4       	brne	.+16     	; 0xada <__stack+0x27b>
 aca:	e1 14       	cp	r14, r1
 acc:	f1 04       	cpc	r15, r1
 ace:	e1 f4       	brne	.+56     	; 0xb08 <__stack+0x2a9>
 ad0:	82 e0       	ldi	r24, 0x02	; 2
 ad2:	c8 16       	cp	r12, r24
 ad4:	d1 04       	cpc	r13, r1
 ad6:	99 f5       	brne	.+102    	; 0xb3e <__stack+0x2df>
 ad8:	39 c0       	rjmp	.+114    	; 0xb4c <__stack+0x2ed>
					rgb[0] = 0;
					rgb[1] = 0;
					rgb[2] = test;
				}
				else if(rgb[0] == 0 && rgb[1] == 0 && rgb[2] == test){
 ada:	a1 14       	cp	r10, r1
 adc:	b1 04       	cpc	r11, r1
 ade:	a1 f4       	brne	.+40     	; 0xb08 <__stack+0x2a9>
 ae0:	e1 14       	cp	r14, r1
 ae2:	f1 04       	cpc	r15, r1
 ae4:	89 f4       	brne	.+34     	; 0xb08 <__stack+0x2a9>
 ae6:	92 e0       	ldi	r25, 0x02	; 2
 ae8:	c9 16       	cp	r12, r25
 aea:	d1 04       	cpc	r13, r1
 aec:	41 f5       	brne	.+80     	; 0xb3e <__stack+0x2df>
 aee:	22 24       	eor	r2, r2
 af0:	33 24       	eor	r3, r3
 af2:	a9 96       	adiw	r28, 0x29	; 41
 af4:	1f ae       	std	Y+63, r1	; 0x3f
 af6:	1e ae       	std	Y+62, r1	; 0x3e
 af8:	a9 97       	sbiw	r28, 0x29	; 41
 afa:	62 e0       	ldi	r22, 0x02	; 2
 afc:	e6 2e       	mov	r14, r22
 afe:	f1 2c       	mov	r15, r1
 b00:	52 e0       	ldi	r21, 0x02	; 2
 b02:	a5 2e       	mov	r10, r21
 b04:	b1 2c       	mov	r11, r1
 b06:	2a c0       	rjmp	.+84     	; 0xb5c <__stack+0x2fd>
					rgb[0] = test;
					rgb[1] = test;
					rgb[2] = test;
				}
				else if(rgb[0] == test && rgb[1] == test && rgb[2] == test){
 b08:	22 e0       	ldi	r18, 0x02	; 2
 b0a:	a2 16       	cp	r10, r18
 b0c:	b1 04       	cpc	r11, r1
 b0e:	b9 f4       	brne	.+46     	; 0xb3e <__stack+0x2df>
 b10:	32 e0       	ldi	r19, 0x02	; 2
 b12:	e3 16       	cp	r14, r19
 b14:	f1 04       	cpc	r15, r1
 b16:	99 f4       	brne	.+38     	; 0xb3e <__stack+0x2df>
 b18:	62 e0       	ldi	r22, 0x02	; 2
 b1a:	c6 16       	cp	r12, r22
 b1c:	d1 04       	cpc	r13, r1
 b1e:	79 f4       	brne	.+30     	; 0xb3e <__stack+0x2df>
 b20:	22 24       	eor	r2, r2
 b22:	33 24       	eor	r3, r3
 b24:	a9 96       	adiw	r28, 0x29	; 41
 b26:	1f ae       	std	Y+63, r1	; 0x3f
 b28:	1e ae       	std	Y+62, r1	; 0x3e
 b2a:	a9 97       	sbiw	r28, 0x29	; 41
 b2c:	cc 24       	eor	r12, r12
 b2e:	dd 24       	eor	r13, r13
 b30:	ee 24       	eor	r14, r14
 b32:	ff 24       	eor	r15, r15
 b34:	13 c0       	rjmp	.+38     	; 0xb5c <__stack+0x2fd>
					rgb[2] = 0;
				}
			}
			por1=0;
		}
		else{ por1++;}
 b36:	08 94       	sec
 b38:	21 1c       	adc	r2, r1
 b3a:	31 1c       	adc	r3, r1
 b3c:	0f c0       	rjmp	.+30     	; 0xb5c <__stack+0x2fd>
 b3e:	22 24       	eor	r2, r2
 b40:	33 24       	eor	r3, r3
 b42:	a9 96       	adiw	r28, 0x29	; 41
 b44:	1f ae       	std	Y+63, r1	; 0x3f
 b46:	1e ae       	std	Y+62, r1	; 0x3e
 b48:	a9 97       	sbiw	r28, 0x29	; 41
 b4a:	08 c0       	rjmp	.+16     	; 0xb5c <__stack+0x2fd>
 b4c:	22 24       	eor	r2, r2
 b4e:	33 24       	eor	r3, r3
 b50:	a9 96       	adiw	r28, 0x29	; 41
 b52:	1f ae       	std	Y+63, r1	; 0x3f
 b54:	1e ae       	std	Y+62, r1	; 0x3e
 b56:	a9 97       	sbiw	r28, 0x29	; 41
 b58:	aa 24       	eor	r10, r10
 b5a:	bb 24       	eor	r11, r11
	}
	if ((last_push >= '3' && last_push <= '8')){
 b5c:	81 2f       	mov	r24, r17
 b5e:	83 53       	subi	r24, 0x33	; 51
 b60:	86 30       	cpi	r24, 0x06	; 6
 b62:	b0 f4       	brcc	.+44     	; 0xb90 <__stack+0x331>
		if(por == 200){ 
 b64:	78 ec       	ldi	r23, 0xC8	; 200
 b66:	87 16       	cp	r8, r23
 b68:	91 04       	cpc	r9, r1
 b6a:	09 f0       	breq	.+2      	; 0xb6e <__stack+0x30f>
 b6c:	79 c0       	rjmp	.+242    	; 0xc60 <__stack+0x401>
 b6e:	8c 85       	ldd	r24, Y+12	; 0x0c
			if (dir == 0){
 b70:	ab 96       	adiw	r28, 0x2b	; 43
 b72:	2e ad       	ldd	r18, Y+62	; 0x3e
 b74:	3f ad       	ldd	r19, Y+63	; 0x3f
 b76:	ab 97       	sbiw	r28, 0x2b	; 43
 b78:	23 2b       	or	r18, r19
 b7a:	29 f4       	brne	.+10     	; 0xb86 <__stack+0x327>
				if (dmx[11]<100)	dmx[11]+=1;
 b7c:	84 36       	cpi	r24, 0x64	; 100
 b7e:	08 f0       	brcs	.+2      	; 0xb82 <__stack+0x323>
 b80:	7a c0       	rjmp	.+244    	; 0xc76 <__stack+0x417>
 b82:	8f 5f       	subi	r24, 0xFF	; 255
 b84:	19 c0       	rjmp	.+50     	; 0xbb8 <__stack+0x359>
    			else dir =1;
			}
			else{ 
				if (dmx[11]>0)	dmx[11]-=1;
 b86:	88 23       	and	r24, r24
 b88:	09 f4       	brne	.+2      	; 0xb8c <__stack+0x32d>
 b8a:	6e c0       	rjmp	.+220    	; 0xc68 <__stack+0x409>
 b8c:	81 50       	subi	r24, 0x01	; 1
 b8e:	14 c0       	rjmp	.+40     	; 0xbb8 <__stack+0x359>
			}
			por = 0;
		}
		else por++;
	}
	else if ((last_push == '9' || last_push == '0')){
 b90:	19 33       	cpi	r17, 0x39	; 57
 b92:	11 f0       	breq	.+4      	; 0xb98 <__stack+0x339>
 b94:	10 33       	cpi	r17, 0x30	; 48
 b96:	c9 f4       	brne	.+50     	; 0xbca <__stack+0x36b>
		if(por >= 20){ 
 b98:	34 e1       	ldi	r19, 0x14	; 20
 b9a:	83 16       	cp	r8, r19
 b9c:	91 04       	cpc	r9, r1
 b9e:	0c f4       	brge	.+2      	; 0xba2 <__stack+0x343>
 ba0:	5f c0       	rjmp	.+190    	; 0xc60 <__stack+0x401>
 ba2:	8c 85       	ldd	r24, Y+12	; 0x0c
			if (dir == 0){
 ba4:	ab 96       	adiw	r28, 0x2b	; 43
 ba6:	6e ad       	ldd	r22, Y+62	; 0x3e
 ba8:	7f ad       	ldd	r23, Y+63	; 0x3f
 baa:	ab 97       	sbiw	r28, 0x2b	; 43
 bac:	67 2b       	or	r22, r23
 bae:	41 f4       	brne	.+16     	; 0xbc0 <__stack+0x361>
				if (dmx[11]<100)	dmx[11]+=6;
 bb0:	84 36       	cpi	r24, 0x64	; 100
 bb2:	08 f0       	brcs	.+2      	; 0xbb6 <__stack+0x357>
 bb4:	60 c0       	rjmp	.+192    	; 0xc76 <__stack+0x417>
 bb6:	8a 5f       	subi	r24, 0xFA	; 250
 bb8:	8c 87       	std	Y+12, r24	; 0x0c
 bba:	88 24       	eor	r8, r8
 bbc:	99 24       	eor	r9, r9
 bbe:	63 c0       	rjmp	.+198    	; 0xc86 <__stack+0x427>
    			else dir =1;
			}
			else{ 
				if (dmx[11]>0)	dmx[11]-=6;
 bc0:	88 23       	and	r24, r24
 bc2:	09 f4       	brne	.+2      	; 0xbc6 <__stack+0x367>
 bc4:	51 c0       	rjmp	.+162    	; 0xc68 <__stack+0x409>
 bc6:	86 50       	subi	r24, 0x06	; 6
 bc8:	f7 cf       	rjmp	.-18     	; 0xbb8 <__stack+0x359>
			}
			por = 0;
		}
		else por++;
	}
	else if(last_push == '2'){
 bca:	12 33       	cpi	r17, 0x32	; 50
 bcc:	09 f0       	breq	.+2      	; 0xbd0 <__stack+0x371>
 bce:	5b c0       	rjmp	.+182    	; 0xc86 <__stack+0x427>
		if(por > 30){ 
 bd0:	7f e1       	ldi	r23, 0x1F	; 31
 bd2:	87 16       	cp	r8, r23
 bd4:	91 04       	cpc	r9, r1
 bd6:	0c f4       	brge	.+2      	; 0xbda <__stack+0x37b>
 bd8:	43 c0       	rjmp	.+134    	; 0xc60 <__stack+0x401>
			if (dir == 0){
 bda:	ab 96       	adiw	r28, 0x2b	; 43
 bdc:	8e ad       	ldd	r24, Y+62	; 0x3e
 bde:	9f ad       	ldd	r25, Y+63	; 0x3f
 be0:	ab 97       	sbiw	r28, 0x2b	; 43
 be2:	89 2b       	or	r24, r25
 be4:	91 f5       	brne	.+100    	; 0xc4a <__stack+0x3eb>
 				  dmx[0] = 255;		//pas
 be6:	09 83       	std	Y+1, r16	; 0x01
				  dmx[1] = 255;
 be8:	0a 83       	std	Y+2, r16	; 0x02
				  dmx[2] = 255;
 bea:	0b 83       	std	Y+3, r16	; 0x03
				  dmx[3] = 0;
 bec:	1c 82       	std	Y+4, r1	; 0x04
    			  dmx[4] = 0;
 bee:	1d 82       	std	Y+5, r1	; 0x05
				  dmx[5] = 0;
 bf0:	1e 82       	std	Y+6, r1	; 0x06
    			  dmx[6] = 255;
 bf2:	0f 83       	std	Y+7, r16	; 0x07
    			 /*
				  dmx[7] = 255;	//kruhy
    			  dmx[8] = 36;
    			  dmx[9] = 255;
    			  dmx[10] = 70;*/
				  dmx[7] = 255;	//kruhy
 bf4:	08 87       	std	Y+8, r16	; 0x08
    			  dmx[8] = 0;
 bf6:	19 86       	std	Y+9, r1	; 0x09
    			  dmx[9] = 255;
 bf8:	0a 87       	std	Y+10, r16	; 0x0a
    			  dmx[10] = 0;
 bfa:	1b 86       	std	Y+11, r1	; 0x0b
				  //-----------------------
    			  dmx[11]=0;		//polgula
 bfc:	1c 86       	std	Y+12, r1	; 0x0c
				  dmx[12]=255;
 bfe:	0d 87       	std	Y+13, r16	; 0x0d
				  dmx[13]=0;     
 c00:	1e 86       	std	Y+14, r1	; 0x0e
    			  dmx[14]=255;      
 c02:	0f 87       	std	Y+15, r16	; 0x0f
    			  dmx[15]=255;       
 c04:	08 8b       	std	Y+16, r16	; 0x10
    			  dmx[16]=255;       
 c06:	09 8b       	std	Y+17, r16	; 0x11
    			  dmx[17]=255;       
 c08:	0a 8b       	std	Y+18, r16	; 0x12
				  dmx[18]=0;
 c0a:	1b 8a       	std	Y+19, r1	; 0x13
				  //------------------------ 
				  dmx[19]=255;		//reflektory
 c0c:	0c 8b       	std	Y+20, r16	; 0x14
				  dmx[20]=255;
 c0e:	0d 8b       	std	Y+21, r16	; 0x15
				  dmx[21]=255;     
 c10:	0e 8b       	std	Y+22, r16	; 0x16
    			  dmx[22]=255;      
 c12:	0f 8b       	std	Y+23, r16	; 0x17
    			  dmx[23]=0;       
 c14:	18 8e       	std	Y+24, r1	; 0x18
    			  dmx[24]=0;       
 c16:	19 8e       	std	Y+25, r1	; 0x19
    			  dmx[25]=0;       
 c18:	1a 8e       	std	Y+26, r1	; 0x1a
				  dmx[26]=0;	
 c1a:	1b 8e       	std	Y+27, r1	; 0x1b
				  //------------------------ 
				  dmx[27]=255;		//1x reflektor
 c1c:	0c 8f       	std	Y+28, r16	; 0x1c
				  dmx[28]=255;
 c1e:	0d 8f       	std	Y+29, r16	; 0x1d
				  dmx[29]=255;     
 c20:	0e 8f       	std	Y+30, r16	; 0x1e
    			  dmx[30]=255;      
 c22:	0f 8f       	std	Y+31, r16	; 0x1f
    			  dmx[31]=0;       
 c24:	18 a2       	std	Y+32, r1	; 0x20
    			  dmx[32]=0;       
 c26:	19 a2       	std	Y+33, r1	; 0x21
    			  dmx[33]=0;       
 c28:	1a a2       	std	Y+34, r1	; 0x22
				  dmx[34]=0;	
 c2a:	1b a2       	std	Y+35, r1	; 0x23
				  //------------------------ 
				  dmx[35]=255;		//2x reflektor
 c2c:	0c a3       	std	Y+36, r16	; 0x24
				  dmx[36]=255;
 c2e:	0d a3       	std	Y+37, r16	; 0x25
				  dmx[37]=255;     
 c30:	0e a3       	std	Y+38, r16	; 0x26
    			  dmx[38]=0;      
 c32:	1f a2       	std	Y+39, r1	; 0x27
    			  dmx[39]=0;       
 c34:	18 a6       	std	Y+40, r1	; 0x28
    			  dmx[40]=0;       	
 c36:	19 a6       	std	Y+41, r1	; 0x29
 c38:	88 24       	eor	r8, r8
 c3a:	99 24       	eor	r9, r9
 c3c:	21 e0       	ldi	r18, 0x01	; 1
 c3e:	30 e0       	ldi	r19, 0x00	; 0
 c40:	ab 96       	adiw	r28, 0x2b	; 43
 c42:	3f af       	std	Y+63, r19	; 0x3f
 c44:	2e af       	std	Y+62, r18	; 0x3e
 c46:	ab 97       	sbiw	r28, 0x2b	; 43
 c48:	1e c0       	rjmp	.+60     	; 0xc86 <__stack+0x427>
 c4a:	fe 01       	movw	r30, r28
 c4c:	31 96       	adiw	r30, 0x01	; 1
				  //------------------------ 
    			dir =1;
			}
			else{ 
				for(por=0;por<41;por++) dmx[por]=0;
 c4e:	11 92       	st	Z+, r1
 c50:	af 96       	adiw	r28, 0x2f	; 47
 c52:	6e ad       	ldd	r22, Y+62	; 0x3e
 c54:	7f ad       	ldd	r23, Y+63	; 0x3f
 c56:	af 97       	sbiw	r28, 0x2f	; 47
 c58:	e6 17       	cp	r30, r22
 c5a:	f7 07       	cpc	r31, r23
 c5c:	c1 f7       	brne	.-16     	; 0xc4e <__stack+0x3ef>
 c5e:	04 c0       	rjmp	.+8      	; 0xc68 <__stack+0x409>
				dir = 0;
			}
			por = 0;
		}
		else por++;
 c60:	08 94       	sec
 c62:	81 1c       	adc	r8, r1
 c64:	91 1c       	adc	r9, r1
 c66:	0f c0       	rjmp	.+30     	; 0xc86 <__stack+0x427>
 c68:	88 24       	eor	r8, r8
 c6a:	99 24       	eor	r9, r9
 c6c:	ab 96       	adiw	r28, 0x2b	; 43
 c6e:	1f ae       	std	Y+63, r1	; 0x3f
 c70:	1e ae       	std	Y+62, r1	; 0x3e
 c72:	ab 97       	sbiw	r28, 0x2b	; 43
 c74:	08 c0       	rjmp	.+16     	; 0xc86 <__stack+0x427>
 c76:	88 24       	eor	r8, r8
 c78:	99 24       	eor	r9, r9
 c7a:	81 e0       	ldi	r24, 0x01	; 1
 c7c:	90 e0       	ldi	r25, 0x00	; 0
 c7e:	ab 96       	adiw	r28, 0x2b	; 43
 c80:	9f af       	std	Y+63, r25	; 0x3f
 c82:	8e af       	std	Y+62, r24	; 0x3e
 c84:	ab 97       	sbiw	r28, 0x2b	; 43
	
	}
	sendDMX(dmx,41);	
 c86:	85 2d       	mov	r24, r5
 c88:	94 2d       	mov	r25, r4
 c8a:	69 e2       	ldi	r22, 0x29	; 41
 c8c:	70 e0       	ldi	r23, 0x00	; 0
 c8e:	0e 94 9f 00 	call	0x13e	; 0x13e <sendDMX>
 c92:	b0 cb       	rjmp	.-2208   	; 0x3f4 <main+0xde>
}
 c94:	12 e3       	ldi	r17, 0x32	; 50
 c96:	d1 cd       	rjmp	.-1118   	; 0x83a <main+0x524>

00000c98 <__divmodhi4>:
 c98:	97 fb       	bst	r25, 7
 c9a:	09 2e       	mov	r0, r25
 c9c:	07 26       	eor	r0, r23
 c9e:	0a d0       	rcall	.+20     	; 0xcb4 <__divmodhi4_neg1>
 ca0:	77 fd       	sbrc	r23, 7
 ca2:	04 d0       	rcall	.+8      	; 0xcac <__divmodhi4_neg2>
 ca4:	0c d0       	rcall	.+24     	; 0xcbe <__udivmodhi4>
 ca6:	06 d0       	rcall	.+12     	; 0xcb4 <__divmodhi4_neg1>
 ca8:	00 20       	and	r0, r0
 caa:	1a f4       	brpl	.+6      	; 0xcb2 <__divmodhi4_exit>

00000cac <__divmodhi4_neg2>:
 cac:	70 95       	com	r23
 cae:	61 95       	neg	r22
 cb0:	7f 4f       	sbci	r23, 0xFF	; 255

00000cb2 <__divmodhi4_exit>:
 cb2:	08 95       	ret

00000cb4 <__divmodhi4_neg1>:
 cb4:	f6 f7       	brtc	.-4      	; 0xcb2 <__divmodhi4_exit>
 cb6:	90 95       	com	r25
 cb8:	81 95       	neg	r24
 cba:	9f 4f       	sbci	r25, 0xFF	; 255
 cbc:	08 95       	ret

00000cbe <__udivmodhi4>:
 cbe:	aa 1b       	sub	r26, r26
 cc0:	bb 1b       	sub	r27, r27
 cc2:	51 e1       	ldi	r21, 0x11	; 17
 cc4:	07 c0       	rjmp	.+14     	; 0xcd4 <__udivmodhi4_ep>

00000cc6 <__udivmodhi4_loop>:
 cc6:	aa 1f       	adc	r26, r26
 cc8:	bb 1f       	adc	r27, r27
 cca:	a6 17       	cp	r26, r22
 ccc:	b7 07       	cpc	r27, r23
 cce:	10 f0       	brcs	.+4      	; 0xcd4 <__udivmodhi4_ep>
 cd0:	a6 1b       	sub	r26, r22
 cd2:	b7 0b       	sbc	r27, r23

00000cd4 <__udivmodhi4_ep>:
 cd4:	88 1f       	adc	r24, r24
 cd6:	99 1f       	adc	r25, r25
 cd8:	5a 95       	dec	r21
 cda:	a9 f7       	brne	.-22     	; 0xcc6 <__udivmodhi4_loop>
 cdc:	80 95       	com	r24
 cde:	90 95       	com	r25
 ce0:	bc 01       	movw	r22, r24
 ce2:	cd 01       	movw	r24, r26
 ce4:	08 95       	ret

00000ce6 <_exit>:
 ce6:	f8 94       	cli

00000ce8 <__stop_program>:
 ce8:	ff cf       	rjmp	.-2      	; 0xce8 <__stop_program>
